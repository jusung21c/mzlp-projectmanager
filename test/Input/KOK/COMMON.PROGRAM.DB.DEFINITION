! 음성인식 진입 시 마다 초기화 및 설정이 필요한 항목에 대하여 초기화 수행
JINIE Common.Initializer ()

	! FULL BARGE IN
	CALL System.Param.Bargein () ;
	
	! SA/EA ADAPTATION
	CALL System.Param.Adaptation () ;
	
	! DUAL THRESHOLD
	CALL System.Param.Threshold () ;

	! VARIABLE INITIALIZER
	$S.ACTION.VALUE := "" ;
	S.PRE.RESULT.FIX.CID := "" ;
	S.BT.ACTION.TEMP := "" ;
	S.INNER.PROMPT.KINDLY.STR := "" ;
	S.INNER.PROMPT.SIMPLY.STR := "" ;
	S.INNER.PROMPT.DISPLY.STR := "" ;
	N.INNER.CONFIDENCE.FIRST.VALUE := 0 ;
	N.INNER.CONFIDENCE.SECOND.VALUE := 0 ;
	N.INNER.CONFIDENCE.GAP.VALUE := 0 ;
	N.STORE.NBEST := 0 ;
	S.INNER.TEMP.STRING := "" ;
	S.INNER.SCREEN.STRING := "" ;
	N.INNER.NAVIGATION.HELP.FLAG := 0 ;
	S.INNER.RADIOSTATION.INFO := "" ;
	S.INNER.CATEGORY.INFO := "" ;
	
	! FALLBACK
	$N.FALLBACK.FLAG := @N_FLAG_OFF ;
EOP

! PRE PROCESSOR 사용 PROCESS의 PROCESS 및 PROGRAM 사용 여부 설정
! DIALOG 진입 시 마다 초기화가 필요한 항목에 대하여 초기화 수행
JINIE Common.ControlPre (NUMBER N.DIALOG)

	CALL Common.SetStagePre (N.DIALOG) ;
	CALL Common.InitializerPre (N.DIALOG) ;
	CALL Common.SetTtsTuningDb (N.DIALOG) ;
EOP

! Pre Processor 진입 시 마다 Stage on/off 설정
JINIE Common.SetStagePre (NUMBER N.DIALOG)
	
	! CONTROL 
	$N.CONTROL.PROCESS.INIT := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.INIT := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.CONTEXT := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.CONTEXT := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.GUIDANCE := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.RECOGNITION := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.RECOGNITION := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.RULE := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.RULE := @N_FLAG_ON ;
	
	IF N.DIALOG = @N_DIALOG_NO_RECOG_DRIVING THEN
		BEGIN
			$N.CONTROL.PROCESS.GUIDANCE := @N_FLAG_OFF ;
			$N.CONTROL.PROGRAM.RECOGNITION := @N_FLAG_OFF ;
		END
	IF N.DIALOG = @N_DIALOG_NO_RECOG_BACK | N.DIALOG = @N_DIALOG_NO_RECOG_EXIT THEN
		BEGIN
			$N.CONTROL.PROGRAM.RECOGNITION := @N_FLAG_OFF ;
		END
EOP

! Pre Processor 진입 시 마다 초기화 및 설정이 필요한 항목에 대하여 수행
JINIE Common.InitializerPre (NUMBER N.DIALOG)
	
	IF N.DIALOG = @N_DIALOG_NAVI_POI_LOCATION THEN
		BEGIN
			! RULE FORMAT
			$N.RULE.FORMAT := 2 ; ! ID
		END
	ELSE
		BEGIN
			$N.RULE.FORMAT := 1 ; ! STRING
		END
		
	IF N.DIALOG = @N_DIALOG_NO_RECOG_EXIT THEN
		BEGIN
			N.EXIT.ACTION.TRANSITION := N.EXIT.ACTION.TRANSITION ;
		END
	ELSE
		BEGIN
			N.EXIT.ACTION.TRANSITION := 99999 ;
		END
		
	$S.STT.RESULT.ID := "" ;
	$S.STT.RESULT.STRING := "" ;
	$S.STT.RESULT.OFFLINE.ID := "" ;
	$S.STT.RESULT.OFFLINE.STRING := "" ;
	$S.STT.RESULT.ONLINE.STRING := "" ;
	
	$S.CONTEXT.LEX := "" ;
	$S.RESULT.ID := "" ;
	$S.RESULT.STRING := "" ;
	
	$S.ACTION.VALUE := "" ;
	S.ACTION.STRING := "" ;
	N.INNER.RECOG.COUNT.NUM := 0 ;
	N.CONTROL.TIMEOUT.NUM := 0 ;
	N.CONTROL.REJECTION.NUM := 0 ;
	N.REF.NBEST.COUNT := 1 ;
	N.RESULT.CONUT.NUM := 1 ;
EOP

! TTS type에 따른 TTS tuning DB 설정
JINIE Common.SetTtsTuningDb (NUMBER N.DIALOG)

	! Default : VR mode
	$S.OUTPUT.RESOURCE.EXPRESSION := "" ;
	
	IF N.DIALOG = @N_DIALOG_VIRTUAL_TTS_BT THEN
		BEGIN
			$S.OUTPUT.RESOURCE.EXPRESSION := "" ;
		END
	IF N.DIALOG = @N_DIALOG_VIRTUAL_TTS_NAVI THEN
		BEGIN
			$S.OUTPUT.RESOURCE.EXPRESSION := "" ;
		END
	IF N.DIALOG = @N_DIALOG_VIRTUAL_TTS_SMS THEN
		BEGIN
			! $N.TTS.PARAMETER.ENGINE.CATEGORY = 1 일 경우, SMS용 Voice DB 로드 후 Tima에서 초기화 (Only VW, Nuance엔진의 경우 사용안함)
			! $N.TTS.PARAMETER.ENGINE.CATEGORY := 1 ; ! SMS DB 미 반영
			$S.OUTPUT.RESOURCE.EXPRESSION := "" ;
		END
		
	LOG "LP LOG : Common.SetTtsTuningDb - $S.OUTPUT.RESOURCE.EXPRESSION = " + $S.OUTPUT.RESOURCE.EXPRESSION ;
	
	! SMS DB 미 반영
	!S.INNER.LOG.STRING ~= $N.TTS.PARAMETER.ENGINE.CATEGORY ;
	!LOG "LP LOG : Common.SetTtsTuningDb - $N.TTS.PARAMETER.ENGINE.CATEGORY = " + S.INNER.LOG.STRING ;
EOP

! DIALOG에서 사용 가능한 Multi-Modal ID 저장
JINIE Common.ContextKeywords (NUMBER N.DIALOG)

	TEMPORARY STRING S.GENRE.ID := "" ;
	TEMPORARY NUMBER N.TEMP := 2 ;
	
	! DEFAULT
	$S.CONTEXT.KEYWORDS := "\@N_TAG_HELP_ID \@N_TAG_EXIT_ID" ;
	
	IF N.DIALOG = @N_DIALOG_MAINMENU THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_PHONE_CALL_ID \@N_TAG_RADIO_ID \@N_TAG_FM_ID \@N_TAG_FM_NUMBER1_ID \@N_TAG_FM_NUMBER2_ID \@N_TAG_MANUAL_FM_ID \@N_TAG_AM_ID \@N_TAG_MANUAL_AM_ID
			\@N_TAG_DMB_ID \@N_TAG_RADIO_AST_ID \@N_TAG_DMB_AST_ID \@N_TAG_STATION_LIST_ID \@N_TAG_MUSIC_ID \@N_TAG_CD_ID \@N_TAG_IPOD_ID \@N_TAG_BT_AUDIO_ID \@N_TAG_AUX_ID \@N_TAG_MY_MUSIC_ID \@N_TAG_USB_ID 
			\@N_TAG_VOICE_MEMO_ID \@N_TAG_DESTINATION_SEARCH_ID \@N_TAG_FIND_POI_ID \@N_TAG_SHOW_MAP_ID \@N_TAG_PREVIOUS_POINT_ID \@N_TAG_PREVIOUS_DESTINATION_ID 
			\@N_TAG_PREVIOUS_SEARCH_ID \@N_TAG_PREVIOUS_START_ID \@N_TAG_TRAFFIC_INFO_ID \@N_TAG_GO_HOME_ID \@N_TAG_GO_TO_OFFICE_ID \@N_TAG_TURN_GUIDANCE_ON_ID \@N_TAG_TURN_GUIDANCE_OFF_ID 
			\@N_TAG_STOP_GUIDANCE_ID \@N_TAG_RESUME_GUIDANCE_ID \@N_TAG_DESTINATION_INFO_ID \@N_TAG_ROUTE_OPTION_ID \@N_TAG_FIND_FASTER_TIME_ID \@N_TAG_FIND_SHORTER_DISTANCE_ID \@N_TAG_SHOW_ROUTE_ID 
			 \@N_TAG_HELP_ID \@N_TAG_EXIT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_PHONE_CALL_ID \@N_TAG_MANUAL_QUESTION_MARK_ID \@N_TAG_BACK_ID \@N_TAG_EXIT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NBEST_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_BT_VAD THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_MANUAL_VAD_MOBILE_ID \@N_TAG_MANUAL_VAD_HOME_ID \@N_TAG_MANUAL_VAD_OFFICE_ID \@N_TAG_MANUAL_VAD_OTHER_ID \@N_TAG_NAME_ID 
			\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY_NUM THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_BT_VAD_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_YES_ID \@N_TAG_NO_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_RADIO THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_RADIO_ID \@N_TAG_FM_ID \@N_TAG_FM_NUMBER1_ID \@N_TAG_FM_NUMBER2_ID \@N_TAG_AM_ID \@N_TAG_MANUAL_FM_ID \@N_TAG_MANUAL_AM_ID 
			\@N_TAG_RADIO_AST_ID \@N_TAG_MANUAL_PRESET_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_MANUAL_QUESTION_MARK_ID"  ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_AM_FREQUENCY THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_FM_FREQUENCY THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_RADIO_PRESET THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_PRESET_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_CATEGORY THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_PHONE_HELP_ID \@N_TAG_RADIO_HELP_ID \@N_TAG_MEDIA_HELP_ID \@N_TAG_NAVIGATION_HELP_ID \@N_TAG_DMB_HELP_ID \@N_TAG_BACK_ID \@N_TAG_EXIT_ID 
			\@N_TAG_MANUAL_QUESTION_MARK_ID \@N_TAG_MANUAL_PHONE_QUESTION_MARK_ID \@N_TAG_MANUAL_RADIO_QUESTION_MARK_ID \@N_TAG_MANUAL_MEDIA_QUESTION_MARK_ID \@N_TAG_MANUAL_DMB_QUESTION_MARK_ID \@N_TAG_MANUAL_NAVI_QUESTION_MARK_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NO_RECOG_DRIVING THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_MANUAL_PTT_ID \@N_TAG_EXIT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NO_RECOG_BACK THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_BACK_ID \@N_TAG_MANUAL_PTT_ID \@N_TAG_EXIT_BACK_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NO_RECOG_EXIT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_BACK_ID \@N_TAG_MANUAL_PTT_ID \@N_TAG_EXIT_EXIT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_DESTINATION_SEARCH_ID \@N_TAG_FIND_POI_ID \@N_TAG_SHOW_MAP_ID 
			\@N_TAG_PREVIOUS_POINT_ID \@N_TAG_PREVIOUS_DESTINATION_ID \@N_TAG_PREVIOUS_SEARCH_ID \@N_TAG_PREVIOUS_START_ID \@N_TAG_TRAFFIC_INFO_ID 
			\@N_TAG_GO_HOME_ID \@N_TAG_GO_TO_OFFICE_ID \@N_TAG_TURN_GUIDANCE_ON_ID \@N_TAG_TURN_GUIDANCE_OFF_ID \@N_TAG_STOP_GUIDANCE_ID \@N_TAG_RESUME_GUIDANCE_ID 
			\@N_TAG_DESTINATION_INFO_ID \@N_TAG_ROUTE_OPTION_ID \@N_TAG_FIND_FASTER_TIME_ID \@N_TAG_FIND_SHORTER_DISTANCE_ID \@N_TAG_SHOW_ROUTE_ID 
			\@N_TAG_MANUAL_QUESTION_MARK_ID \@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_POI_LOCATION THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_GANGWONDO_ID \@N_TAG_NAVI_GYEONGGIDO_ID \@N_TAG_NAVI_GYEONGSANGNAMDO_ID
			\@N_TAG_NAVI_GYEONGSANGBUKDO_ID \@N_TAG_NAVI_GWANGJU_ID \@N_TAG_NAVI_DAEGU_ID \@N_TAG_NAVI_DAEJEON_ID \@N_TAG_NAVI_BUSAN_ID \@N_TAG_NAVI_SEOUL_ID \@N_TAG_NAVI_SEJONG_ID \@N_TAG_NAVI_ULSAN_ID
			\@N_TAG_NAVI_INCHEON_ID \@N_TAG_NAVI_JEOLLANAMDO_ID \@N_TAG_NAVI_JEOLLABUKDO_ID \@N_TAG_NAVI_JEJUDO_ID \@N_TAG_NAVI_CHUNGCHEONGNAMDO_ID \@N_TAG_NAVI_CHUNGCHEONGBUKDO_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_NBEST_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_AV_BROADCAST_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_AM_LIST_ID \@N_TAG_FM_LIST_ID \@N_TAG_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_DMB THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_DMB_AST_ID \@N_TAG_DMB_ID \@N_TAG_STATION_LIST_ID \@N_TAG_MANUAL_QUESTION_MARK_ID \@N_TAG_INNER_RESULT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_MEDIA THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_MUSIC_ID \@N_TAG_CD_ID \@N_TAG_USB_ID \@N_TAG_MY_MUSIC_ID \@N_TAG_IPOD_ID \@N_TAG_BT_AUDIO_ID \@N_TAG_AUX_ID \@N_TAG_VOICE_MEMO_ID
			\@N_TAG_PLAY_ID \@N_TAG_PAUSE_ID \@N_TAG_MANUAL_TRACK_ID \@N_TAG_SHUFFLE_ID \@N_TAG_SHUFFLE_OFF_ID \@N_TAG_REPEAT_ID \@N_TAG_REPEAT_OFF_ID 
			\@N_TAG_MANUAL_QUESTION_MARK_ID \@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_TRACKLIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_WAY_SELECT THEN
		BEGIN
			 $S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_ADD_WAYPOINT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_CALL_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_NAVI_DIAL_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_CALL_WAY_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_NAVI_DIAL_ID \@N_TAG_ADD_WAYPOINT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_YESNO_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_YESNO_WAY_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_ADD_WAYPOINT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_PRE_YESNO_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_PRE_WAY_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_ADD_WAYPOINT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_PRE_YESNO_CALL_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_NAVI_DIAL_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_PRE_CALL_WAY_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_NAVI_DIAL_ID \@N_TAG_ADD_WAYPOINT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_POINT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_DESTINATION THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_SEARCH THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_START THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY THEN
		BEGIN
			WHILE N.TEMP < N.GENRE.COUNT.BIG DO
				BEGIN
					S.GENRE.ID := S.GENRE.ID + " " + S.GENRE.TABLE.BIG[N.TEMP][4];
					N.TEMP := N.TEMP + 1 ;
				END
			
			N.TEMP := 2 ;
			WHILE N.TEMP < N.GENRE.COUNT.MID DO
				BEGIN
					S.GENRE.ID := S.GENRE.ID + " " + S.GENRE.TABLE.MID[N.TEMP][4];
					N.TEMP := N.TEMP + 1 ;
				END
			
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID " + S.GENRE.ID ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_PREVIOUS_PAGE_ID
			\@N_TAG_NEAR_CURRENT_POSITION_ID \@N_TAG_NEAR_DESTINATION_ID \@N_TAG_ALONG_ROUTE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_NONE_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NEAR_CURRENT_POSITION_ID \@N_TAG_NEAR_DESTINATION_ID \@N_TAG_ALONG_ROUTE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_ROUTE_OPTION THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_FASTER_TIME_ID \@N_TAG_SHORTER_DISTANCE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_SERVER THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_MANUAL_NETWORK_DISCONNECTED_ID" ;
		END
		
	LOG "LP LOG : Common.ContextKeywords - $S.CONTEXT.KEYWORDS = " + $S.CONTEXT.KEYWORDS ;
EOP

! PRE PROCESSOR에서 사용하는 SYSTEM CALL 변수 호출
JINIE Common.SystemCallPre (NUMBER N.DIALOG)

	IF N.DIALOG = @N_DIALOG_MAINMENU THEN
		BEGIN
			IF N.VENDER.VR.MODE = 1 THEN
				BEGIN
					MESSAGE "(VH) \fN.BT.PHONE.CONNECT\fN.BT.CONTACT.NUMBER\fN.BT.DP.BUSY\fN.BT.DP.NUMBER\fS.SERVER.DATA.DATE\fS.SERVER.DATA.LATITUDE\fS.SERVER.DATA.LONGITUDE\fS.SERVER.DATA.ALTITUDE\fN.NAVI.SDCARD.EXIST" ;
				END
			ELSE
				BEGIN
					MESSAGE "(VH) \fN.BT.PHONE.CONNECT\fN.BT.CONTACT.NUMBER\fN.BT.DP.BUSY\fN.BT.DP.NUMBER\fN.NAVI.SDCARD.EXIST" ;
				END
		END
	
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE THEN
		BEGIN
			MESSAGE "(VH) \fN.BT.PHONE.CONNECT\fN.BT.CONTACT.NUMBER\fN.BT.DP.NUMBER" ;
		END
	
	IF N.DIALOG = @N_DIALOG_MAINMENU_SELECT THEN
		BEGIN
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_PHONE_CALL_ID" | S.PRE.RESULT.FIX.CID = "\@N_TAG_NAME_ID" | S.PRE.RESULT.FIX.CID = "\@N_TAG_VAD_CALL_ID" | S.PRE.RESULT.FIX.CID = "\@N_TAG_BT_AUDIO_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.BT.PHONE.CONNECT\fN.BT.PHONEBOOK.DOWNLOADABLE" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
		BEGIN
			IF N.VENDER.VR.MODE = 1 THEN
				BEGIN
					MESSAGE "(VH) \fS.SERVER.DATA.DATE\fS.SERVER.DATA.LATITUDE\fS.SERVER.DATA.LONGITUDE\fS.SERVER.DATA.ALTITUDE\fN.NAVI.SDCARD.EXIST" ;
				END
			ELSE
				BEGIN
					MESSAGE "(VH) \fN.NAVI.SDCARD.EXIST" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_SERVER THEN
		BEGIN
			MESSAGE "(VH) \fS.SERVER.DATA.DATE\fS.SERVER.DATA.LATITUDE\fS.SERVER.DATA.LONGITUDE\fS.SERVER.DATA.ALTITUDE" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_SELECT THEN
		BEGIN
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_FIND_POI_ID" | S.PRE.RESULT.FIX.CID = "\@N_TAG_FIND_CATEGORY_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.SEARCH.RESULT.NUM" ;
				END
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_GO_HOME_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.HOME.REGISTERED" ;
				END
			IF S.PRE.RESULT.FIX.CID  = "\@N_TAG_GO_TO_OFFICE_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.OFFICE.REGISTERED" ;
				END
		END
EOP

! 서버 음성인식 사용을 위한 정보 설정 및 제어
! 서버 선택/ 사용 여부/ 연결에 필요한 정보/ 사용 모드 선택/ CUT-OFF Intention 등 설정
JINIE Common.ServerSettingControl (NUMBER N.DIALOG)

	$N.STT.PARAMETER.HTTP.MBS.FLAG := @N_FLAG_OFF ;
	$N.STT.PARAMETER.HTTP.TIMEOUT.FLAG := @N_FLAG_OFF ;
	
	$N.STT.CONNECTION.MODE := @N_FLAG_OFF ; ! DICTATION ON/OFF
	
	$N.STT.PARAMETER.HTTP.MBS.VALUE := 0 ;
	$N.STT.PARAMETER.HTTP.TIMEOUT.VALUE := 0 ;
	
	$S.STT.CONNECTION.LATITUDE := "" ;
	$S.STT.CONNECTION.LONGITUDE := "" ;
	
	$N.STT.CONNECTION.FLAG := @N_SERVER_TYPE_NONE ;
	$S.STT.CONNECTION.URL  := "" ;
	$S.STT.CONNECTION.DATA := "" ;
	$S.STT.CONNECTION.PORT := "" ;
	
	! Embedded에서 해당 INTENT가 전달되면 SERVER를 기다림, 1개 이상 정의 시 "INTENT\fINTENT"로 설정
	$S.STT.CUTOFF.INTENTS := "" ;
	
	! 1. Embedded conf < cutoff threshold : 서버 결과에 따름
	! 2. Embedded conf > cutoff threshold & cutoff intent가 아니면 : embedded 결과 따름
	! 3. Embedded conf > cutoff threshold & cutoff intent 이면 : 서버 결과 따름
	$N.STT.CUTOFF.THRESHOLD := 0 ;
	
	! Gate Command 정의(Tima에서  Gate Command를 제거한 결과를 SearchPhrase의 Value로 전달)
	$S.STT.ONLINE.GATECOMMAND := "" ;
	
	IF $N.STATUS.DIALOG = @N_DIALOG_MAINMENU | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION | $N.STATUS.DIALOG = @N_DIALOG_NAVI_FIND_SERVER THEN
		BEGIN
			IF N.VENDER.VR.MODE = 1 & N.NETWORK.SUBSCRIBED = 1 & N.NETWORK.SETTING = 1 THEN
				BEGIN
					IF N.SERVER.SETTING = @N_SERVER_TYPE_NONE THEN
						BEGIN
							$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
							$S.STT.CONNECTION.URL  := "" ;
							$S.STT.CONNECTION.DATA := "" ;
							$S.STT.CONNECTION.PORT := "" ;
							$S.STT.CUTOFF.INTENTS := "" ;
							$N.STT.CUTOFF.THRESHOLD := 0 ;
							$N.STT.CUTOFF.THRESHOLD := 4000 ;
						END
					ELSE
						BEGIN
							IF N.SERVER.SETTING = @N_SERVER_TYPE_ETRI THEN
								BEGIN
									$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
									$S.STT.CONNECTION.URL  := "\@S_MESSAGE_URL_ETRI" ;
									$S.STT.CONNECTION.DATA := "\@S_MESSAGE_DATA_DICTATION_ETRI" ;
									$S.STT.CONNECTION.PORT := "" ;
									$S.STT.CUTOFF.INTENTS := "" ;
									$N.STT.CUTOFF.THRESHOLD := 0 ;
									$N.STT.PARAMETER.HTTP.TIMEOUT.VALUE := 10 ;
								END
							IF N.SERVER.SETTING = @N_SERVER_TYPE_NUANCE THEN
								BEGIN
									$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
									$S.STT.CONNECTION.URL  := "\@S_MESSAGE_URL_NUANCE" ;
									$S.STT.CONNECTION.DATA := "\@S_MESSAGE_DATA_DICTATION_NUANCE" + "\"<" + $S.STT.CONNECTION.LATITUDE + ", " + $S.STT.CONNECTION.LONGITUDE + "\@S_MESSAGE_DATA_DICTATION_NUANCE_REAR" ;
									$S.STT.CONNECTION.PORT := "" ;
									$S.STT.CUTOFF.INTENTS := "" ;
									$N.STT.CUTOFF.THRESHOLD := 0 ;
									$N.STT.PARAMETER.HTTP.TIMEOUT.FLAG := @N_FLAG_ON ;
									$N.STT.PARAMETER.HTTP.TIMEOUT.VALUE := 10000 ;
								END
							IF N.SERVER.SETTING = @N_SERVER_TYPE_KAKAO THEN
								BEGIN
									$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
									$S.STT.CONNECTION.URL  := "" ;
									$S.STT.CONNECTION.DATA := "" ;
									$S.STT.CONNECTION.PORT := "" ;
									$S.STT.CUTOFF.INTENTS := "WaitServerPOI\fWaitServerCategory\fWaitServer" ;
									$N.STT.CUTOFF.THRESHOLD := 4000 ;
									$S.STT.ONLINE.GATECOMMAND := "\@S_SERVER_GATE_COMMAND" ;
								END
							IF N.SERVER.SETTING = @N_SERVER_TYPE_RELAY_SERVER THEN
								BEGIN
									$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
									$S.STT.CONNECTION.URL  := S.SERVER.URL ;
									$S.STT.CONNECTION.DATA := "Authorization\f" + S.SERVER.DATA.AUTHORIZATION + "\n"
															+ "From\f" + S.SERVER.DATA.FROM + "\n"
															+ "To\f" + S.SERVER.DATA.TO + "\n"
															+ "Date\f" + S.SERVER.DATA.DATE + "\n"
															+ "VIN\f" + S.SERVER.DATA.VIN + "\n"
															+ "NADID\f" + S.SERVER.DATA.NADID + "\n"
															+ "Type\f" + S.SERVER.DATA.TYPE + "\n"
															+ "Lat\f" + S.SERVER.DATA.LATITUDE + "\n"
															+ "Lon\f" + S.SERVER.DATA.LONGITUDE + "\n"
															+ "Alt\f" + S.SERVER.DATA.ALTITUDE + "\n" ;
									$S.STT.CONNECTION.PORT := S.SERVER.PORT ;
									$S.STT.CUTOFF.INTENTS := "WaitServerPOI\fWaitServerCategory\fWaitServer" ;
									$N.STT.CUTOFF.THRESHOLD := 4000 ;
									$S.STT.ONLINE.GATECOMMAND := "\@S_SERVER_GATE_COMMAND" ;
								END
						END
				END
		END

	S.INNER.LOG.STRING ~= $N.STT.CONNECTION.FLAG ;
	LOG "LP LOG : Common.ServerSettingControl - $N.STT.CONNECTION.FLAG = " + S.INNER.LOG.STRING ;
	LOG "LP LOG : Common.ServerSettingControl - $S.STT.CONNECTION.URL = " + $S.STT.CONNECTION.URL ;
	LOG "LP LOG : Common.ServerSettingControl - $S.STT.CONNECTION.DATA = " + $S.STT.CONNECTION.DATA ;
	LOG "LP LOG : Common.ServerSettingControl - $S.STT.CONNECTION.PORT = " + $S.STT.CONNECTION.PORT ;
	LOG "LP LOG : Common.ServerSettingControl - $S.STT.CUTOFF.INTENTS = " + $S.STT.CUTOFF.INTENTS ;
	S.INNER.LOG.STRING ~= $N.STT.PARAMETER.HTTP.TIMEOUT.VALUE ;
	LOG "LP LOG : Common.ServerSettingControl - $N.STT.PARAMETER.HTTP.TIMEOUT.VALUE = " + S.INNER.LOG.STRING ;
EOP

! DIALOG에서 사용하는 LEX DB LOAD
JINIE Common.Lex (NUMBER N.DIALOG)

	TEMPORARY NUMBER N.LEX.TYPE := 1 ;
	
	! @N_LEX_BASE - 1
	! @N_LEX_NUM - 2
	! @N_LEX_NAME - 3
	! @N_LEX_SDCARD - 5
	! @N_LEX_SERVER - 7
	
	$S.CONTEXT.LEX := "\@N_LEX_BASE" ;
	
	! @N_LEX_NUM 사용
	IF N.DIALOG = @N_DIALOG_NBEST_LIST | N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY | N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY_NUM |
		 N.DIALOG = @N_DIALOG_BT_VAD_LIST | N.DIALOG = @N_DIALOG_MAINMENU_HELP_RADIO | N.DIALOG = @N_DIALOG_MAINMENU_AM_FREQUENCY |
		 N.DIALOG = @N_DIALOG_MAINMENU_FM_FREQUENCY | N.DIALOG = @N_DIALOG_MAINMENU_RADIO_PRESET |
		 N.DIALOG = @N_DIALOG_NAVI_NBEST_LIST | N.DIALOG = @N_DIALOG_NAVI_LIST | N.DIALOG = @N_DIALOG_AV_BROADCAST_LIST |
		 N.DIALOG = @N_DIALOG_MAINMENU_HELP_MEDIA | N.DIALOG = @N_DIALOG_MAINMENU_TRACKLIST |
		 N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_POINT | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_DESTINATION |
		 N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_SEARCH | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_START | N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_LIST THEN
		BEGIN
			N.LEX.TYPE := N.LEX.TYPE * 2 ;
		END
	
	! @N_LEX_NAME 사용
	IF N.DIALOG = @N_DIALOG_MAINMENU | N.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE | N.DIALOG = @N_DIALOG_BT_VAD THEN
		BEGIN
			N.LEX.TYPE := N.LEX.TYPE * 3 ;
		END
	
	! @N_LEX_SDCARD 사용
	IF N.DIALOG = @N_DIALOG_MAINMENU | N.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION | 
	N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY | N.DIALOG = @N_DIALOG_NAVI_POI_LOCATION THEN
		BEGIN
			IF N.NAVI.SDCARD.EXIST = 1 THEN
				BEGIN
					N.LEX.TYPE := N.LEX.TYPE * 5 ;
				END
			ELSE
				BEGIN
					N.LEX.TYPE := N.LEX.TYPE ;
				END
		END
	
	! @N_LEX_SERVER 사용
	IF N.DIALOG = @N_DIALOG_MAINMENU | N.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION | N.DIALOG = @N_DIALOG_NAVI_FIND_SERVER THEN
		BEGIN
			IF N.VENDER.VR.MODE = 1 & N.NETWORK.SUBSCRIBED = 1 & N.NETWORK.SETTING = 1 THEN
				BEGIN
					N.LEX.TYPE := N.LEX.TYPE * 7 ; ! + SERVER
				END
			ELSE
				BEGIN
					N.LEX.TYPE := N.LEX.TYPE ;
				END
		END
		
	! LEX DB LOAD
	IF N.LEX.TYPE % 2 = 0 THEN
		BEGIN
			$S.CONTEXT.LEX := $S.CONTEXT.LEX + "+ \@N_LEX_NUM" ;
		END
	IF N.LEX.TYPE % 3 = 0 THEN
		BEGIN
			$S.CONTEXT.LEX := $S.CONTEXT.LEX + "+ \@N_LEX_NAME" ;
		END
	IF N.LEX.TYPE % 5 = 0 THEN
		BEGIN
			$S.CONTEXT.LEX := $S.CONTEXT.LEX + "+ \@N_LEX_SDCARD" ;
		END
	IF N.LEX.TYPE % 7 = 0 THEN
		BEGIN
			$S.CONTEXT.LEX := $S.CONTEXT.LEX + "+ \@N_LEX_SERVER" ;
		END
	
	! POI LOCATION
	IF N.DIALOG = @N_DIALOG_NAVI_POI_LOCATION THEN
		BEGIN
			IF N.NAVI.CURRENT.REGION < 1 | N.NAVI.CURRENT.REGION > 17 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_SEJONG" ; ! DEFAULT
				END
			IF N.NAVI.CURRENT.REGION = 1 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_GANGWONDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 2 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_GYEONGGIDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 3 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_GYEONGSANGNAMDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 4 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_GYEONGSANGBUKDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 5 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_GWANGJU" ;
				END
			IF N.NAVI.CURRENT.REGION = 6 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_DAEGU" ;
				END
			IF N.NAVI.CURRENT.REGION = 7 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_DAEJEON" ;
				END
			IF N.NAVI.CURRENT.REGION = 8 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_BUSAN" ;
				END
			IF N.NAVI.CURRENT.REGION = 9 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_SEOUL" ;
				END
			IF N.NAVI.CURRENT.REGION = 10 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_SEJONG" ;
				END
			IF N.NAVI.CURRENT.REGION = 11 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_ULSAN" ;
				END
			IF N.NAVI.CURRENT.REGION = 12 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_INCHEON" ;
				END
			IF N.NAVI.CURRENT.REGION = 13 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_JEOLLANAMDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 14 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_JEOLLABUKDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 15 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_JEJUDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 16 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + "+ \@N_LEX_CHUNGCHEONGNAMDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 17 THEN
				BEGIN
					$S.CONTEXT.LEX := $S.CONTEXT.LEX + " + \@N_LEX_CHUNGCHEONGBUKDO" ;
				END
		END
EOP

! DIALOG에서 사용하는 GRAMMAR 및 ACTIVATE RULE 설정
JINIE Common.GrammarLoad (NUMBER N.DIALOG)
	
	! 2017/02/24 검토 : TEMPORARY 사용 검토
	S.GRAMMAR := "" ;
	S.ACTIVATION := "" ;
	S.SLM.GRAMMAR := "" ;
	S.SLM.GRAMMAR.BT.FULL := "" ;
	S.SLM.GRAMMAR.BT.REVERSE := "" ;
	S.BNF.GRAMMAR := "" ;
	S.BNF.ACTIVATION := "" ;
	
	S.INNER.LOG.STRING ~= N.NAVI.SDCARD.EXIST ;
	LOG "LP LOG : Common.GrammarLoad - N.NAVI.SDCARD.EXIST = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.BT.DP.BUSY ;
	LOG "LP LOG : Common.GrammarLoad - N.BT.DP.BUSY = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.BT.CONTACT.NUMBER ;
	LOG "LP LOG : Common.GrammarLoad - N.BT.CONTACT.NUMBER = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.BT.DP.NUMBER ;
	LOG "LP LOG : Common.GrammarLoad - N.BT.DP.NUMBER = " + S.INNER.LOG.STRING ;
	LOG "LP LOG : Common.GrammarLoad - S.BT.DP.CONDITION = " + S.BT.DP.CONDITION ;
	
	IF N.DIALOG = @N_DIALOG_NAVI_POI_LOCATION THEN
		BEGIN
			S.INNER.LOG.STRING ~= N.NAVI.CURRENT.REGION ;
			LOG "LP LOG : Common.GrammarLoad - N.NAVI.CURRENT.REGION = " + S.INNER.LOG.STRING ;
		END
		
	CALL Common.BNFGrammarLoad (N.DIALOG) ;
	
	S.GRAMMAR := S.BNF.GRAMMAR ;
	S.ACTIVATION := S.BNF.ACTIVATION ;
	
	LOG "LP LOG : Common.GrammarLoad - S.GRAMMAR = " + S.GRAMMAR ;
	LOG "LP LOG : Common.GrammarLoad - S.ACTIVATION = " + S.ACTIVATION ;
	
	CALL Common.Grammar (S.GRAMMAR, S.ACTIVATION) ;
EOP

! DIALOG에서 사용하는 BNF GRAMMAR 및 ACTIVATE RULE 설정
JINIE Common.BNFGrammarLoad (NUMBER N.DIALOG)

	IF N.DIALOG = @N_DIALOG_MAINMENU THEN
		BEGIN
			IF N.BT.PHONE.CONNECT = 1 THEN
				BEGIN
					IF N.BT.DP.BUSY = 1 | N.BT.DP.BUSY = 3 THEN
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\">" ;
						END
					ELSE
						BEGIN
							IF N.BT.CONTACT.NUMBER > 0 & N.BT.DP.NUMBER > 0 THEN
								BEGIN
									IF S.BT.DP.CONDITION[1][4] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT<\"COMMAND\", \"SLOT_CONTACTNAME\", \@N_GRAMMAR_SLOT_CONTACTNAME>" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_MERGE_BT<\"COMMAND\",\"CALL_NAME_GLOBAL\">-\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									ELSE
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
								END
							ELSE
								BEGIN
									S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" ;
									S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\">" ;
								END
						END
				END
			ELSE
				BEGIN
					S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" ;
					S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\">" ;
				END
				
			IF N.NAVI.SDCARD.EXIST = 1 THEN
				BEGIN
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR" + "\n" + S.BNF.GRAMMAR ;
				END
				
			! ALL SLOT ACTIVATE
			S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"NAVI_OPTION\"><\"ALL\",\"HYBRID_COMMAND\"><\"ALL\",\"CD_PLAY_TRACK\"><\"ALL\",\"VOICE_MEMO\">
			<\"ALL\",\"PRESET_NUMBER112\"><\"ALL\",\"PRESET_NUMBER140\"><\"ALL\",\"FM_NUMBER\"><\"ALL\",\"RADIO_AST\"><\"ALL\",\"DMB_AST\"><\"ALL\",\"MY_MUSIC\">" ;
			
			IF N.VENDER.VR.MODE = 0 THEN ! Hybrid Gate Command
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"HYBRID_COMMAND\">" ;
				END
				
			IF N.VENDER.CD.PLAY.TRACK = 0 THEN ! CD
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"CD_PLAY_TRACK\">" ;
				END
				
			IF N.VENDER.MYMUSIC = 0 THEN ! MY MUSIC
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"MY_MUSIC\">" ;
				END
				
			IF N.VENDER.PRESET.TWELVE = 0 THEN ! Preset 1~12
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"PRESET_NUMBER112\">" ;
				END
				
			IF N.VENDER.PRESET.FORTY = 0 THEN ! Preset 1~40
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"PRESET_NUMBER140\">" ;
				END
				
			IF N.VENDER.FM.NUMBER = 0 THEN ! FM1/FM2
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"FM_NUMBER\">" ;
				END
				
			IF N.VENDER.VOICEMEMO = 0 THEN ! VOICE MEMO
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"VOICE_MEMO\">" ;
				END
		END
		
	! PHONE
	IF N.DIALOG = @N_DIALOG_BT_VAD THEN
		BEGIN
			IF S.BT.DP.CONDITION[1][4] = "1" THEN
				BEGIN
					S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD<\"COMMAND\", \"SLOT_CONTACTNAME\", \@N_GRAMMAR_SLOT_CONTACTNAME>" ;
				END
			ELSE
				BEGIN
					S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_NBEST_LIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NBEST_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_BT_VAD_LIST | N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY_NUM THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD_CATEGORY" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_SELECT" ;
		END
		
	! RADIO
	IF N.DIALOG = @N_DIALOG_MAINMENU_AM_FREQUENCY THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_AM_FREQUENCY" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_FM_FREQUENCY THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_FM_FREQUENCY" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_RADIO_PRESET THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_RADIO_PRESET" ;
			S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_RADIO_PRESET<\"ALL\",\"PRESET_NUMBER112\"><\"ALL\",\"PRESET_NUMBER140\">" ;
			
			IF N.VENDER.PRESET.TWELVE = 0 THEN ! Preset 1~12
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_RADIO_PRESET<\"ALL\",\"PRESET_NUMBER112\">" ;
				END
				
			IF N.VENDER.PRESET.FORTY  = 0 THEN ! Preset 1~40
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_RADIO_PRESET<\"ALL\",\"PRESET_NUMBER140\">" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_AV_BROADCAST_LIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_AV_BROADCAST_LIST" ;
		END
		
	! MEDIA
	IF N.DIALOG = @N_DIALOG_MAINMENU_TRACKLIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_TRACKLIST" ;
		END
		
	! NAVI
	IF N.DIALOG = @N_DIALOG_NAVI_POI_LOCATION THEN
		BEGIN
			! DEFAULT LOAD GRAMMAR (Multi-Context)
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_POI_LOCATION" ;
			
			IF N.NAVI.CURRENT.REGION = 1 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_GANGWONDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 2 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_GYEONGGIDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 3 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_GYEONGSANGNAMDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 4 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_GYEONGSANGBUKDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 5 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_GWANGJU" ;
				END
			IF N.NAVI.CURRENT.REGION = 6 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_DAEGU" ;
				END
			IF N.NAVI.CURRENT.REGION = 7 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_DAEJEON" ;
				END
			IF N.NAVI.CURRENT.REGION = 8 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_BUSAN" ;
				END
			IF N.NAVI.CURRENT.REGION = 9 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_SEOUL" ;
				END
			IF N.NAVI.CURRENT.REGION = 10 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_SEJONG" ;
				END
			IF N.NAVI.CURRENT.REGION = 11 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_ULSAN" ;
				END
			IF N.NAVI.CURRENT.REGION = 12 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_INCHEON" ;
				END
			IF N.NAVI.CURRENT.REGION = 13 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_JEOLLANAMDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 14 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_JEOLLABUKDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 15 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_JEJUDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 16 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_CHUNGCHEONGNAMDO" ;
				END
			IF N.NAVI.CURRENT.REGION = 17 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_POI_CHUNGCHEONGBUKDO" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_SERVER THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_FIND_SERVER" ;
		END
			
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_FIND_CATEGORY" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_LIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_FIND_CATEGORY_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_NONE_LIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_FIND_CATEGORY_NONE_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_ROUTE_OPTION THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_ROUTE_OPTION" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_NBEST_LIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_NBEST_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_LIST | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_POINT | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_DESTINATION |
		N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_SEARCH | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_START THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_SELECT | N.DIALOG = @N_DIALOG_NAVI_YESNO_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_YESNO_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_SELECT" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_WAY_SELECT | N.DIALOG = @N_DIALOG_NAVI_YESNO_WAY_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_WAY_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_WAY_SELECT" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_CALL_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_YESNO_CALL_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_CALL_SELECT" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_CALL_WAY_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_CALL_WAY_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_CALL_WAY_SELECT" ;
		END
		
	! HELP
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_CATEGORY THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_CATEGORY" ;
			S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_CATEGORY<\"COMMAND\",\"NAVI_OPTION\">" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE THEN
		BEGIN
			IF N.BT.PHONE.CONNECT = 1 THEN
				BEGIN
					IF N.BT.DP.BUSY = 1 | N.BT.DP.BUSY = 3 THEN ! DP Doing or Spreading
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\">" ;
						END
					ELSE
						BEGIN
							IF N.BT.CONTACT.NUMBER > 0 & N.BT.DP.NUMBER > 0 THEN
								BEGIN
									IF S.BT.DP.CONDITION[1][4] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT<\"COMMAND\", \"SLOT_CONTACTNAME\", \@N_GRAMMAR_SLOT_CONTACTNAME>" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_MERGE_BT<\"COMMAND\",\"CALL_NAME_GLOBAL\">-\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									ELSE
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
								END
							ELSE
								BEGIN
									S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
									S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\">" ;
								END
						END
				END
			ELSE
				BEGIN
					S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
					S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\">" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_RADIO THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_RADIO" ;
			S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_RADIO<\"ALL\",\"PRESET_NUMBER112\"><\"ALL\",\"PRESET_NUMBER140\"><\"ALL\",\"FM_NUMBER\"><\"ALL\",\"RADIO_AST\"><\"ALL\",\"DMB_AST\">" ;
			
			IF N.VENDER.PRESET.TWELVE = 0 THEN ! Preset 1~12
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_RADIO<\"ALL\",\"PRESET_NUMBER112\">" ;
				END
				
			IF N.VENDER.PRESET.FORTY  = 0 THEN ! Preset 1~40
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_RADIO<\"ALL\",\"PRESET_NUMBER140\">" ;
				END
				
			IF N.VENDER.FM.NUMBER  = 0 THEN ! FM1/FM2
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_RADIO<\"ALL\",\"FM_NUMBER\">" ;
				END
				
			IF N.VENDER.RADIO.AST  = 0 THEN ! RADIO AST
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_RADIO<\"ALL\",\"RADIO_AST\">" ;
				END
				
			IF N.VENDER.DMB.AST  = 0 THEN ! DMB AST
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_RADIO<\"ALL\",\"DMB_AST\">" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_MEDIA THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_MEDIA" ;
			S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_MEDIA<\"ALL\",\"CD_PLAY_TRACK\"><\"ALL\",\"MY_MUSIC\"><\"ALL\",\"VOICE_MEMO\">" ;
			
			IF N.VENDER.CD.PLAY.TRACK = 0 THEN ! CD
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_MEDIA<\"ALL\",\"CD_PLAY_TRACK\">" ;
				END
				
			IF N.VENDER.MYMUSIC = 0 THEN ! MY MUSIC
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_MEDIA<\"ALL\",\"MY_MUSIC\">" ;
				END
				
			IF N.VENDER.VOICEMEMO = 0 THEN
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_MEDIA<\"ALL\",\"VOICE_MEMO\">" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_DMB THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_DMB" ;
			S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_DMB<\"ALL\",\"RADIO_AST\"><\"ALL\",\"DMB_AST\">" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
		BEGIN
			IF N.NAVI.SDCARD.EXIST = 1 THEN
				BEGIN
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR" +"\n" + "\@N_GRAMMAR_MAINMENU_HELP_NAVIGATION" ;
				END
			ELSE
				BEGIN
					S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_NAVIGATION" ;
				END
				
			S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_NAVIGATION<\"ALL\",\"HYBRID_COMMAND\">" ;
			
			IF N.VENDER.VR.MODE = 0 THEN
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_NAVIGATION<\"ALL\",\"HYBRID_COMMAND\">" ;
				END
		END
		
	! GENERAL
	IF N.DIALOG = @N_DIALOG_NO_RECOG_EXIT | N.DIALOG = @N_DIALOG_NO_RECOG_DRIVING | N.DIALOG = @N_DIALOG_NO_RECOG_BACK THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NO_RECOG_EXIT" ;
		END
		
	LOG "LP LOG : Common.BNFGrammarLoad - S.BNF.GRAMMAR = " + S.BNF.GRAMMAR ;
	LOG "LP LOG : Common.BNFGrammarLoad - S.BNF.ACTIVATION = " + S.BNF.ACTIVATION ;
EOP

! GRAMMAR의 CTX PARAMETER 설정 후 GRAMMAR LOAD
JINIE Common.Grammar (STRING S.GRAMMAR, STRING S.ACTIVATION)

	TEMPORARY NUMBER N.TEMP := 1 ;
	TEMPORARY STRING S.PARAM := "" ;

	WHILE S.GRAMMAR [N.TEMP] <> "" DO
		BEGIN
			IF $N.STATUS.DIALOG = @N_DIALOG_NAVI_POI_LOCATION THEN
				BEGIN
					! ("ACCURACY"=6700,"HYPOTHESES.RESULT"=8,"HYPOTHESES.SEARCH"=16,"TS.FX"=1000)
					S.PARAM := "(\"ACCURACY\" = N.ACCURACY.SDCARD.VALUE, \"HYPOTHESES.RESULT\" = N.HYPOTHESES.RESULT.SDCARD.VALUE, \"HYPOTHESES.SEARCH\" = N.HYPOTHESES.SEARCH.SDCARD.VALUE, \"TS.FX\" = N.TS.FX.SDCARD.VALUE)"  ;
				END
			ELSE
				BEGIN
					! ("ACCURACY"=1500,"HYPOTHESES.RESULT"=8,"HYPOTHESES.SEARCH"=8,"TS.FX"=1000)
					S.PARAM := "(\"ACCURACY\" = N.ACCURACY.VALUE, \"HYPOTHESES.RESULT\" = N.HYPOTHESES.RESULT.VALUE, \"HYPOTHESES.SEARCH\" = N.HYPOTHESES.SEARCH.VALUE, \"TS.FX\" = N.TS.FX.VALUE)"  ;
				END
				
			IF N.TEMP = 1 THEN
				BEGIN
					$S.CONTEXT.GRAMMAR := S.GRAMMAR[N.TEMP] + S.PARAM ;
				END
			ELSE
				BEGIN
					$S.CONTEXT.GRAMMAR := $S.CONTEXT.GRAMMAR + " + " +  S.GRAMMAR[N.TEMP] + S.PARAM ;
				END
				
			N.TEMP := N.TEMP + 1 ;
		END
		
	$S.CONTEXT.ACTIVATION := S.ACTIVATION ;
EOP

! 인식 결과에 따른 다음 동작을 결정
! 인식 결과 O -> RULE, 인식 결과 X -> GUIDANCE or RESULT PROCESS 천이
JINIE Common.Recognizer ()
	
	LOG "LP LOG : Common.Recognizer <:::::EMBEDDED RESULT:::::>" ;
	LOG "LP LOG : Common.Recognizer - EMBEDDED ID = " + $S.STT.RESULT.OFFLINE.ID[1] ;
	LOG "LP LOG : Common.Recognizer - EMBEDDED STRING = " + $S.STT.RESULT.OFFLINE.STRING[1] + "\n" ;
	LOG "LP LOG : Common.Recognizer - EMBEDDED INTENTION = " + $S.STT.RESULT.OFFLINE.INTENTION[1] ;
	LOG "LP LOG : Common.Recognizer - EMBEDDED SLOT = " + $S.STT.RESULT.OFFLINE.SLOT[1] + "\n" ;
	
	LOG "LP LOG : Common.Recognizer <::::::SERVER RESULT::::::>" ;
	LOG "LP LOG : Common.Recognizer - SERVER STRING = " + $S.STT.RESULT.ONLINE.STRING[1] ;
	LOG "LP LOG : Common.Recognizer - SERVER DOMAIN = " + $S.STT.RESULT.ONLINE.DOMAIN[1] ;
	LOG "LP LOG : Common.Recognizer - SERVER INTENTION = " + $S.STT.RESULT.ONLINE.INTENTION[1] ;
	LOG "LP LOG : Common.Recognizer - SERVER SLOT = " + $S.STT.RESULT.ONLINE.SLOT[1] ;

	LOG "LP LOG : Common.Recognizer <::::::RESULT INFO::::::>" ;
	S.INNER.LOG.STRING ~= $N.STT.RESULT.OFFLINE.TYPE ;
	LOG "LP LOG : Common.Recognizer - $N.STT.RESULT.OFFLINE.TYPE = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= $N.STT.RESULT.ONLINE.TYPE ;
	LOG "LP LOG : Common.Recognizer - $N.STT.RESULT.ONLINE.TYPE = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= $N.STT.RESULT.OFFLINE.CONDITION ;
	LOG "LP LOG : Common.Recognizer - $N.STT.RESULT.OFFLINE.CONDITION = " + S.INNER.LOG.STRING ;
	
	! INTERRUPT TYPE INITIALIZE
	! INIT, GUIDANCE, RULE, RESULT, TRANSITION PROCESS : INTERRUPT TYPE 유지 필요
	$N.INTERRUPT.TYPE := 0 ;
	
	! ART
	CALL Common.ARTResultSetting () ;
	
	! VCRM
	CALL Common.VCRMResultSetting () ;
	
	IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_RESULT | $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_RESULT THEN
		BEGIN
			IF $S.STT.RESULT.ONLINE.DOMAIN = "Unsupported" & $S.STT.RESULT.ONLINE.INTENTION = "Unsupported" THEN
				BEGIN
					IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_TIMEOUT THEN
						BEGIN
							CALL Common.EmbeddedTimeout () ;
						END
					IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_REJECTION THEN
						BEGIN
							CALL Common.EmbeddedRejection () ;
						END
				END
				
			IF $N.STT.CONNECTION.FLAG <> @N_SERVER_TYPE_NONE THEN
				BEGIN
					IF $S.STT.RESULT.OFFLINE.INTENTION[1][1] ="WaitServer" | $S.STT.RESULT.OFFLINE.INTENTION[1][1] = "WaitServerCategory" | $S.STT.RESULT.OFFLINE.INTENTION[1][1] = "WaitServerPOI" THEN
						BEGIN
							IF $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_REJECTION THEN
								BEGIN
									CALL Common.EmbeddedRejection () ;
								END
							IF $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_NIL | $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_TIMEOUT | $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_ERROR THEN
								BEGIN
									CALL Common.ServerVRExit () ;
								END
						END
				END
		END
	ELSE
		BEGIN
			IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_TIMEOUT THEN ! EMBEDDED TIMEOUT 일 때, SERVER도 TIMEOUT으로 간주해야하는 가?
				BEGIN
					IF $N.STT.CONNECTION.FLAG = @N_SERVER_TYPE_NONE THEN
						BEGIN
							CALL Common.EmbeddedTimeout () ;
						END
					ELSE ! SERVER 연결 화면(MAINMENU/MAINMENU_HELP_NAVIGATION/NAVI_FIND_SERVER)
						BEGIN
							IF $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_NIL THEN ! TYPE NIL의 원인이 EMBEDDED TIMEOUT으로 예상
								BEGIN
									CALL Common.EmbeddedTimeout () ;
								END
							IF $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_REJECTION THEN
								BEGIN
									CALL Common.EmbeddedRejection () ;
								END
							IF $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_TIMEOUT | $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_ERROR THEN
								BEGIN
									CALL Common.ServerVRExit () ;
								END
						END
				END
			IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_REJECTION THEN
				BEGIN
					IF $N.STT.CONNECTION.FLAG = @N_SERVER_TYPE_NONE THEN
						BEGIN
							CALL Common.EmbeddedRejection () ;
						END
					ELSE ! SERVER 연결 화면(MAINMENU/MAINMENU_HELP_NAVIGATION/NAVI_FIND_SERVER)
						BEGIN
							IF $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_REJECTION THEN ! SERVER RESULT TYPE이 우선 순위 높으므로 REJECTION으로 동작
								BEGIN
									CALL Common.EmbeddedRejection () ;
								END
							IF $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_NIL | $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_TIMEOUT | $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_ERROR THEN
								BEGIN
									CALL Common.ServerVRExit () ;
								END
						END
				END
		END
EOP

! ART 변수에 EMBEDDED, SERVER 인식 결과 정보 저장
JINIE Common.ARTResultSetting ()

	TEMPORARY STRING S.TEMP.RESULT := "" ;
	TEMPORARY NUMBER N.CNT := 2 ;
	
	! EMBEDDED RESULT
	IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_RESULT THEN
		BEGIN
			N.CNT := 2 ;
			S.TEMP.RESULT := $S.STT.RESULT.OFFLINE.STRING[1][1] ;
			WHILE $S.STT.RESULT.OFFLINE.STRING[1][N.CNT] <> "" DO
				BEGIN
					S.TEMP.RESULT := S.TEMP.RESULT + " " + $S.STT.RESULT.OFFLINE.STRING[1][N.CNT] ;
					
					N.CNT := N.CNT + 1 ;
				END
				
			! Result String\fConfidence\nDomain\fIntention\nSlotTag1\fSlotValue1\n...\fSlotTagN\fSlotValueN
			S.ART.EMBEDDED.RESULT := S.TEMP.RESULT + "\f" + $S.STT.RESULT.SCORE[1] + "\n" +
									" " + "\f" + " " + "\n" + 
									" " + "\f" + " " + "\n" ;
		END
	ELSE
		BEGIN
			S.ART.EMBEDDED.RESULT := "" ;
		END
		
	! SERVER RESULT
	IF $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_RESULT THEN
		BEGIN
			N.CNT := 2 ;
			S.TEMP.RESULT := $S.STT.RESULT.ONLINE.SLOT[1][1] ;
			WHILE $S.STT.RESULT.ONLINE.SLOT[1][N.CNT] <> "" DO
				BEGIN
					IF ( N.CNT % 2 ) = 0 THEN
						BEGIN
							S.TEMP.RESULT := S.TEMP.RESULT + "\f" + $S.STT.RESULT.ONLINE.SLOT[1][N.CNT] ;
						END
					ELSE
						BEGIN
							S.TEMP.RESULT := S.TEMP.RESULT + "\n" + $S.STT.RESULT.ONLINE.SLOT[1][N.CNT] ;
						END
						
					N.CNT := N.CNT + 1 ;
				END
				
			! Dictation String\fConfidence\nDomain\fIntention\nSlotTag1\fSlotValue1\n...\fSlotTagN\fSlotValueN
			S.ART.SERVER.RESULT := $S.STT.RESULT.ONLINE.STRING[1] + "\f" + "0" + "\n" +
									$S.STT.RESULT.ONLINE.DOMAIN + "\f" + $S.STT.RESULT.ONLINE.INTENTION + "\n" + S.TEMP.RESULT ;
		END
	ELSE
		BEGIN
			S.ART.SERVER.RESULT := "" ;
		END
		
	LOG "LP LOG : Common.ARTResultSetting - S.ART.EMBEDDED.RESULT = " + S.ART.EMBEDDED.RESULT ;
	LOG "LP LOG : Common.ARTResultSetting - S.ART.SERVER.RESULT = " + S.ART.SERVER.RESULT ;
EOP

! VCRM 변수에 인식 결과 정보 저장
JINIE Common.VCRMResultSetting ()

	TEMPORARY NUMBER N.TEMP := 1 ;
	
	S.VCRM.RESULT.CONFIDENCE := "" ;
	WHILE N.TEMP <= $N.STT.RESULT.RESULTS DO
		BEGIN
			S.VCRM.RESULT.CONFIDENCE := S.VCRM.RESULT.CONFIDENCE + " " + $S.STT.RESULT.STRING[N.TEMP][1] + "_" + $S.STT.RESULT.SCORE[N.TEMP] ;
			N.TEMP := N.TEMP + 1 ;
		END
		
	LOG "LP LOG : Common.VCRMResultSetting - S.VCRM.RESULT.CONFIDENCE = " + "\n" + S.VCRM.RESULT.CONFIDENCE ;
EOP

! EMBEDDED ENGINE에서 TIMEOUT 발생 시 수행
JINIE Common.EmbeddedTimeout ()

	N.CONTROL.TIMEOUT.NUM := N.CONTROL.TIMEOUT.NUM + 1 ;
	N.INNER.RECOG.COUNT.NUM := N.CONTROL.TIMEOUT.NUM + N.CONTROL.REJECTION.NUM ;
	
	S.INNER.LOG.STRING ~= N.CONTROL.TIMEOUT.NUM ;
	LOG "LP LOG : Common.EmbeddedTimeout - N.CONTROL.TIMEOUT.NUM = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.CONTROL.REJECTION.NUM ;
	LOG "LP LOG : Common.EmbeddedTimeout - N.CONTROL.REJECTION.NUM = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.INNER.RECOG.COUNT.NUM ;
	LOG "LP LOG : Common.EmbeddedTimeout - N.INNER.RECOG.COUNT.NUM = " + S.INNER.LOG.STRING ;
	
	IF N.INNER.RECOG.COUNT.NUM = 1 | N.INNER.RECOG.COUNT.NUM = 0 | N.INNER.RECOG.COUNT.NUM > 3 THEN
		BEGIN ! 0 or 3 초과의 경우, 1과 동일한 동작으로 예외 처리
			$N.CONTROL.FUNCTION.BARGEIN.FLAG := N.CONTROL.FUNCTION.BARGEIN.FLAG ; ! 사양으로 전달 받은 값으로 Barge In Flag 설정
			
			S.INNER.LOG.STRING ~= $N.CONTROL.FUNCTION.BARGEIN.FLAG ;
			LOG "LP LOG : Common.EmbeddedTimeout - $N.CONTROL.FUNCTION.BARGEIN.FLAG = " + S.INNER.LOG.STRING ;
			
			$N.CONTROL.FLOW := @N_STAGE_GUIDANCE ;
			$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_OFF ; ! PRE PROGRAM에서 다시 PROMPT 저장 안하도록 PROGRAM OFF 설정
			
			IF N.CONTROL.RECOGNITION.MODE = 0 THEN
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_K1_10_00"  + "\"" + " + " + S.BEEP ;
				END
			ELSE
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_00"  + "\"" + " + " + S.BEEP ;
				END
				
			$S.PROMPT.GUIDANCE.TEXT := "\"\@S_SCREEN_PROMPT_LID_1_10_01\"" ;
		END
		
	IF N.INNER.RECOG.COUNT.NUM = 2 THEN
		BEGIN
			$N.CONTROL.FUNCTION.BARGEIN.FLAG := N.CONTROL.FUNCTION.BARGEIN.FLAG ; ! 사양으로 전달 받은 값으로 Barge In Flag 설정
			
			S.INNER.LOG.STRING ~= $N.CONTROL.FUNCTION.BARGEIN.FLAG ;
			LOG "LP LOG : Common.EmbeddedTimeout - $N.CONTROL.FUNCTION.BARGEIN.FLAG = " + S.INNER.LOG.STRING ;
			
			$N.CONTROL.FLOW := @N_STAGE_GUIDANCE ;
			$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_OFF ; ! PRE PROGRAM에서 다시 PROMPT 저장 안하도록 PROGRAM OFF 설정
			
			IF N.CONTROL.RECOGNITION.MODE = 0 THEN
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_K1_10_01"  + "\"" + " + " + S.BEEP ;
				END
			ELSE
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_01"  + "\"" + " + " + S.BEEP ;
				END
				
			$S.PROMPT.GUIDANCE.TEXT := "\"\@S_SCREEN_PROMPT_LID_1_10_02\"" ;
		END
		
	IF N.INNER.RECOG.COUNT.NUM = 3 THEN
		BEGIN
			CALL Common.EmbeddedVRExit () ;
		END

	! LID
	$N.PROMPT.GUIDANCE.ID := N.SCREEN.PROMPT ;
	$N.PROMPT.FEEDBACK.ID := N.SCREEN.PROMPT ;
EOP

! EMBEDDED ENGINE에서 REJECTION 발생 시 수행
JINIE Common.EmbeddedRejection ()

	! FULL Barge In 사양 X 이며 Embedded Result Type이 Rejection 일 때, No Leading Silence 발생 여부 확인
	IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_REJECTION & $N.STT.RESULT.OFFLINE.CONDITION = @N_SIGNAL_CONDITION_SILENCE & N.CONTROL.FUNCTION.BARGEIN.FLAG = @N_FLAG_OFF THEN
		BEGIN
			N.CONTROL.NOLEADINGSILENCE := N.CONTROL.NOLEADINGSILENCE + 1 ;
			S.INNER.LOG.STRING ~= N.CONTROL.NOLEADINGSILENCE ;
			LOG "LP LOG : Common.EmbeddedRejection - N.CONTROL.NOLEADINGSILENCE = " + S.INNER.LOG.STRING ;
		END
		
	IF N.CONTROL.NOLEADINGSILENCE = 3 THEN ! No Leading Silence 사양 존재
		BEGIN
			$N.CONTROL.FLOW := @N_STAGE_GUIDANCE ;
			$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_OFF ; ! PRE PROGRAM에서 다시 PROMPT 저장 안하도록 PROGRAM OFF 설정
			
			IF N.CONTROL.RECOGNITION.MODE = 0 THEN
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_K1_10_06"  + "\"" + " + " + S.BEEP ;
				END
			ELSE
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_06"  + "\"" + " + " + S.BEEP ;
				END
				
			$S.PROMPT.GUIDANCE.TEXT := "\"\@S_SCREEN_PROMPT_LID_1_7_0_08\"" ;
			
			N.CONTROL.NOLEADINGSILENCE := N.CONTROL.NOLEADINGSILENCE + 1 ;
			S.INNER.LOG.STRING ~= N.CONTROL.NOLEADINGSILENCE ;
			LOG "LP LOG : Common.EmbeddedRejection - N.CONTROL.NOLEADINGSILENCE = " + S.INNER.LOG.STRING ;
		END
	ELSE ! No Leading Silence 사양 미 존재
		BEGIN
			N.CONTROL.REJECTION.NUM := N.CONTROL.REJECTION.NUM + 1 ;
			N.INNER.RECOG.COUNT.NUM := N.CONTROL.TIMEOUT.NUM + N.CONTROL.REJECTION.NUM ;
			
			S.INNER.LOG.STRING ~= N.CONTROL.TIMEOUT.NUM ;
			LOG "LP LOG : Common.EmbeddedRejection - N.CONTROL.TIMEOUT.NUM = " + S.INNER.LOG.STRING ;
			S.INNER.LOG.STRING ~= N.CONTROL.REJECTION.NUM ;
			LOG "LP LOG : Common.EmbeddedRejection - N.CONTROL.REJECTION.NUM = " + S.INNER.LOG.STRING ;
			S.INNER.LOG.STRING ~= N.INNER.RECOG.COUNT.NUM ;
			LOG "LP LOG : Common.EmbeddedRejection - N.INNER.RECOG.COUNT.NUM = " + S.INNER.LOG.STRING ;
			
			IF N.INNER.RECOG.COUNT.NUM = 1 | N.INNER.RECOG.COUNT.NUM = 0 | N.INNER.RECOG.COUNT.NUM > 3 THEN
				BEGIN ! 0 or 3 초과의 경우, 1과 동일한 동작으로 예외 처리
					$N.CONTROL.FUNCTION.BARGEIN.FLAG := N.CONTROL.FUNCTION.BARGEIN.FLAG ; ! 사양으로 전달 받은 값으로 Barge In Flag 설정
					
					S.INNER.LOG.STRING ~= $N.CONTROL.FUNCTION.BARGEIN.FLAG ;
					LOG "LP LOG : Common.EmbeddedRejection - $N.CONTROL.FUNCTION.BARGEIN.FLAG = " + S.INNER.LOG.STRING ;
					
					$N.CONTROL.FLOW := @N_STAGE_GUIDANCE ;
					$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_OFF ; ! PRE PROGRAM에서 다시 PROMPT 저장 안하도록 PROGRAM OFF 설정
					
					IF N.CONTROL.RECOGNITION.MODE = 0 THEN
						BEGIN
							$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_K1_10_03"  + "\"" + " + " + S.BEEP ;
						END
					ELSE
						BEGIN
							$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_03"  + "\"" + " + " + S.BEEP ;
						END
						
					$S.PROMPT.GUIDANCE.TEXT := "\"\@S_SCREEN_PROMPT_LID_1_10_04\"" ;
				END
				
			IF N.INNER.RECOG.COUNT.NUM = 2 THEN
				BEGIN
					$N.CONTROL.FUNCTION.BARGEIN.FLAG := N.CONTROL.FUNCTION.BARGEIN.FLAG ; ! 사양으로 전달 받은 값으로 Barge In Flag 설정
					
					S.INNER.LOG.STRING ~= $N.CONTROL.FUNCTION.BARGEIN.FLAG ;
					LOG "LP LOG : Common.EmbeddedRejection - $N.CONTROL.FUNCTION.BARGEIN.FLAG = " + S.INNER.LOG.STRING ;
					
					$N.CONTROL.FLOW := @N_STAGE_GUIDANCE ;
					$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_OFF ; ! PRE PROGRAM에서 다시 PROMPT 저장 안하도록 PROGRAM OFF 설정
					
					IF N.CONTROL.RECOGNITION.MODE = 0 THEN
						BEGIN
							$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_K1_10_04"  + "\"" + " + " + S.BEEP ;
						END
					ELSE
						BEGIN
							$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_04"  + "\"" + " + " + S.BEEP ;
						END
					
					$S.PROMPT.GUIDANCE.TEXT := "\"\@S_SCREEN_PROMPT_LID_1_10_05\"" ;
				END
				
			IF N.INNER.RECOG.COUNT.NUM = 3 THEN
				BEGIN
					CALL Common.EmbeddedVRExit () ;
				END
		END
		
	! LID
	$N.PROMPT.GUIDANCE.ID := N.SCREEN.PROMPT ;
	$N.PROMPT.FEEDBACK.ID := N.SCREEN.PROMPT ;
EOP

! EMBEDDED ENGINE에서 TIMEOUT or REJECTION이 3회 발생 시 수행
JINIE Common.EmbeddedVRExit ()

	! FLOW
	$N.CONTROL.FLOW := @N_STAGE_RULE ;
	
	$S.RESULT.ID := "\@N_TAG_INNER_RESULT_ID" ;
	$N.RESULT.RESULTS := 1 ;
	$N.RESULT.FORMAT := 2 ;
EOP

! SERVER ENGINE에서 RESULT가 전달되지 않았을 때 수행
JINIE Common.ServerVRExit ()

	! FLOW
	$N.CONTROL.FLOW := @N_STAGE_RULE ;
	
	$S.RESULT.ID := "\@N_TAG_SERVER_INNER_RESULT_ID" ;
	$N.RESULT.RESULTS := 1 ;
	$N.RESULT.FORMAT := 2 ;
EOP

! 모드에 따른 GUIDANCE PROMPT 설정
! INTERRUPT 및 사양에 따른 EXCEPTION 수행
JINIE Common.GuidancePromptControl ()

	! GUIDANCE PROMPT CONTROL
	IF N.VOLUME.SILENCE = 1 THEN
		BEGIN
			$S.PROMPT.GUIDANCE.EXPRESSION := "\@N_PROMPT_SILENCE" ;
		END
	ELSE
		BEGIN
			IF $N.INTERRUPT.TYPE = 1 | $N.INTERRUPT.TYPE = 3 |
			S.RESULT.FIX.CID = "\@N_TAG_NEXT_PAGE_ID" & N.GLOBAL.LISTITEM.REMAIN = 1 |
			S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_PAGE_ID" & N.GLOBAL.LISTITEM.REMAIN = 1 THEN
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := S.BEEP ;
				END
			ELSE ! 0 : NIL, 4 : RESULT(MULTI-MODAL)
				BEGIN
					IF $N.STATUS.DIALOG = @N_DIALOG_NO_RECOG_EXIT | $N.STATUS.DIALOG = @N_DIALOG_NO_RECOG_BACK THEN
						BEGIN
							IF N.CONTROL.RECOGNITION.MODE = 0 THEN
								BEGIN
									$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + S.INNER.PROMPT.KINDLY.STR  + "\"" ;
								END
							ELSE
								BEGIN
									$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + S.INNER.PROMPT.SIMPLY.STR  + "\"" ;
								END
						END
					ELSE
						BEGIN
							IF N.CONTROL.RECOGNITION.MODE = 0 THEN
								BEGIN
									$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + S.INNER.PROMPT.KINDLY.STR  + "\"" + " + " + S.BEEP ;
								END
							ELSE
								BEGIN
									$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + S.INNER.PROMPT.SIMPLY.STR  + "\"" + " + " + S.BEEP ;
								END
						END
				END
		END
		
	! UNINITAL
	N.VOLUME.SILENCE := 0 ;
EOP

! ON SCREEN TEXT에 해당하는 GUIDANCE TEXT 및 LID 전달
JINIE Common.GuidanceOnScreenText ()

	! LID
	$N.PROMPT.GUIDANCE.ID := N.SCREEN.PROMPT ;
	$N.PROMPT.FEEDBACK.ID := N.SCREEN.PROMPT ;
	
	! ON SCREEN TEXT
	IF $N.INTERRUPT.TYPE = 1 | $N.INTERRUPT.TYPE = 3 THEN
		BEGIN
			$S.PROMPT.GUIDANCE.TEXT := " " ;
		END
	ELSE ! 0 : NIL, 4 : RESULT(MULTI-MODAL)
		BEGIN
			IF S.INNER.PROMPT.DISPLY.STR = "" THEN
				BEGIN
					$S.PROMPT.GUIDANCE.TEXT := $S.PROMPT.GUIDANCE.EXPRESSION ;
				END
			ELSE
				BEGIN
					$S.PROMPT.GUIDANCE.TEXT := "\"" + S.INNER.PROMPT.DISPLY.STR + "\"" ;
				END
		END
EOP

! INTERRUPT TYPE : RESULT 전달되는 경우, RESULT 관련 변수 초기화
JINIE Common.CheckInterrupt ()

	S.INNER.LOG.STRING ~= $N.INTERRUPT.TYPE ;
	LOG "LP LOG : Common.CheckInterrupt - $N.INTERRUPT.TYPE = " + S.INNER.LOG.STRING ;
	
	IF $N.INTERRUPT.TYPE = 4 THEN
		BEGIN
			$S.STT.RESULT.SCORE := "0" ;
			S.VCRM.RESULT.CONFIDENCE := "" ;
			$S.STT.RESULT.STRING := "" ;
			$S.STT.RESULT.DOMAIN := "" ;
			$S.STT.RESULT.INTENTION := "" ;
			$S.STT.RESULT.SLOT := "" ;
			$S.STT.RESULT.ONLINE.STRING := "" ;
			$S.STT.RESULT.ONLINE.DOMAIN := "" ;
			$S.STT.RESULT.ONLINE.INTENTION := "" ;
			$S.STT.RESULT.ONLINE.SLOT := "" ;
			$S.STT.RESULT.OFFLINE.STRING := "" ;
			$S.STT.RESULT.OFFLINE.DOMAIN := "" ;
			$S.STT.RESULT.OFFLINE.INTENTION := "" ;
			$S.STT.RESULT.OFFLINE.SLOT := "" ;
			$S.ACTION.VALUE := "" ;
			S.ACTION.STRING := "" ;
			$S.RESULT.STRING := "" ;
			N.VOLUME.SILENCE := 0 ;
		END
EOP

! POST PROCESSOR 사용 PROCESS의 PROCESS 및 PROGRAM 사용 여부 설정
! RULE 단계 진입 시 마다 초기화가 필요한 항목에 대하여 초기화 수행
JINIE Common.ControlPost ()

	CALL Common.SetStagePost () ;
	CALL Common.InitializerPost () ;
EOP

! Post Processor 진입 시 마다 Stage on/off 설정
JINIE Common.SetStagePost ()

	! CONTROL
	$N.CONTROL.PROCESS.REFERENCE := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.RESULT := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.RESULT := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.FEEDBACK := @N_FLAG_OFF ;
	$N.CONTROL.PROGRAM.FEEDBACK := @N_FLAG_OFF ;
	$N.CONTROL.PROCESS.TRANSITION := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.TRANSITION := @N_FLAG_ON ;
EOP

! Post Processor 진입 시 마다 초기화 및 설정이 필요한 항목에 대하여 수행
JINIE Common.InitializerPost ()
	
	! DEFAULT SETTING
	N.SCREEN.PROMPT := 0 ;
	S.ACTION.STRING := "" ;
EOP

! SERVER INFO 전달
JINIE Common.ExtraInfo ()

	IF $S.STT.RESULT.ONLINE.EXTRAINFO = "" THEN
		BEGIN
			MESSAGE "(INFO_SERVER) \f" + "0" + "\f" + "0" ;
			LOG "LP LOG : Common.ExtraInfo - MESSAGE = (INFO_SERVER) - \f0\f0" ;
		END
	ELSE
		BEGIN
			MESSAGE "(INFO_SERVER) \f" + $S.STT.RESULT.ONLINE.EXTRAINFO ;
			LOG "LP LOG : Common.ExtraInfo - MESSAGE = (INFO_SERVER) - \f" + $S.STT.RESULT.ONLINE.EXTRAINFO ;
		END
EOP

! PARAMETER로 전달받은 값들로 REFERENCE DB 검색 수행
JINIE Common.ReferenceKey (NUMBER N.REF.DB, NUMBER N.REF.ID, STRING S.REF.KEY)
	
	IF $N.INTERRUPT.TYPE = 4 | S.REF.KEY = "" THEN ! INTENTION NOT EXIST
		BEGIN
			LOG "LP LOG : Common.ReferenceKey - Multi-Modal or Reference Key = Null" ;
			$N.REFERENCE.FLAG := @N_FLAG_ON ;
			$N.REFERENCE.DB := N.REF.DB ;
			$N.REFERENCE.ID := 1 ;
			$S.REFERENCE.KEY := $S.RESULT.ID[1][1] ;
		END
	ELSE
		BEGIN
			LOG "LP LOG : Common.ReferenceKey - Recognition " ;
			$N.REFERENCE.FLAG:= @N_FLAG_ON ;
			$N.REFERENCE.DB := N.REF.DB ;
			$N.REFERENCE.ID := N.REF.ID ;
			$S.REFERENCE.KEY := S.REF.KEY ;
		END
	
	LOG "LP LOG : Common.ReferenceKey - $S.REFERENCE.KEY = " + $S.REFERENCE.KEY ;
EOP

! ART 변수에 인식 결과에 대한 ART LOG INTENTION 저장
JINIE Common.ARTIntentionSetting ()

	IF N.VENDER.VR.MODE = 1 THEN
		BEGIN
			IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_NAVIGATION_SERVER" | $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_WAIT_SERVER" | $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_DESTINATION_SEARCH" THEN
				BEGIN
					S.ART.RESULT.STRING := "\@S_TAG_ART_INTENTION_UDE" ;
				END
			ELSE
				BEGIN
					IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_FIND_POI" THEN
						BEGIN
							IF $N.STATUS.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY THEN
								BEGIN
									S.ART.RESULT.STRING := "\@S_TAG_ART_INTENTION_NORMAL" ;
								END
							ELSE
								BEGIN
									S.ART.RESULT.STRING := "\@S_TAG_ART_INTENTION_UDE" ;
								END
						END
					ELSE
						BEGIN
							S.ART.RESULT.STRING := "\@S_TAG_ART_INTENTION_NORMAL" ;
						END
				END
		END
	ELSE
		BEGIN
			S.ART.RESULT.STRING := "\@S_TAG_ART_INTENTION_NORMAL" ;
		END
EOP

! 1-BEST에 대한 REFERENCE DB 검색 결과 저장
JINIE Common.ReferenceOneBestResult ()

	TEMPORARY NUMBER N.TEMP.FIRST := 1 ; ! WHILE COUNT
	TEMPORARY STRING S.TEMP.DIALOG := "" ; ! CURRENT DIALOG ID(STRING)
	
	S.TEMP.DIALOG ~= $N.STATUS.DIALOG;
	LOG "LP LOG : Common.ReferenceOneBestResult - $N.STATUS.DIALOG = " + S.TEMP.DIALOG ;
	
	N.RESULT.CONUT.NUM := 1 ; ! 1-Best
	
	S.INNER.LOG.STRING ~= $N.REFERENCE.RESULTS ;
	LOG "LP LOG : Common.ReferenceResult - $N.REFERENCE.RESULTS = " + S.INNER.LOG.STRING + " | $S.REFERENCE.RESULTS = " + $S.REFERENCE.RESULTS ;
	
	! SET REFERENCE DB SEARCH RESULTS
	IF $N.REFERENCE.RESULTS = 1 THEN ! REFERENCE DB SEARCH NUM = 1
		BEGIN
			S.RESULT.CID := $S.REFERENCE.RESULTS[1][1] ;
			S.RESULT.CMD := $S.REFERENCE.RESULTS[1][2] ;
			S.RESULT.DIP := $S.REFERENCE.RESULTS[1][3] ;
			S.RESULT.SCORE := $S.STT.RESULT.SCORE[1][1] ;
			
			S.RESULT.DOMAIN := $S.REFERENCE.RESULTS[1][4] ;
			S.RESULT.EXAMPLE := $S.REFERENCE.RESULTS[1][5] ;
			S.RESULT.INTENTION := $S.REFERENCE.RESULTS[1][6] ;
			
			S.SLOT.FIRST.ID := $S.STT.RESULT.ID[1][2] ;
			S.SLOT.FIRST.TAG := $S.REFERENCE.RESULTS[1][7] ;
			S.SLOT.FIRST.VALUE := $S.STT.RESULT.SLOT[1][2] ;
			S.SLOT.FIRST.SCORE := $S.STT.RESULT.SCORE[1][1] ;
			
			S.SLOT.SECOND.ID := $S.STT.RESULT.ID[1][3] ;
			S.SLOT.SECOND.TAG := $S.REFERENCE.RESULTS[1][8] ;
			S.SLOT.SECOND.VALUE := $S.STT.RESULT.SLOT[1][5] ;
			S.SLOT.SECOND.SCORE := $S.STT.RESULT.SCORE[1][1] ;
			
			S.SLOT.THIRD.ID := $S.STT.RESULT.ID[1][4] ;
			S.SLOT.THIRD.TAG := $S.REFERENCE.RESULTS[1][9] ;
			S.SLOT.THIRD.VALUE := $S.STT.RESULT.SLOT[1][8] ;
			S.SLOT.THIRD.SCORE := $S.STT.RESULT.SCORE[1][1] ;
		END
	ELSE ! REFERENCE DB SEARCH NUM > 1
		BEGIN
			WHILE N.TEMP.FIRST <= $N.REFERENCE.RESULTS DO
				BEGIN
					IF $S.REFERENCE.RESULTS[N.TEMP.FIRST][10] = S.TEMP.DIALOG THEN ! COMPARE CURRENT DIALOG
						BEGIN
							S.RESULT.CID := $S.REFERENCE.RESULTS[N.TEMP.FIRST][1] ;
							S.RESULT.CMD := $S.REFERENCE.RESULTS[N.TEMP.FIRST][2] ;
							S.RESULT.DIP := $S.REFERENCE.RESULTS[N.TEMP.FIRST][3] ;
							S.RESULT.SCORE := $S.STT.RESULT.SCORE[N.REF.NBEST.COUNT][1] ;
							
							S.RESULT.DOMAIN := $S.REFERENCE.RESULTS[N.TEMP.FIRST][4] ;
							S.RESULT.EXAMPLE := $S.REFERENCE.RESULTS[N.TEMP.FIRST][5] ;
							S.RESULT.INTENTION := $S.REFERENCE.RESULTS[N.TEMP.FIRST][6] ;
							
							S.SLOT.FIRST.ID := $S.STT.RESULT.ID[N.REF.NBEST.COUNT][2] ;
							S.SLOT.FIRST.TAG := $S.REFERENCE.RESULTS[N.TEMP.FIRST][7] ;
							S.SLOT.FIRST.VALUE := $S.STT.RESULT.SLOT[N.REF.NBEST.COUNT][2] ;
							S.SLOT.FIRST.SCORE := $S.STT.RESULT.SCORE[N.REF.NBEST.COUNT][1] ;
							
							S.SLOT.SECOND.ID := $S.STT.RESULT.ID[N.REF.NBEST.COUNT][3] ;
							S.SLOT.SECOND.TAG := $S.REFERENCE.RESULTS[N.TEMP.FIRST][8] ;
							S.SLOT.SECOND.VALUE := $S.STT.RESULT.SLOT[N.REF.NBEST.COUNT][5] ;
							S.SLOT.SECOND.SCORE := $S.STT.RESULT.SCORE[N.REF.NBEST.COUNT][1] ;
							
							S.SLOT.THIRD.ID := $S.STT.RESULT.ID[N.REF.NBEST.COUNT][4] ;
							S.SLOT.THIRD.TAG := $S.REFERENCE.RESULTS[N.TEMP.FIRST][9] ;
							S.SLOT.THIRD.VALUE := $S.STT.RESULT.SLOT[N.REF.NBEST.COUNT][8] ;
							S.SLOT.THIRD.SCORE := $S.STT.RESULT.SCORE[N.REF.NBEST.COUNT][1] ;
						END
						
					N.TEMP.FIRST := N.TEMP.FIRST + 1 ;
				END
		END
	
	CALL Common.SetActionString () ;
	
	! SET FIX RESULT INFO
	S.RESULT.FIX.CID := S.RESULT.CID ;
	S.RESULT.FIX.CMD := S.RESULT.CMD ;
	S.RESULT.FIX.DIP := S.RESULT.DIP ;
	S.RESULT.FIX.SCORE := S.RESULT.SCORE ;
EOP

! 1-BEST에 대한 REFERENCE DB 검색 결과 저장(RADIO 방송국명)
JINIE Common.ReferenceOneBestResultRadio ()
	
	N.RESULT.CONUT.NUM := 1 ; ! 1-Best
	
	S.INNER.LOG.STRING ~= $N.REFERENCE.RESULTS ;
	LOG "LP LOG : Common.ReferenceOneBestResultRadio - $N.REFERENCE.RESULTS = " + S.INNER.LOG.STRING + " | $S.REFERENCE.RESULTS = " + $S.REFERENCE.RESULTS ;

	! SET REFERENCE DB SEARCH RESULTS
	S.RESULT.CID := $S.REFERENCE.RESULTS[1][1] ;
	S.RESULT.CMD := $S.REFERENCE.RESULTS[1][2] ;
	S.RESULT.DIP := $S.REFERENCE.RESULTS[1][3] ;
	S.RESULT.SCORE := $S.STT.RESULT.SCORE[1][1] ;
	
	S.RESULT.DOMAIN := $S.REFERENCE.RESULTS[1][4] ;
	S.RESULT.EXAMPLE := $S.REFERENCE.RESULTS[1][5] ;
	S.RESULT.INTENTION := $S.REFERENCE.RESULTS[1][6] ;
	
	S.SLOT.FIRST.ID := $S.REFERENCE.RESULTS[1][7] ;
	S.SLOT.FIRST.TAG := $S.REFERENCE.RESULTS[1][6] ;
	S.SLOT.FIRST.VALUE := $S.REFERENCE.RESULTS[1][3] ;
	S.SLOT.FIRST.SCORE := $S.STT.RESULT.SCORE[1][1] ;
	
	S.SLOT.SECOND.ID := $S.REFERENCE.RESULTS[1][7] ;
	S.SLOT.SECOND.TAG := "<SearchKeyword>" ;
	S.SLOT.SECOND.VALUE := $S.REFERENCE.RESULTS[1][10] ;
	S.SLOT.SECOND.SCORE := $S.STT.RESULT.SCORE[1][1] ;
	
	S.SLOT.THIRD.ID := "" ;
	S.SLOT.THIRD.TAG := "_" ;
	S.SLOT.THIRD.VALUE := "" ;
	S.SLOT.THIRD.SCORE := "" ;
	
	CALL Common.SetActionString () ;
	
	! SET FIX RESULT INFO
	S.RESULT.FIX.CID := S.RESULT.CID ;
	S.RESULT.FIX.CMD := S.RESULT.CMD ;
	S.RESULT.FIX.DIP := S.RESULT.DIP ;
	S.RESULT.FIX.SCORE := S.RESULT.SCORE ;
EOP

! 1-BEST에 대한 REFERENCE DB 검색 결과 저장(POI CATEGORY)
JINIE Common.ReferenceOneBestResultPoiCategory ()
	
	N.RESULT.CONUT.NUM := 1 ;
	
	S.INNER.LOG.STRING ~= $N.REFERENCE.RESULTS ;
	LOG "LP LOG : Common.ReferenceOneBestResultPoiCategory - $N.REFERENCE.RESULTS = " + S.INNER.LOG.STRING + " | $S.REFERENCE.RESULTS = " + $S.REFERENCE.RESULTS ;
	
	IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_FIND_POI" THEN
		BEGIN
			IF $N.STATUS.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY THEN
				BEGIN
					S.INNER.TEMP.STRING := "" ;
					S.RESULT.CID := "\@N_TAG_CATEGORY_NAME_ID" ;
				END
			ELSE
				BEGIN
					S.INNER.TEMP.STRING := "\@S_TAG_FIND_CATEGORY_STRING" ;
					S.RESULT.CID := "\@N_TAG_FIND_CATEGORY_ID" ;
				END
		END
		
	IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_CATEGORY_NAME_BIG" | $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_CATEGORY_NAME_MID" THEN
		BEGIN
			S.INNER.TEMP.STRING := "" ;
			S.RESULT.CID := "\@N_TAG_CATEGORY_NAME_ID" ;
		END
		
	! SET REFERENCE DB SEARCH RESULTS
	S.RESULT.CID := S.RESULT.CID ;
	S.RESULT.CMD := S.INNER.TEMP.STRING + $S.REFERENCE.RESULTS[1][2] ;
	S.RESULT.DIP := S.INNER.TEMP.STRING + $S.REFERENCE.RESULTS[1][3] ;
	S.RESULT.SCORE := $S.STT.RESULT.SCORE[1][1] ;
	
	S.RESULT.DOMAIN := $S.REFERENCE.RESULTS[1][4] ;
	S.RESULT.EXAMPLE := $S.REFERENCE.RESULTS[1][5] ;
	S.RESULT.INTENTION := $S.REFERENCE.RESULTS[1][6] ;
	
	S.SLOT.FIRST.ID    := $S.REFERENCE.RESULTS[1][1] ;
	S.SLOT.FIRST.TAG   := $S.REFERENCE.RESULTS[1][7] ;
	S.SLOT.FIRST.VALUE := $S.REFERENCE.RESULTS[1][3] ;
	S.SLOT.FIRST.SCORE := $S.STT.RESULT.SCORE[1][1] ;
	
	S.SLOT.SECOND.ID := S.SLOT.FIRST.ID ;
	S.SLOT.SECOND.TAG := "<SearchKeyword>" ;
	S.SLOT.SECOND.VALUE := "" ;
	S.SLOT.SECOND.SCORE := S.SLOT.FIRST.SCORE ;
	
	S.SLOT.THIRD.ID := "" ;
	S.SLOT.THIRD.TAG := "_" ;
	S.SLOT.THIRD.VALUE := "" ;
	S.SLOT.THIRD.SCORE := "" ;
	
	CALL Common.SetActionString () ;
	
	! SET FIX RESULT INFO
	S.RESULT.FIX.CID := S.RESULT.CID ;
	S.RESULT.FIX.CMD := S.RESULT.CMD ;
	S.RESULT.FIX.DIP := S.RESULT.DIP ;
	S.RESULT.FIX.SCORE := S.RESULT.SCORE ;
EOP

! N-BEST에 대한 REFERENCE DB 검색 결과 저장(대용량 POI)
JINIE Common.ReferenceNBestResultPoiName ()
	
	N.STORE.NBEST := 0 ;
	N.REF.NBEST.COUNT := 1 ;
	
	S.INNER.LOG.STRING ~= $N.REFERENCE.RESULTS ;
	LOG "LP LOG : Common.ReferenceNBestResultPoiName - $N.REFERENCE.RESULTS = " + S.INNER.LOG.STRING + " | $S.REFERENCE.RESULTS = " + $S.REFERENCE.RESULTS ;
	
	! SET REFERENCE DB SEARCH RESULTS
	WHILE ( N.REF.NBEST.COUNT <= $N.RESULT.RESULTS ) & ( N.STORE.NBEST < 4 ) DO
		BEGIN
			N.RESULT.ID ~= $S.RESULT.ID[N.REF.NBEST.COUNT][1] ;
			
			IF N.RESULT.ID > 1500000 THEN ! CHECK POI DATA
				BEGIN
					S.RESULT.CID := $S.REFERENCE.RESULTS[1][1] ;
					S.RESULT.CMD := $S.RULE.LEXICONS[N.REF.NBEST.COUNT][2] ;
					S.RESULT.DIP := $S.RULE.LEXICONS[N.REF.NBEST.COUNT][3] ;
					S.RESULT.SCORE := $S.STT.RESULT.SCORE[N.REF.NBEST.COUNT][1] ;
					
					S.RESULT.DOMAIN := $S.REFERENCE.RESULTS[1][4] ;
					S.RESULT.EXAMPLE := $S.REFERENCE.RESULTS[1][5] ;
					S.RESULT.INTENTION := $S.REFERENCE.RESULTS[1][6] ;
					
					S.SLOT.FIRST.ID    := $S.RESULT.ID[N.REF.NBEST.COUNT][1] ;
					S.SLOT.FIRST.TAG := $S.REFERENCE.RESULTS[1][7] ;
					S.SLOT.FIRST.VALUE := $S.RULE.LEXICONS[N.REF.NBEST.COUNT][3] ;
					S.SLOT.FIRST.SCORE := $S.STT.RESULT.SCORE[N.REF.NBEST.COUNT][1] ;
					
					S.SLOT.SECOND.ID := $S.RESULT.ID[N.REF.NBEST.COUNT][1] ;
					S.SLOT.SECOND.TAG := "<SearchKeyword>" ;
					S.SLOT.SECOND.VALUE := $S.RULE.LEXICONS[N.REF.NBEST.COUNT][2] ;
					S.SLOT.SECOND.SCORE := $S.STT.RESULT.SCORE[N.REF.NBEST.COUNT][1] ;
					
					S.SLOT.THIRD.ID := "" ;
					S.SLOT.THIRD.TAG := "_" ;
					S.SLOT.THIRD.VALUE := "" ;
					S.SLOT.THIRD.SCORE := "" ;
					
					IF N.REF.NBEST.COUNT = 1 THEN
						BEGIN
							! SET FIX RESULT INFO(1-Best)
							S.RESULT.FIX.CID := S.RESULT.CID ;
							S.RESULT.FIX.CMD := S.RESULT.CMD ;
							S.RESULT.FIX.DIP := S.RESULT.DIP ;
							S.RESULT.FIX.SCORE := S.RESULT.SCORE ;
						END
					
					CALL Common.SetActionString () ;
					
					N.STORE.NBEST := N.STORE.NBEST + 1 ;
				END
				
			N.REF.NBEST.COUNT := N.REF.NBEST.COUNT + 1 ;
		END
		
	N.RESULT.CONUT.NUM := N.STORE.NBEST ; ! N-best
	
	S.INNER.LOG.STRING ~= N.STORE.NBEST ;
	LOG "LP LOG : Common.ReferenceNBestResultPoiName - N.STORE.NBEST = " + S.INNER.LOG.STRING ;
EOP

! SLOT 정보에 대한 예외 처리 수행 및 포맷에 맞게 Action String 저장
JINIE Common.SetActionString ()
	
	! CHECK EMPTY SLOT
	IF S.SLOT.FIRST.TAG = "_" THEN
		BEGIN
			S.SLOT.FIRST.ID := "" ;
			S.SLOT.FIRST.TAG := "" ;
			S.SLOT.FIRST.VALUE := "" ;
			S.SLOT.FIRST.SCORE := "" ;
		END
	IF S.SLOT.SECOND.TAG = "_" THEN
		BEGIN
			S.SLOT.SECOND.ID := "" ;
			S.SLOT.SECOND.TAG := "" ;
			S.SLOT.SECOND.VALUE := "" ;
			S.SLOT.SECOND.SCORE := "" ;
		END
	IF S.SLOT.THIRD.TAG = "_" THEN
		BEGIN
			S.SLOT.THIRD.ID := "" ;
			S.SLOT.THIRD.TAG := "" ;
			S.SLOT.THIRD.VALUE := "" ;
			S.SLOT.THIRD.SCORE := "" ;
		END
		
	! SLOT INFO EXCEPTION
	IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_NAME" THEN ! MULTI-MODAL
		BEGIN
			S.RESULT.CMD := S.BT.NAME.SELECT ; ! 선택된 이름 전달
			S.SLOT.FIRST.ID := "\@N_TAG_NAME_ID" ; ! Slot1 ID : 190000
			S.SLOT.FIRST.VALUE := S.BT.NAME.SELECT ; ! 선택된 이름 전달
		END
		
	IF S.RESULT.CID = "\@N_TAG_MANUAL_VAD_MOBILE_ID" | S.RESULT.CID = "\@N_TAG_MANUAL_VAD_OFFICE_ID" |
	S.RESULT.CID = "\@N_TAG_MANUAL_VAD_HOME_ID" | S.RESULT.CID = "\@N_TAG_MANUAL_VAD_OTHER_ID" THEN
		BEGIN
			S.SLOT.FIRST.ID := S.RESULT.CID ;
			S.SLOT.FIRST.VALUE := S.BT.NAME.SELECT ; ! 선택된 이름 전달
		END
		
	IF S.RESULT.CID = "\@N_TAG_FM_FREQUENCY_ID" | S.RESULT.CID = "\@N_TAG_FM_FREQ_SLOT_ID" |
		S.RESULT.CID = "\@N_TAG_AM_FREQUENCY_ID" | S.RESULT.CID = "\@N_TAG_AM_FREQ_SLOT_ID" THEN
		BEGIN
			S.SLOT.FIRST.VALUE := S.SLOT.RESULT ;
		END
		
	IF S.RESULT.CID = "\@N_TAG_FIND_CATEGORY_ID" | S.RESULT.CID = "\@N_TAG_CATEGORY_NAME_ID" THEN
		BEGIN
			CALL LpProc.CategoryGenreCode () ;
			S.SLOT.SECOND.VALUE := S.GENRE.CODE ; ! CATEGORY GENRE CODE 전달 처리
		END
		
	IF S.RESULT.CID = "\@N_TAG_PLAY_TRACK_NUMBER_ID" | S.RESULT.CID = "\@N_TAG_PRESET_NUMBER_ID" |
		S.RESULT.CID = "\@N_TAG_LINE_NUMBER_ID" | S.RESULT.CID = "\@N_TAG_NAVI_LINE_NUMBER_ID" THEN
		BEGIN
			IF $N.INTERRUPT.TYPE = 4 THEN
				BEGIN
					S.SLOT.FIRST.VALUE := $S.RESULT.ID[1][2] ;
				END
				
			S.SLOT.FIRST.ID := S.SLOT.FIRST.VALUE ; ! SLOT ID 전달 : 트랙 1, 1번 방송, 목록 1 -> '1'
		END
		
	! SET LINE FEED
	IF S.SLOT.FIRST.TAG = "" THEN ! SLOT not exist
		BEGIN
			S.ACTION.STRING := S.ACTION.STRING + S.RESULT.DOMAIN + "\f" + S.RESULT.EXAMPLE + "\f" + S.RESULT.INTENTION + "\n" ;
		END
	ELSE
		BEGIN
			IF S.SLOT.SECOND.TAG = "" THEN ! SLOT 1 exist
				BEGIN
					S.ACTION.STRING := S.ACTION.STRING + S.RESULT.DOMAIN + "\f" + S.RESULT.EXAMPLE + "\f" + S.RESULT.INTENTION + "\f" +
						S.SLOT.FIRST.ID + "\f" + S.SLOT.FIRST.TAG + "\f" + S.SLOT.FIRST.VALUE + "\f" + S.SLOT.FIRST.SCORE + "\n" ;
				END
			ELSE
				BEGIN
					IF S.SLOT.THIRD.TAG = "" THEN ! SLOT 1,2 exist
						BEGIN
							S.ACTION.STRING := S.ACTION.STRING + S.RESULT.DOMAIN + "\f" + S.RESULT.EXAMPLE + "\f" + S.RESULT.INTENTION + "\f" +
								S.SLOT.FIRST.ID + "\f" + S.SLOT.FIRST.TAG + "\f" + S.SLOT.FIRST.VALUE + "\f" + S.SLOT.FIRST.SCORE + "\f" +
								S.SLOT.SECOND.ID + "\f" + S.SLOT.SECOND.TAG + "\f" + S.SLOT.SECOND.VALUE + "\f" + S.SLOT.SECOND.SCORE + "\n" ;
						END
					ELSE ! SLOT 1,2,3 exist
						BEGIN
							S.ACTION.STRING := S.ACTION.STRING + S.RESULT.DOMAIN + "\f" + S.RESULT.EXAMPLE + "\f" + S.RESULT.INTENTION + "\f" +
								S.SLOT.FIRST.ID + "\f" + S.SLOT.FIRST.TAG + "\f" + S.SLOT.FIRST.VALUE + "\f" + S.SLOT.FIRST.SCORE + "\f" +
								S.SLOT.SECOND.ID + "\f" + S.SLOT.SECOND.TAG + "\f" + S.SLOT.SECOND.VALUE + "\f" + S.SLOT.SECOND.SCORE + "\f" +
								S.SLOT.THIRD.ID + "\f" + S.SLOT.THIRD.TAG + "\f" + S.SLOT.THIRD.VALUE + "\f" + S.SLOT.THIRD.SCORE + "\n" ;
						END
				END
		END
EOP

! 상단 문구 예외 처리 수행 및 대표 Command에 대한 Action Value 저장
JINIE Common.SetActionValue ()

	! FIX RESULT N-BEST COUNT SAVED
	S.RESULT.FIX.NBEST ~= N.RESULT.CONUT.NUM ;
	
	! S.RESULT.FIX.DIP EXCEPTION
	IF S.SLOT.FIRST.TAG = "<SLOT_FM_FREQ>" | S.SLOT.FIRST.TAG = "<SLOT_AM_FREQ>" THEN
		BEGIN
			S.RESULT.FIX.DIP := S.RESULT.FIX.DIP + " " + S.SLOT.RESULT ; ! 상단문구 전달 처리 : FM 89.1, AM 560
		END
		
	IF S.RESULT.FIX.CID = "\@N_TAG_PLAY_TRACK_NUMBER_ID" | S.RESULT.FIX.CID = "\@N_TAG_LINE_NUMBER_ID" | S.RESULT.FIX.CID = "\@N_TAG_NAVI_LINE_NUMBER_ID" THEN
		BEGIN
			S.RESULT.FIX.DIP := S.RESULT.FIX.DIP + " " + S.SLOT.FIRST.VALUE ; ! 상단문구 전달 처리 : 트랙 1, 목록 1
		END
		
	IF S.RESULT.FIX.CID = "\@N_TAG_PRESET_NUMBER_ID" THEN
		BEGIN
			S.RESULT.FIX.DIP := S.SLOT.FIRST.VALUE + S.RESULT.FIX.DIP ; ! 상단문구 전달 처리 : 1번 방송
		END
		
	IF S.RESULT.FIX.CID = "\@N_TAG_RADIO_AST_ID" | S.RESULT.FIX.CID = "\@N_TAG_DMB_AST_ID" THEN
		BEGIN
			IF $N.STATUS.DIALOG = @N_DIALOG_MAINMENU THEN
				BEGIN
					IF N.AVN.MODE = 1 | N.AVN.MODE = 2 | N.AVN.MODE = 3 | N.AVN.MODE = 4 THEN ! FM, FM1, FM2, AM
						BEGIN
							S.RESULT.FIX.DIP := "\@S_TAG_RADIO_AST_STRING" ; ! 자동 선국
						END
					ELSE
						BEGIN
							IF N.AVN.MODE = 7 THEN ! DMB
								BEGIN
									S.RESULT.FIX.DIP := "\@S_TAG_DMB_AST_STRING" ; ! 채널 검색
								END
							ELSE ! OTHER
								BEGIN
									S.RESULT.FIX.DIP := S.RESULT.FIX.DIP ; ! 인식된 그대로 전달
								END
						END
				END
		END
		
	IF S.RESULT.FIX.CID = "\@N_TAG_DESTINATION_SEARCH_ID" | S.RESULT.FIX.CID = "\@N_TAG_FIND_SERVER_ID" THEN
		BEGIN
			! 상단 문구 : Hybrid vr 에서는 [길 안내], Hybrid vr 미 사양에서는 [목적지 설정] (Main Keyword)
			IF N.VENDER.VR.MODE = 1 THEN
				BEGIN
					S.RESULT.FIX.CMD := "\@S_TAG_FIND_SERVER_STRING" ;
					S.RESULT.FIX.DIP := "\@S_TAG_FIND_SERVER_STRING" ;
				END
		END
		
	IF S.RESULT.FIX.CID = "\@N_TAG_FIND_POI_ADDRESS_SERVER_ID" | S.RESULT.FIX.CID = "\@N_TAG_POI_ADDRESS_SERVER_ID" THEN
		BEGIN
			S.RESULT.FIX.CMD := $S.STT.RESULT.ONLINE.SLOT[1][2] ;
			S.RESULT.FIX.DIP := $S.STT.RESULT.ONLINE.SLOT[1][2] ;
		END
		
	IF S.RESULT.FIX.CID = "\@N_TAG_MANUAL_NETWORK_DISCONNECTED_ID" THEN
		BEGIN
			S.RESULT.FIX.DIP := "" ;
		END
		
	! SET ACTION VALUE
	$S.ACTION.VALUE := S.RESULT.FIX.CID + "\f" + S.RESULT.FIX.CMD + "\f" + S.RESULT.FIX.DIP + "\f" + S.RESULT.FIX.SCORE + "\f" + S.RESULT.FIX.NBEST ;
	
	CALL Common.SendActionResult () ;
	
	! REFERENCE KEY INITIALIZE
	S.REF.KEY := "" ;
EOP

! ACTION VALUE, ACTION STRING 전달
JINIE Common.SendActionResult ()

	LOG "LP LOG : Common.SendActionResult - $S.ACTION.VALUE = " + $S.ACTION.VALUE ;
	LOG "LP LOG : Common.SendActionResult - S.ACTION.STRING = " + S.ACTION.STRING ;
	
	S.INNER.LOG.STRING ~= $N.ABSOLUTE.RESULT.VALUE ;
	LOG "LP LOG : Common.SendActionResult - $N.ABSOLUTE.RESULT.VALUE = " + S.INNER.LOG.STRING ;
	
	IF $N.ABSOLUTE.RESULT.VALUE = @N_RESULT_EMBEDDED THEN
		BEGIN
			MESSAGE "(RESULT_EMBEDDED) \f" + $S.ACTION.VALUE + "\f" + S.ACTION.STRING ;
			MESSAGE "(RESULT_MERGE_EMBEDDED) \f" + $S.ACTION.VALUE + "\f"+ S.ACTION.STRING ;
		END
	ELSE
		BEGIN
			MESSAGE "(RESULT_SERVER) \f" + $S.ACTION.VALUE + "\f" + S.ACTION.STRING ;
			MESSAGE "(RESULT_MERGE_SERVER) \f" + $S.ACTION.VALUE + "\f" + S.ACTION.STRING;
		END
EOP

! 시나리오 처리를 위하여 이전의 RULE TAG를 저장
JINIE Common.SetPreRuleTag ()

	IF S.RESULT.FIX.CID = "\@N_TAG_VAD_CALL_ID" | S.RESULT.FIX.CID = "\@N_TAG_VAD_MOBILE_ID" | S.RESULT.FIX.CID = "\@N_TAG_VAD_HOME_ID" |
		S.RESULT.FIX.CID = "\@N_TAG_VAD_OFFICE_ID" | S.RESULT.FIX.CID = "\@N_TAG_VAD_OTHER_ID" | S.RESULT.FIX.CID = "\@N_TAG_NAME_ID" |
		S.RESULT.FIX.CID = "\@N_TAG_DMB_ID" | S.RESULT.FIX.CID = "\@N_TAG_STATION_LIST_ID" | S.RESULT.FIX.CID = "\@N_TAG_BT_AUDIO_ID" |
		S.RESULT.FIX.CID = "\@N_TAG_DESTINATION_SEARCH_ID" | S.RESULT.FIX.CID = "\@N_TAG_POI_NAME_ID" |
		S.RESULT.FIX.CID = "\@N_TAG_FIND_POI_ID" | S.RESULT.FIX.CID = "\@N_TAG_FIND_CATEGORY_ID" | 
		S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_POINT_ID" | S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_DESTINATION_ID" | S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_SEARCH_ID" |
		S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_START_ID" | S.RESULT.FIX.CID = "\@N_TAG_GO_HOME_ID" | S.RESULT.FIX.CID = "\@N_TAG_GO_TO_OFFICE_ID" |
		S.RESULT.FIX.CID = "\@N_TAG_CANCEL_ROUTE_ID" | S.RESULT.FIX.CID = "\@N_TAG_FIND_SERVER_ID" | S.RESULT.FIX.CID = "\@N_TAG_FIND_POI_ADDRESS_SERVER_ID" THEN
		BEGIN
			S.PRE.RESULT.FIX.CID := S.RESULT.FIX.CID ;
		END
	ELSE
		BEGIN
			S.PRE.RESULT.FIX.CID := S.PRE.RESULT.FIX.CID ;
		END
	
	LOG "LP LOG : Common.SetPreRuleTag - S.RESULT.FIX.CID = " + S.RESULT.FIX.CID ;
	LOG "LP LOG : Common.SetPreRuleTag - S.PRE.RESULT.FIX.CID = " + S.PRE.RESULT.FIX.CID ;
EOP

! POST PROCESSOR에서 사용하는 SYSTEM CALL 변수 호출
JINIE Common.SystemCallPost (NUMBER N.CID)

	S.INNER.LOG.STRING ~= N.CID ;
	LOG "LP LOG : Common.SystemCallPost - N.CID = " + S.INNER.LOG.STRING ;
	
	! PHONE
	IF N.CID = @N_TAG_PHONE_CALL_ID THEN ! LpProc.PhoneCall ()
		BEGIN
			MESSAGE "(VH) \fN.BT.DEVICE.PAIRED\fN.BT.DEVICE.CONNECT\fN.BT.PHONE.CONNECT\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.BT.CONTACT.NUMBER\fN.BT.DP.BUSY\fN.BT.DP.NUMBER\fN.BT.PHONEBOOK.DOWNLOADABLE\fN.SYSTEM.DRIVING" ;
		END
		
	IF N.CID = @N_TAG_VAD_CALL_ID THEN ! LpProc.VadCall ()
		BEGIN
			IF S.SLOT.SECOND.ID = "" THEN ! LpProc.VadCall ()
				BEGIN
					MESSAGE "(VH) \fN.GLOBAL.NBEST.RESULT.NUM\fN.BT.CATEGORY.NUM\fS.BT.NAME.SELECT\fS.BT.NAME.TTS" ;
				END
			ELSE ! LpProc.VadMobile (), LpProc.VadHome (), LpProc.VadOffice (), LpProc.VadOther ()
				BEGIN
					MESSAGE "(VH) \fN.GLOBAL.NBEST.RESULT.NUM\fN.BT.SELECT.CATEGORY.EXIST\fN.BT.CATEGORY.NUMBER.NUM\fS.BT.NAME.SELECT\fS.BT.NAME.TTS" ;
				END
		END
		
	IF N.CID = @N_TAG_NAME_ID THEN ! LpProc.Name ()
		BEGIN
			IF $N.STATUS.PROCESS = @N_PROCESS_RULE THEN
				BEGIN
					MESSAGE "(VH) \fS.BT.NAME.SELECT\fS.BT.NAME.TTS" ;
				END
			IF $N.STATUS.PROCESS = @N_PROCESS_RESULT THEN
				BEGIN
					MESSAGE "(VH) \fN.GLOBAL.NBEST.RESULT.NUM\fN.BT.CATEGORY.NUM\fS.BT.NAME.SELECT\fS.BT.NAME.TTS" ;
				END
		END
		
	IF N.CID = @N_TAG_NAVI_DIAL_ID THEN ! LpProc.NaviDial ()
		BEGIN
			MESSAGE "(VH) \fN.BT.DEVICE.PAIRED\fN.BT.DEVICE.CONNECT\fN.BT.PHONE.CONNECT\fN.SYSTEM.DRIVING" ;
		END
		
	IF N.CID = @N_TAG_PHONE_MOBILE_ID | N.CID = @N_TAG_PHONE_HOME_ID | N.CID = @N_TAG_PHONE_OFFICE_ID | N.CID = @N_TAG_PHONE_OTHER_ID THEN
		BEGIN ! LpProc.PhoneMobile (), LpProc.PhoneHome (), LpProc.PhoneOffice (), LpProc.PhoneOther ()
			MESSAGE "(VH) \fN.BT.SELECT.CATEGORY.EXIST\fS.BT.NAME.SELECT\fS.BT.NAME.TTS" ;
		END
		
	IF N.CID = @N_TAG_MANUAL_VAD_MOBILE_ID | N.CID = @N_TAG_MANUAL_VAD_HOME_ID | N.CID = @N_TAG_MANUAL_VAD_OFFICE_ID | N.CID = @N_TAG_MANUAL_VAD_OTHER_ID THEN
		BEGIN ! LpProc.ManualVadMobile (), LpProc.ManualVadHome (), LpProc.ManualVadOffice (), LpProc.ManualVadOther ()
			MESSAGE "(VH) \fN.BT.SELECT.CATEGORY.EXIST" ;
		END
		
	! RADIO
	IF N.CID = @N_TAG_RADIO_ID THEN ! LpProc.Radio ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.RADIO.LAST.MODE" ;
		END
		
	IF N.CID = @N_TAG_DMB_ID THEN ! LpProc.Dmb ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.DMB.AUTO.SEARCH" ;
		END
		
	IF N.CID = @N_TAG_DMB_AST_ID THEN ! LpProc.Ast ()
		BEGIN
			MESSAGE "(VH) \fN.AV.CONDITION\fN.GLOBAL.CONDITION\fN.AVN.MODE" ;
		END
		
	IF N.CID = @N_TAG_RADIO_STATION_ID THEN ! LpProc.RadioStation ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.MODE\fN.AVN.SEARCH.RESULT.NUM\fS.AVN.SELECT.STATION.SLOT" ;
		END
		
	IF N.CID = @N_TAG_PRESET_NUMBER_ID THEN ! LpProc.PresetNumber ()
		BEGIN
			MESSAGE "(VH) \fN.AV.CONDITION\fN.GLOBAL.CONDITION\fN.AVN.PRESET.STORED.AVAILABLE\fN.AVN.PRESET.STATE\fN.AVN.SELECT.SLOT\fS.AVN.SELECT.SLOT" ;
		END
		
	IF N.CID = @N_TAG_STATION_LIST_ID THEN ! LpProc.StationList ()
		BEGIN
			MESSAGE "(VH) \fN.AV.CONDITION\fN.GLOBAL.CONDITION\fN.AVN.MODE\fN.AVN.DMB.AUTO.SEARCH" ;
		END
		
	IF N.CID = @N_TAG_FM_LIST_ID THEN ! LpProc.FmList ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.FMLIST.AVAILABLE" ;
		END
		
	IF N.CID = @N_TAG_AM_LIST_ID THEN ! LpProc.AmList ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.AMLIST.AVAILABLE" ;
		END
		
	IF N.CID = @N_TAG_MANUAL_PRESET_ID THEN ! LpProc.ManualPreset ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.PRESET.STORED.AVAILABLE" ;
		END
		
	! MEDIA
	IF N.CID = @N_TAG_MUSIC_ID THEN ! LpProc.Music ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.MEDIA.FILE.NUM\fN.AVN.MEDIA.LAST.MODE\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.AVN.AUX.CONNECT\fN.SYS.CARPLAY.ACTIVATE\fN.BT.DEVICE.CONNECT\fN.AVN.ATDP.AVAILABLE\fN.AVN.IPOD.ON.USB.CHECK" ;
		END
		
	IF N.CID = @N_TAG_CD_ID THEN ! LpProc.Cd ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.DISC.INSERT\fN.AVN.CD.LOADING\fN.AVN.TRACK.NUMBER" ;
		END
		
	IF N.CID = @N_TAG_IPOD_ID THEN ! LpProc.IPod ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.IPOD.AVAILABLE\fN.AVN.IPOD.LOADING\fN.AVN.USB.AVAILABLE\fN.AVN.USB.LOADING\fN.AVN.USB.MUSIC.AVAILABLE" ;
		END
		
	IF N.CID = @N_TAG_BT_AUDIO_ID THEN ! LpProc.BtAudio ()
		BEGIN
			MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.AVN.MIRRORLINK.ON.BT.CHECK\fN.AVN.ATDP.AVAILABLE\fN.BT.DEVICE.PAIRED\fN.BT.DEVICE.CONNECT\fN.AVN.IPOD.ON.USB.CHECK\fN.SYSTEM.DRIVING" ;
		END
		
	IF N.CID = @N_TAG_AUX_ID THEN ! LpProc.Aux ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.AUX.CONNECT" ;
		END
		
	IF N.CID = @N_TAG_MY_MUSIC_ID THEN ! LpProc.MyMusic ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.MYMUSIC.STATE\fN.AVN.MYMUSIC.MUSIC.AVAILABLE" ;
		END
		
	IF N.CID = @N_TAG_USB_ID THEN ! LpProc.Usb ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.USB.AVAILABLE\fN.AVN.USB.LOADING\fN.AVN.USB.MUSIC.AVAILABLE\fN.AVN.IPOD.AVAILABLE\fN.AVN.IPOD.LOADING" ;
		END
		
	IF N.CID = @N_TAG_PLAY_ID | N.CID = @N_TAG_PAUSE_ID | N.CID = @N_TAG_SHUFFLE_ID |
		N.CID = @N_TAG_SHUFFLE_OFF_ID | N.CID = @N_TAG_REPEAT_ID | N.CID = @N_TAG_REPEAT_OFF_ID THEN
		BEGIN ! LpProc.Play (), LpProc.Pause (), LpProc.Shuffle (), LpProc.ShuffleOff (), LpProc.Repeat (), LpProc.RepeatOff ()
			MESSAGE "(VH) \fN.AV.CONDITION\fN.GLOBAL.CONDITION\fN.AVN.MODE\fN.AVN.IPOD.MUSIC.AVAILABLE" ;
		END
		
	IF N.CID = @N_TAG_PLAY_TRACK_NUMBER_ID THEN ! LpProc.PlayTrackNumber ()
		BEGIN
			MESSAGE "(VH) \fN.AV.CONDITION\fN.GLOBAL.CONDITION\fN.AVN.TRACK.NUMBER" ;
		END
		
	IF N.CID = @N_TAG_VOICE_MEMO_ID THEN ! LpProc.VoiceMemo ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.VOICEMEMO.AVAILABLE" ;
		END
		
	! NAVI
	IF N.CID = @N_TAG_SHOW_MAP_ID THEN ! LpProc.ShowMap ()
		BEGIN
			MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_DESTINATION_SEARCH_ID THEN ! LpProc.DestinationSearch ()
		BEGIN
			IF N.VENDER.VR.MODE = 1 THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.CURRENT.REGION\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.SERVER.EXPIRED.PROMPT.CHECK\fN.NAVI.SDCARD.EXIST" ;
				END
			ELSE
				BEGIN
					MESSAGE "(VH) \fN.NAVI.CURRENT.REGION\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
				END
		END
		
	IF N.CID = @N_TAG_POI_NAME_ID THEN ! LpProc.PoiName ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.SEARCH.RESULT.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST" ;
		END
		
	IF N.CID = @N_TAG_FIND_POI_ID THEN ! LpProc.FindPOI ()
		BEGIN
			IF N.VENDER.VR.MODE = 1 THEN
				BEGIN
					MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.SERVER.EXPIRED.PROMPT.CHECK\fN.NAVI.SDCARD.EXIST" ;
				END
			ELSE
				BEGIN
					MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
				END
		END
		
	IF N.CID = @N_TAG_FIND_CATEGORY_ID THEN ! LpProc.FindPOICategory ()
		BEGIN
			IF N.VENDER.VR.MODE = 1 THEN
				BEGIN
					MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.SERVER.EXPIRED.PROMPT.CHECK\fN.NAVI.DESTINATION.SETTING\fN.NAVI.FIND.POSITION.NUM\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
				END
			ELSE
				BEGIN
					MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.DESTINATION.SETTING\fN.NAVI.FIND.POSITION.NUM\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
				END
		END
		
	IF N.CID = @N_TAG_CATEGORY_NAME_ID THEN ! LpProc.CategoryName ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.DESTINATION.SETTING\fN.NAVI.FIND.POSITION.NUM\fN.NAVI.PHONE.NUMBER.EXIST" ;
		END
		
	IF N.CID = @N_TAG_NEAR_CURRENT_POSITION_ID THEN ! LpProc.NearCurrentPosition ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.FIND.POSITION.NUM" ;
		END
		
	IF N.CID = @N_TAG_NEAR_DESTINATION_ID THEN ! LpProc.NearDestination ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.FIND.DESTINATION.NUM" ;
		END
		
	IF N.CID = @N_TAG_ALONG_ROUTE_ID THEN ! LpProc.AlongRoute ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.FIND.ROUTE.NUM" ;
		END
		
	IF N.CID = @N_TAG_PREVIOUS_POINT_ID THEN ! LpProc.PreviousPoint ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.PREVIOUS.POINT.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_PREVIOUS_DESTINATION_ID THEN ! LpProc.PreviousDestination ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.PREVIOUS.DESTINATION.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_PREVIOUS_SEARCH_ID THEN ! LpProc.PreviousSearch ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.PREVIOUS.SEARCH.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_PREVIOUS_START_ID THEN ! LpProc.PreviousStart ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.PREVIOUS.START.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_TRAFFIC_INFO_ID THEN ! LpProc.TrafficInfo ()
		BEGIN
			MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_TURN_GUIDANCE_ON_ID | N.CID = @N_TAG_TURN_GUIDANCE_OFF_ID THEN ! LpProc.TurnGuidanceOn (), LpProc.TurnGuidanceOff ()
		BEGIN
			MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_DESTINATION_INFO_ID THEN ! LpProc.DestinationInfo ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.GUIDANCE.STATE\fN.NAVI.ROUTE.CALCULATE\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_ROUTE_OPTION_ID THEN ! LpProc.RouteOption ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.GUIDANCE.STATE\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_SHOW_ROUTE_ID THEN ! LpProc.ShowRoute ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.GUIDANCE.STATE\fN.NAVI.ROUTE.CALCULATE\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_ADD_WAYPOINT_ID THEN ! LpProc.AddWaypoint ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.WAYPOINT.CONDITION" ;
		END
		
	IF N.CID = @N_TAG_GO_HOME_ID THEN ! LpProc.GoHome ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.HOME.REGISTERED\fN.NAVI.DESTINATION.SETTING\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_GO_TO_OFFICE_ID THEN ! LpProc.GoToOffice ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.OFFICE.REGISTERED\fN.NAVI.DESTINATION.SETTING\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_STOP_GUIDANCE_ID | N.CID = @N_TAG_RESUME_GUIDANCE_ID THEN ! LpProc.StopGuidance (), LpProc.ResumeGuidance ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.GUIDANCE.STATE\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_FIND_FASTER_TIME_ID | N.CID = @N_TAG_FIND_SHORTER_DISTANCE_ID THEN ! LpProc.FindFasterTime (), LpProc.FindShorterDistance ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.GUIDANCE.STATE\fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_FIND_SERVER_ID THEN ! LpProc.FindServer ()
		BEGIN
			MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_POI_ADDRESS_SERVER_ID THEN ! LpProc.PoiAddressServer ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.SEARCH.RESULT.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST" ;
		END
		
	IF N.CID = @N_TAG_FIND_POI_ADDRESS_SERVER_ID THEN ! LpProc.FindPoiAddressServer ()
		BEGIN
			MESSAGE "(VH) \fN.SYS.MIRRORLINK.DEVICE.CONNECT\fN.SYS.MIRRORLINK.NAVI.CONDITION\fN.NAVI.SEARCH.RESULT.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	! GENERAL
	IF N.CID = @N_TAG_YES_ID THEN ! LpProc.Yes ()
		BEGIN
			MESSAGE "(VH) \fS.BT.NAME.SELECT\fS.BT.NAME.TTS\fN.BT.PHONE.CONNECT\fN.BT.DEVICE.PAIRED" ;
		END
		
	IF N.CID = @N_TAG_NAVI_YES_ID THEN ! LpProc.NaviYes ()
		BEGIN
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_GO_HOME_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.HOME.REGISTERED" ;
				END
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_GO_TO_OFFICE_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.OFFICE.REGISTERED" ;
				END
		END
		
	IF N.CID = @N_TAG_NAVI_NO_ID THEN ! LpProc.NaviNo ()
		BEGIN
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_GO_HOME_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.HOME.REGISTERED" ;
				END
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_GO_TO_OFFICE_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.OFFICE.REGISTERED" ;
				END
		END
		
	IF N.CID = @N_TAG_LINE_NUMBER_ID THEN ! LpProc.LineNumber ()
		BEGIN
			MESSAGE "(VH) \fN.BT.NAME.TYPE\fS.AVN.SELECT.SLOT\fS.BT.NAME.SELECT\fS.BT.NAME.TTS\fN.GLOBAL.LISTITEM.NUM\fN.GLOBAL.NBEST.RESULT.NUM\fN.BT.CATEGORY.NUM\fN.BT.SELECT.CATEGORY.EXIST\fN.BT.CATEGORY.NUMBER.NUM\fS.AVN.SELECT.STATION.SLOT" ;
		END
		
	IF N.CID = @N_TAG_NAVI_LINE_NUMBER_ID THEN ! LpProc.NaviLineNumber ()
		BEGIN
			MESSAGE "(VH) \fN.GLOBAL.LISTITEM.NUM\fN.NAVI.SEARCH.RESULT.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST" ;
		END
		
	IF N.CID = @N_TAG_NEXT_PAGE_ID | N.CID = @N_TAG_PREVIOUS_PAGE_ID THEN ! LpProc.NextPage (), LpProc.PreviousPage ()
		BEGIN
			MESSAGE "(VH) \fN.GLOBAL.LISTITEM.REMAIN" ;
		END
EOP

! 현재 DIALOG와 동일한 DIALOG로 천이하는 경우,
! TRANSITION DIALOG를 REPEAT DIALOG로 변경하여 BACK DIALOG STACK 관리
JINIE Common.RepeatControl ()

	! REPEAT CONTROL
	IF $N.STATUS.DIALOG = $N.TRANSITION.DIALOG THEN
		BEGIN
			$N.TRANSITION.DIALOG := @N_DIALOG_REPEAT ;
		END
EOP

! 모드에 따른 FEEDBACK PROMPT 설정
JINIE Common.FeedbackPromptControl ()
	
	! FEEDBACK PROMPT CONTROL
	IF N.CONTROL.RECOGNITION.MODE = 0 THEN
		BEGIN
			$S.PROMPT.FEEDBACK.EXPRESSION := "\"" + S.INNER.PROMPT.KINDLY.STR + "\"" ;
		END
	ELSE
		BEGIN
			$S.PROMPT.FEEDBACK.EXPRESSION := "\"" + S.INNER.PROMPT.SIMPLY.STR + "\"" ;
		END
EOP

! ON SCREEN TEXT에 해당하는 FEEDBACK TEXT 및 LID 전달
! FEEDBACK 출력 후 마다 초기화가 필요한 항목에 대하여 초기화 수행
JINIE Common.FeedbackOnScreenText ()

	! LID
	$N.PROMPT.GUIDANCE.ID := N.SCREEN.PROMPT ;
	$N.PROMPT.FEEDBACK.ID := N.SCREEN.PROMPT ;
	
	! ON SCREEN TEXT
	IF S.INNER.PROMPT.DISPLY.STR = "" THEN
		BEGIN
			$S.PROMPT.FEEDBACK.TEXT := $S.PROMPT.FEEDBACK.EXPRESSION ;
		END
	ELSE 
		BEGIN
			$S.PROMPT.FEEDBACK.TEXT := "\"" + S.INNER.PROMPT.DISPLY.STR + "\"" ;
		END
		
	! UNINITAL
	$S.RESULT.STRING := "" ;
	$S.STT.RESULT.STRING := "" ;
	$S.STT.RESULT.ONLINE.STRING := "" ;
	$S.STT.RESULT.OFFLINE.STRING := "" ;
EOP

! 기본 PROMPT, TRANSITION DIALOG 설정
JINIE Common.FeedbackBasicSetting ()

	S.INNER.PROMPT.KINDLY.STR := "" ;
	S.INNER.PROMPT.SIMPLY.STR := "" ;
	S.INNER.PROMPT.DISPLY.STR := "" ;
	N.EXIT.ACTION.TRANSITION := 99999 ;
	$N.TRANSITION.DIALOG := @N_DIALOG_EXIT ;
EOP
