! 음성인식 진입 시 마다 초기화 및 설정이 필요한 항목에 대하여 초기화 수행
JINIE Common.Initializer ()

	! FULL BARGE IN
	CALL System.Param.Bargein () ;
	
	! SA/EA ADAPTATION
	CALL System.Param.Adaptation () ;
	
	! DUAL THRESHOLD
	CALL System.Param.Threshold () ;

	! VARIABLE INITIALIZER
	$S.ACTION.VALUE := "" ;
	S.PRE.RESULT.FIX.CID := "" ;
	S.BT.ACTION.TEMP := "" ;
	S.BT.DIALNUMBER.PROMPT.STR := "" ;
	S.INNER.PROMPT.KINDLY.STR := "" ;
	S.INNER.PROMPT.SIMPLY.STR := "" ;
	S.INNER.PROMPT.DISPLY.STR := "" ;
	N.INNER.CONFIDENCE.FIRST.VALUE := 0 ;
	N.INNER.CONFIDENCE.SECOND.VALUE := 0 ;
	N.INNER.CONFIDENCE.GAP.VALUE := 0 ;
	S.INNER.TEMP.STRING := "" ;
	S.INNER.SCREEN.STRING := "" ;
	N.INNER.DIALNUMBER.ONESHOT.FLAG := 0 ;
	N.INNER.DIALNUMBER.HELP.FLAG := 0 ;
	N.INNER.NAVIGATION.HELP.FLAG := 0 ;
	S.INNER.NAVI.ADDRESS.NUM := "" ;
	S.INNER.NAVI.NBESTLIST.NUMBER := "" ;
	N.INNER.NAVI.REGISTED.FLAG := 0 ; ! GO_HOME, GO_TO_OFFICE 주소 검색 후 등록 했는지에 대한 확인
	S.INNER.CATEGORY.INFO := "" ;
	N.INNER.FIND.ADDRESS.PROMPT.FLAG := 0 ;
	
	! FALLBACK
	$N.FALLBACK.FLAG := @N_FLAG_OFF ;
EOP

! PRE PROCESSOR 사용 PROCESS의 PROCESS 및 PROGRAM 사용 여부 설정
! DIALOG 진입 시 마다 초기화가 필요한 항목에 대하여 초기화 수행
JINIE Common.ControlPre (NUMBER N.DIALOG)

	CALL Common.SetStagePre (N.DIALOG) ;
	CALL Common.InitializerPre (N.DIALOG) ;
	CALL Common.SetTtsTuningDb (N.DIALOG) ;
EOP

! Pre Processor 진입 시 마다 Stage on/off 설정
JINIE Common.SetStagePre (NUMBER N.DIALOG)
	
	! CONTROL 
	$N.CONTROL.PROCESS.INIT := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.INIT := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.CONTEXT := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.CONTEXT := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.GUIDANCE := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.RECOGNITION := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.RECOGNITION := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.RULE := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.RULE := @N_FLAG_ON ;
	
	IF N.DIALOG = @N_DIALOG_NO_RECOG_DRIVING THEN
		BEGIN
			$N.CONTROL.PROCESS.GUIDANCE := @N_FLAG_OFF ;
			$N.CONTROL.PROGRAM.RECOGNITION := @N_FLAG_OFF ;
		END
	IF N.DIALOG = @N_DIALOG_NO_RECOG_BACK | N.DIALOG = @N_DIALOG_NO_RECOG_EXIT
		| N.DIALOG = @N_DIALOG_NO_RECOG_HOUSE_NUMBER_STEP THEN
		BEGIN
			$N.CONTROL.PROGRAM.RECOGNITION := @N_FLAG_OFF ;
		END
EOP

! Pre Processor 진입 시 마다 초기화 및 설정이 필요한 항목에 대하여 수행
JINIE Common.InitializerPre (NUMBER N.DIALOG)
	
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_LOCATION | N.DIALOG = @N_DIALOG_NAVI_VDE_STREETCITY_STEP THEN
		BEGIN
			! RULE FORMAT
			$N.RULE.FORMAT := 2 ; ! ID
		END
	ELSE
		BEGIN
			$N.RULE.FORMAT := 1 ; ! STRING
		END
		
	IF N.DIALOG = @N_DIALOG_NO_RECOG_EXIT THEN
		BEGIN
			N.EXIT.ACTION.TRANSITION := N.EXIT.ACTION.TRANSITION ;
		END
	ELSE
		BEGIN
			N.EXIT.ACTION.TRANSITION := 99999 ;
		END
		
	$S.STT.RESULT.ID := "" ;
	$S.STT.RESULT.STRING := "" ;
	$S.STT.RESULT.OFFLINE.ID := "" ;
	$S.STT.RESULT.OFFLINE.STRING := "" ;
	$S.STT.RESULT.ONLINE.STRING := "" ;
	
	$S.CONTEXT.LEX := "" ;
	$S.RESULT.ID := "" ;
	$S.RESULT.STRING := "" ;
	
	$S.ACTION.VALUE := "" ;
	S.ACTION.STRING := "" ;
	N.INNER.RECOG.COUNT.NUM := 0 ;
	N.CONTROL.TIMEOUT.NUM := 0 ;
	N.CONTROL.REJECTION.NUM := 0 ;
	N.REF.NBEST.COUNT := 1 ;
	N.RESULT.CONUT.NUM := 1 ;
	
	S.REF.KEY := "" ;
	S.RESULT.CID := "" ; ! COMMAND ID
	S.RESULT.CMD := "" ; ! COMMAND
	S.RESULT.DIP := "" ; ! SCREEN_TEXT
	S.RESULT.SCORE := "" ; ! SCORE
	
	S.RESULT.DOMAIN := "" ; ! DOMAIN
	S.RESULT.EXAMPLE := "" ; ! EXAMPLE
	S.RESULT.INTENTION := "" ; ! INTENTION
	
	S.SLOT.FIRST.ID    := "" ; ! Slot1 ID SAVED
	S.SLOT.FIRST.TAG := "" ; ! SLOT1_TAG
	S.SLOT.FIRST.VALUE := "" ; ! SLOT1 VALUE SAVED
	S.SLOT.FIRST.SCORE := "" ; ! SLOT1 SCORE SAVED
	
	S.SLOT.FIRST.ID    := "" ; ! Slot1 ID SAVED
	S.SLOT.FIRST.TAG := "" ; ! SLOT1_TAG
	S.SLOT.FIRST.VALUE := "" ; ! SLOT1 VALUE SAVED
	S.SLOT.FIRST.SCORE := "" ; ! SLOT1 SCORE SAVED
	
	S.SLOT.SECOND.ID    := "" ; ! Slot2 ID SAVED
	S.SLOT.SECOND.TAG := "" ; ! SLOT2_TAG
	S.SLOT.SECOND.VALUE := "" ; ! SLOT2 VALUE SAVED
	S.SLOT.SECOND.SCORE := "" ; ! SLOT2 SCORE SAVED
	
	S.SLOT.THIRD.ID := "" ; ! Slot3 ID SAVED
	S.SLOT.THIRD.TAG := "" ; ! SLOT3_TAG
	S.SLOT.THIRD.VALUE := "" ; ! SLOT3 VALUE SAVED
	S.SLOT.THIRD.SCORE := "" ; ! SLOT3 SCORE SAVED
	
	! SLM SETTING
	S.SLOT.TEMP := "" ;
	N.SLOT.REJECTION.VALUE := 3000 ; ! NEED TO TUNING
	N.SCORE.INTENTION.REJECTION.VALUE := 5000 ; ! NEED TO TUNING
	N.NAME.FLAG := 0 ;
	
	S.SLOT.TAG := "" ;
	S.SLOT.VALUE := "" ;
	S.SLOT.SCORE := "" ;
	S.SLOT.ID := "" ;
	
	S.SLOT.ID.NUMBER := "" ;
	S.SLOT.ID.FM.FREQ := "" ;
	S.SLOT.ID.AM.FREQ := "" ;
	S.SLOT.ID.CONTACTNAME := "" ;
	S.SLOT.ID.PHONETYPE := "" ;
	S.SLOT.ID.VAD.NUM := "" ;
	S.SLOT.ID.POI.CATEGORY := "" ;
	S.SLOT.ID.STATE.NAME := "" ;
	
	S.SLOT.TAG.NUMBER := "" ;
	S.SLOT.TAG.FM.FREQ := "" ;
	S.SLOT.TAG.AM.FREQ := "" ;
	S.SLOT.TAG.CONTACTNAME := "" ;
	S.SLOT.TAG.PHONETYPE := "" ;
	S.SLOT.TAG.VAD.NUM := "" ;
	S.SLOT.TAG.POI.CATEGORY := "" ;
	S.SLOT.TAG.STATE.NAME := "" ;
	S.SLOT.TAG.STREET.CITY := "" ;
	S.SLOT.TAG.HOUSE.NUMBER := "" ;
	
	S.SLOT.NUMBER := "" ;
	S.SLOT.FM.FREQ := "" ;
	S.SLOT.AM.FREQ := "" ;
	S.SLOT.CONTACTNAME := "" ;
	S.SLOT.PHONETYPE := "" ;
	S.SLOT.VAD.NUM := "" ;
	S.SLOT.POI.CATEGORY := "" ;
	S.SLOT.STATE.NAME := "" ;
	
	S.SLOT.SCORE.NUMBER := "" ;
	S.SLOT.SCORE.FM.FREQ := "" ;
	S.SLOT.SCORE.AM.FREQ := "" ;
	S.SLOT.SCORE.CONTACTNAME := "" ;
	S.SLOT.SCORE.PHONETYPE := "" ;
	S.SLOT.SCORE.VAD.NUM := "" ;
	S.SLOT.SCORE.POI.CATEGORY := "" ;
	S.SLOT.SCORE.STATE.NAME := "" ;
EOP

! TTS type에 따른 TTS tuning DB 설정
JINIE Common.SetTtsTuningDb (NUMBER N.DIALOG)

	! Default : VR mode
	$S.OUTPUT.RESOURCE.EXPRESSION := "" ;
	
	IF N.DIALOG = @N_DIALOG_VIRTUAL_TTS_BT THEN
		BEGIN
			$S.OUTPUT.RESOURCE.EXPRESSION := "" ;
		END
	IF N.DIALOG = @N_DIALOG_VIRTUAL_TTS_NAVI THEN
		BEGIN
			$S.OUTPUT.RESOURCE.EXPRESSION := "" ;
		END
	IF N.DIALOG = @N_DIALOG_VIRTUAL_TTS_SMS THEN
		BEGIN
			! $N.TTS.PARAMETER.ENGINE.CATEGORY = 1 일 경우, SMS용 Voice DB 로드 후 Tima에서 초기화 (Only VW, Nuance엔진의 경우 사용안함)
			! $N.TTS.PARAMETER.ENGINE.CATEGORY := 1 ; ! SMS DB 미 반영
			$S.OUTPUT.RESOURCE.EXPRESSION := "" ;
		END
		
	LOG "LP LOG : Common.SetTtsTuningDb - $S.OUTPUT.RESOURCE.EXPRESSION = " + $S.OUTPUT.RESOURCE.EXPRESSION ;
	
	! SMS DB 미 반영
	!S.INNER.LOG.STRING ~= $N.TTS.PARAMETER.ENGINE.CATEGORY ;
	!LOG "LP LOG : Common.SetTtsTuningDb - $N.TTS.PARAMETER.ENGINE.CATEGORY = " + S.INNER.LOG.STRING ;
EOP

! DIALOG에서 사용 가능한 Multi-Modal ID 저장
JINIE Common.ContextKeywords (NUMBER N.DIALOG)

	TEMPORARY NUMBER N.TEMP := 0 ;
	
	! DEFAULT
	$S.CONTEXT.KEYWORDS := "\@N_TAG_HELP_ID \@N_TAG_EXIT_ID" ;
	
	IF N.DIALOG = @N_DIALOG_MAINMENU THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_PHONE_CALL_ID \@N_TAG_PHONE_DIAL_NUMBER_ID \@N_TAG_RADIO_ID \@N_TAG_FM_ID \@N_TAG_MANUAL_FM_ID \@N_TAG_AM_ID \@N_TAG_MANUAL_AM_ID
			 \@N_TAG_MUSIC_ID \@N_TAG_CD_ID \@N_TAG_IPOD_ID \@N_TAG_BT_AUDIO_ID \@N_TAG_AUX_ID \@N_TAG_MY_MUSIC_ID \@N_TAG_USB_ID \@N_TAG_HELP_ID \@N_TAG_EXIT_ID
			 \@N_TAG_FIND_ADDRESS_ID \@N_TAG_GO_HOME_ID \@N_TAG_GO_TO_OFFICE_ID \@N_TAG_PREVIOUS_POINT_ID \@N_TAG_PREVIOUS_DESTINATION_ID \@N_TAG_PREVIOUS_SEARCH_ID \@N_TAG_PREVIOUS_START_ID
			 \@N_TAG_FIND_POI_ID \@N_TAG_EMERGENCY_SERVICES_ID \@N_TAG_POLICE_STATION_ID \@N_TAG_HOSPITAL_ID \@N_TAG_DEALERSHIP_ID \@N_TAG_ROAD_ASSISTANCE_ID
			 \@N_TAG_TRAFFIC_INFO_ID \@N_TAG_SHOW_MAP_ID \@N_TAG_TURN_GUIDANCE_ON_ID \@N_TAG_TURN_GUIDANCE_OFF_ID \@N_TAG_ZOOM_OUT_ID \@N_TAG_ZOOM_IN_ID \@N_TAG_CANCEL_ROUTE_ID \@N_TAG_DESTINATION_INFO_ID
			 \@N_TAG_ROUTE_OPTION_ID \@N_TAG_SHOW_ROUTE_ID \@N_TAG_VOICE_MEMO_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_BT_VAD THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_MANUAL_VAD_MOBILE_ID \@N_TAG_MANUAL_VAD_HOME_ID \@N_TAG_MANUAL_VAD_OFFICE_ID \@N_TAG_MANUAL_VAD_OTHER_ID \@N_TAG_NAME_ID 
			\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY | N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY_NUM | N.DIALOG = @N_DIALOG_BT_VAD_LIST | N.DIALOG = @N_DIALOG_MAINMENU_TRACKLIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_YES_ID \@N_TAG_NO_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_BT_VAD_NUM_LOCAL THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_MANUAL_INPUT_ID \@N_TAG_HELP_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_BT_VAD_NUM_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_MANUAL_INPUT_ID \@N_TAG_HELP_ID \@N_TAG_PHONE_DIAL_ID \@N_TAG_PHONE_CORRECTION_ID \@N_TAG_PHONE_DELETE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_AM_FREQUENCY | N.DIALOG = @N_DIALOG_MAINMENU_FM_FREQUENCY | N.DIALOG = @N_DIALOG_NAVI_VDE_STREETCITY_STEP THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_RADIO_PRESET THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_PRESET_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_CATEGORY THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_PHONE_HELP_ID \@N_TAG_RADIO_HELP_ID \@N_TAG_MEDIA_HELP_ID \@N_TAG_NAVIGATION_HELP_ID \@N_TAG_BACK_ID \@N_TAG_EXIT_ID 
			\@N_TAG_MANUAL_QUESTION_MARK_ID \@N_TAG_MANUAL_PHONE_QUESTION_MARK_ID \@N_TAG_MANUAL_RADIO_QUESTION_MARK_ID \@N_TAG_MANUAL_MEDIA_QUESTION_MARK_ID \@N_TAG_MANUAL_NAVI_QUESTION_MARK_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_PHONE_CALL_ID \@N_TAG_PHONE_DIAL_NUMBER_ID 
			\@N_TAG_MANUAL_QUESTION_MARK_ID \@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_RADIO THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_RADIO_ID \@N_TAG_FM_ID \@N_TAG_AM_ID \@N_TAG_MANUAL_FM_ID \@N_TAG_MANUAL_AM_ID 
			\@N_TAG_MANUAL_PRESET_ID \@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_MANUAL_QUESTION_MARK_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_MEDIA THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_MUSIC_ID \@N_TAG_CD_ID \@N_TAG_USB_ID \@N_TAG_MY_MUSIC_ID \@N_TAG_IPOD_ID \@N_TAG_BT_AUDIO_ID \@N_TAG_AUX_ID
			\@N_TAG_PLAY_ID \@N_TAG_PAUSE_ID \@N_TAG_MANUAL_TRACK_ID \@N_TAG_SHUFFLE_ID \@N_TAG_SHUFFLE_OFF_ID \@N_TAG_REPEAT_ID \@N_TAG_REPEAT_OFF_ID
			\@N_TAG_MANUAL_QUESTION_MARK_ID \@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_VOICE_MEMO_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_MANUAL_QUESTION_MARK_ID
			 \@N_TAG_FIND_ADDRESS_ID \@N_TAG_GO_HOME_ID \@N_TAG_GO_TO_OFFICE_ID \@N_TAG_PREVIOUS_POINT_ID \@N_TAG_PREVIOUS_DESTINATION_ID \@N_TAG_PREVIOUS_SEARCH_ID \@N_TAG_PREVIOUS_START_ID
			 \@N_TAG_FIND_POI_ID \@N_TAG_EMERGENCY_SERVICES_ID \@N_TAG_POLICE_STATION_ID \@N_TAG_HOSPITAL_ID \@N_TAG_DEALERSHIP_ID \@N_TAG_ROAD_ASSISTANCE_ID
			 \@N_TAG_TRAFFIC_INFO_ID \@N_TAG_SHOW_MAP_ID \@N_TAG_TURN_GUIDANCE_ON_ID \@N_TAG_TURN_GUIDANCE_OFF_ID \@N_TAG_ZOOM_OUT_ID \@N_TAG_ZOOM_IN_ID \@N_TAG_CANCEL_ROUTE_ID \@N_TAG_DESTINATION_INFO_ID
			 \@N_TAG_ROUTE_OPTION_ID \@N_TAG_SHOW_ROUTE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NO_RECOG_DRIVING THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_EXIT_ID \@N_TAG_BACK_ID \@N_TAG_MANUAL_PTT_ID \@N_TAG_DRIVING_BACK_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_NO_RECOG_BACK THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_BACK_ID \@N_TAG_MANUAL_PTT_ID \@N_TAG_EXIT_BACK_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NO_RECOG_EXIT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_BACK_ID \@N_TAG_MANUAL_PTT_ID \@N_TAG_EXIT_EXIT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_BACK_ID \@N_TAG_NAVI_LINE_NUMBER_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_PREVIOUS_PAGE_ID
			\@N_TAG_NEAR_CURRENT_POSITION_ID \@N_TAG_NEAR_DESTINATION_ID \@N_TAG_ALONG_ROUTE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_NONE_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_BACK_ID \@N_TAG_NEAR_CURRENT_POSITION_ID \@N_TAG_NEAR_DESTINATION_ID \@N_TAG_ALONG_ROUTE_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_LOCATION THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID
				 \@N_TAG_AC_ID \@N_TAG_AL_ID \@N_TAG_AP_ID \@N_TAG_S_AM_ID \@N_TAG_BA_ID \@N_TAG_CE_ID \@N_TAG_DF_ID \@N_TAG_ES_ID \@N_TAG_GO_ID
				 \@N_TAG_MA_ID \@N_TAG_MT_ID \@N_TAG_MS_ID \@N_TAG_MG_ID \@N_TAG_PR_ID \@N_TAG_PB_ID \@N_TAG_PA_ID \@N_TAG_PE_ID \@N_TAG_PI_ID
				 \@N_TAG_RN_ID \@N_TAG_RS_ID \@N_TAG_RJ_ID \@N_TAG_RO_ID \@N_TAG_RR_ID \@N_TAG_SC_ID \@N_TAG_SE_ID \@N_TAG_SP_ID \@N_TAG_TO_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_ADDRESS_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID" ; 
		END
	 IF N.DIALOG = @N_DIALOG_NAVI_NBEST_LIST THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID \@N_TAG_NONE_OF_THEM_ID \@N_TAG_ADDRESS_STEP_EDIT_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_NAVI_LIST | N.DIALOG = @N_DIALOG_NAVI_FULL_ADDRESS_LIST | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_POINT |
		N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_DESTINATION | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_SEARCH | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_START THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_PREVIOUS_PAGE_ID \@N_TAG_NEXT_PAGE_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_LINE_NUMBER_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_ADDRESS_SELECT | N.DIALOG = @N_DIALOG_NAVI_REGISTER_HOME_SELECT | N.DIALOG = @N_DIALOG_NAVI_REGISTER_OFFICE_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_MANUAL_INPUT_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_NAVI_YESNO_SELECT | N.DIALOG = @N_DIALOG_NAVI_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_YESNO_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_ADDRESS_WAY_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_MANUAL_INPUT_ID \@N_TAG_ADD_WAYPOINT_ID" ; 
		END
	IF  N.DIALOG = @N_DIALOG_NAVI_YESNO_WAY_SELECT | N.DIALOG = @N_DIALOG_NAVI_WAY_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_WAY_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_ADD_WAYPOINT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_CALL_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_YESNO_CALL_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_NAVI_DIAL_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_CALL_WAY_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_CALL_WAY_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_NAVI_DIAL_ID \@N_TAG_ADD_WAYPOINT_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NO_RECOG_HOUSE_NUMBER_STEP THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_HELP_ID \@N_TAG_MANUAL_PTT_ID \@N_TAG_HOUSE_NUMBER_BACK_STEP_ID \@N_TAG_EXIT_ID \@N_TAG_STREET_CITY_STEP_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_HOUSE_NUMBER_STEP THEN
		BEGIN
		 $S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_STREET_CITY_STEP_ID \@N_TAG_HOUSE_NUMBER_STEP_ID" ;
		END
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_NONE_HOUSE_NUMBER_STEP | N.DIALOG = @N_DIALOG_NAVI_REGISTER_HOME_NONE_HOUSE_NUMBER_SELECT_STEP | N.DIALOG = @N_DIALOG_NAVI_REGISTER_OFFICE_NONE_HOUSE_NUMBER_SELECT_STEP THEN
		BEGIN
		 $S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_STREET_CITY_STEP_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_NONE_HOUSE_NUMBER_WAY_STEP THEN
		BEGIN
		 $S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_STREET_CITY_STEP_ID \@N_TAG_ADD_WAYPOINT_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_NAVI_REGISTER_HOME_SELECT_STEP | N.DIALOG = @N_DIALOG_NAVI_REGISTER_OFFICE_SELECT_STEP | N.DIALOG = @N_DIALOG_NAVI_VDE_ADDRESS_SELECT_STEP THEN
		BEGIN
		 $S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_STREET_CITY_STEP_ID \@N_TAG_HOUSE_NUMBER_STEP_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_ADDRESS_WAY_SELECT_STEP THEN
		BEGIN
		 $S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_STREET_CITY_STEP_ID \@N_TAG_HOUSE_NUMBER_STEP_ID \@N_TAG_ADD_WAYPOINT_ID" ; 
		END
	IF N.DIALOG = @N_DIALOG_NAVI_DEL_WAY_SELECT THEN
		BEGIN
			$S.CONTEXT.KEYWORDS := "\@N_TAG_BACK_ID \@N_TAG_EXIT_ID \@N_TAG_HELP_ID \@N_TAG_NAVI_YES_ID \@N_TAG_NAVI_NO_ID \@N_TAG_DELETE_WAYPOINT_ID \@N_TAG_AUTO_RESULT_ID" ;
		END
		
	LOG "LP LOG : Common.ContextKeywords - $S.CONTEXT.KEYWORDS = " + $S.CONTEXT.KEYWORDS ;
EOP

! PRE PROCESSOR에서 사용하는 SYSTEM CALL 변수 호출
JINIE Common.SystemCallPre (NUMBER N.DIALOG)

	IF N.DIALOG = @N_DIALOG_MAINMENU THEN
		BEGIN
			MESSAGE "(VH) \fN.BT.PHONE.CONNECT\fN.BT.CONTACT.NUMBER\fN.BT.DP.NUMBER\fN.NAVI.SDCARD.EXIST" ;
		END
	
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE THEN
		BEGIN
			MESSAGE "(VH) \fN.BT.PHONE.CONNECT\fN.BT.CONTACT.NUMBER\fN.BT.DP.NUMBER" ;
		END
	
	IF N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY THEN
		BEGIN
			IF S.RESULT.FIX.CID = "\@N_TAG_PHONE_MOBILE_ID" | S.RESULT.FIX.CID = "\@N_TAG_PHONE_OFFICE_ID" | S.RESULT.FIX.CID = "\@N_TAG_PHONE_HOME_ID" | S.RESULT.FIX.CID = "\@N_TAG_PHONE_OTHER_ID" THEN
				BEGIN
					! SYSTEM CALL
					MESSAGE "(VH) \fS.BT.NAME.SELECT\fS.BT.NAME.TTS" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_SELECT THEN
		BEGIN
			MESSAGE "(VH) \fN.BT.PHONE.CONNECT\fN.BT.PHONEBOOK.DOWNLOADABLE\fS.BT.NAME.SELECT\fS.BT.NAME.TTS\fN.SYSTEM.WIFI.CONDITION" ;
		END
	
	IF N.DIALOG = @N_DIALOG_BT_VAD_NUM_SELECT THEN
		BEGIN
			MESSAGE "(VH) \fN.BT.DIALNUMBER.OVERFLOW" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
		BEGIN
			MESSAGE "(VH) \fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_ADDRESS_SELECT | N.DIALOG = @N_DIALOG_NAVI_ADDRESS_WAY_SELECT | N.DIALOG = @N_DIALOG_NAVI_FULL_ADDRESS_LIST THEN
		BEGIN
			MESSAGE "(VH) \fN.NAVI.HOUSENUMBER.EXIST" ;
		END
EOP

! 서버 음성인식 사용을 위한 정보 설정 및 제어
! 서버 선택/ 사용 여부/ 연결에 필요한 정보/ 사용 모드 선택/ CUT-OFF Intention 등 설정
JINIE Common.ServerSettingControl (NUMBER N.DIALOG)

	$N.STT.PARAMETER.HTTP.MBS.FLAG := @N_FLAG_OFF ;
	$N.STT.PARAMETER.HTTP.TIMEOUT.FLAG := @N_FLAG_OFF ;
	
	$N.STT.CONNECTION.MODE := @N_FLAG_OFF ; ! DICTATION ON/OFF
	
	$N.STT.PARAMETER.HTTP.MBS.VALUE := 0 ;
	$N.STT.PARAMETER.HTTP.TIMEOUT.VALUE := 0 ;
	
	$S.STT.CONNECTION.LATITUDE := "" ;
	$S.STT.CONNECTION.LONGITUDE := "" ;
	
	$N.STT.CONNECTION.FLAG := @N_SERVER_TYPE_NONE ;
	$S.STT.CONNECTION.URL  := "" ;
	$S.STT.CONNECTION.DATA := "" ;
	$S.STT.CONNECTION.PORT := "" ;
	
	! Embedded에서 해당 INTENT가 전달되면 SERVER를 기다림, 1개 이상 정의 시 "INTENT\fINTENT"로 설정
	$S.STT.CUTOFF.INTENTS := "" ;
	
	! 1. Embedded conf < cutoff threshold : 서버 결과에 따름
	! 2. Embedded conf > cutoff threshold & cutoff intent가 아니면 : embedded 결과 따름
	! 3. Embedded conf > cutoff threshold & cutoff intent 이면 : 서버 결과 따름
	$N.STT.CUTOFF.THRESHOLD := 0 ;
	
	! Gate Command 정의(Tima에서  Gate Command를 제거한 결과를 SearchPhrase의 Value로 전달)
	$S.STT.ONLINE.GATECOMMAND := "" ;
	
	IF $N.STATUS.DIALOG = @N_DIALOG_MAINMENU | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
		BEGIN
			IF N.VENDER.VR.MODE = 1 & N.NETWORK.SUBSCRIBED = 1 & N.NETWORK.SETTING = 1 THEN
				BEGIN
					IF N.SERVER.SETTING = @N_SERVER_TYPE_NONE THEN
						BEGIN
							$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
							$S.STT.CONNECTION.URL  := "" ;
							$S.STT.CONNECTION.DATA := "" ;
							$S.STT.CONNECTION.PORT := "" ;
							$S.STT.CUTOFF.INTENTS := "" ;
							$N.STT.CUTOFF.THRESHOLD := 0 ;
							$N.STT.CUTOFF.THRESHOLD := 4000 ;
						END
					ELSE
						BEGIN
							IF N.SERVER.SETTING = @N_SERVER_TYPE_ETRI THEN
								BEGIN
									$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
									$S.STT.CONNECTION.URL  := "\@S_MESSAGE_URL_ETRI" ;
									$S.STT.CONNECTION.DATA := "\@S_MESSAGE_DATA_DICTATION_ETRI" ;
									$S.STT.CONNECTION.PORT := "" ;
									$S.STT.CUTOFF.INTENTS := "" ;
									$N.STT.CUTOFF.THRESHOLD := 0 ;
									$N.STT.PARAMETER.HTTP.TIMEOUT.VALUE := 10 ;
								END
							IF N.SERVER.SETTING = @N_SERVER_TYPE_NUANCE THEN
								BEGIN
									$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
									$S.STT.CONNECTION.URL  := "\@S_MESSAGE_URL_NUANCE" ;
									$S.STT.CONNECTION.DATA := "\@S_MESSAGE_DATA_DICTATION_NUANCE" + "\"<" + $S.STT.CONNECTION.LATITUDE + ", " + $S.STT.CONNECTION.LONGITUDE + "\@S_MESSAGE_DATA_DICTATION_NUANCE_REAR" ;
									$S.STT.CONNECTION.PORT := "" ;
									$S.STT.CUTOFF.INTENTS := "" ;
									$N.STT.CUTOFF.THRESHOLD := 0 ;
									$N.STT.PARAMETER.HTTP.TIMEOUT.FLAG := @N_FLAG_ON ;
									$N.STT.PARAMETER.HTTP.TIMEOUT.VALUE := 10000 ;
								END
							IF N.SERVER.SETTING = @N_SERVER_TYPE_KAKAO THEN
								BEGIN
									$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
									$S.STT.CONNECTION.URL  := "" ;
									$S.STT.CONNECTION.DATA := "" ;
									$S.STT.CONNECTION.PORT := "" ;
									$S.STT.CUTOFF.INTENTS := "WaitServerPOI\fWaitServerCategory\fWaitServer" ;
									$N.STT.CUTOFF.THRESHOLD := 4000 ;
									$S.STT.ONLINE.GATECOMMAND := "\@S_SERVER_GATE_COMMAND" ;
								END
							IF N.SERVER.SETTING = @N_SERVER_TYPE_RELAY_SERVER THEN
								BEGIN
									$N.STT.CONNECTION.FLAG := N.SERVER.SETTING ;
									$S.STT.CONNECTION.URL  := S.SERVER.URL ;
									$S.STT.CONNECTION.DATA := "Authorization\f" + S.SERVER.DATA.AUTHORIZATION + "\n"
															+ "From\f" + S.SERVER.DATA.FROM + "\n"
															+ "To\f" + S.SERVER.DATA.TO + "\n"
															+ "Date\f" + S.SERVER.DATA.DATE + "\n"
															+ "VIN\f" + S.SERVER.DATA.VIN + "\n"
															+ "NADID\f" + S.SERVER.DATA.NADID + "\n"
															+ "Type\f" + S.SERVER.DATA.TYPE + "\n"
															+ "Lat\f" + S.SERVER.DATA.LATITUDE + "\n"
															+ "Lon\f" + S.SERVER.DATA.LONGITUDE + "\n"
															+ "Alt\f" + S.SERVER.DATA.ALTITUDE + "\n" ;
									$S.STT.CONNECTION.PORT := S.SERVER.PORT ;
									$S.STT.CUTOFF.INTENTS := "WaitServerPOI\fWaitServerCategory\fWaitServer" ;
									$N.STT.CUTOFF.THRESHOLD := 4000 ;
									$S.STT.ONLINE.GATECOMMAND := "\@S_SERVER_GATE_COMMAND" ;
								END
						END
				END
		END

	S.INNER.LOG.STRING ~= $N.STT.CONNECTION.FLAG ;
	LOG "LP LOG : Common.ServerSettingControl - $N.STT.CONNECTION.FLAG = " + S.INNER.LOG.STRING ;
	LOG "LP LOG : Common.ServerSettingControl - $S.STT.CONNECTION.URL = " + $S.STT.CONNECTION.URL ;
	LOG "LP LOG : Common.ServerSettingControl - $S.STT.CONNECTION.DATA = " + $S.STT.CONNECTION.DATA ;
	LOG "LP LOG : Common.ServerSettingControl - $S.STT.CONNECTION.PORT = " + $S.STT.CONNECTION.PORT ;
	LOG "LP LOG : Common.ServerSettingControl - $S.STT.CUTOFF.INTENTS = " + $S.STT.CUTOFF.INTENTS ;
	S.INNER.LOG.STRING ~= $N.STT.PARAMETER.HTTP.TIMEOUT.VALUE ;
	LOG "LP LOG : Common.ServerSettingControl - $N.STT.PARAMETER.HTTP.TIMEOUT.VALUE = " + S.INNER.LOG.STRING ;
EOP

! DIALOG에서 사용하는 LEX DB LOAD
JINIE Common.Lex (NUMBER N.DIALOG)

	TEMPORARY NUMBER N.LEX.TYPE := 1 ;
	
	! @N_LEX_BASE - 1
	! @N_LEX_NUM - 2
	! @N_LEX_NAME - 3
	! @N_LEX_SDCARD - 5
	! @N_LEX_HOUSENUMBER - 11
	
	$S.CONTEXT.LEX := "\@N_LEX_BASE" ;
	
	! @N_LEX_NUM 사용
	IF N.DIALOG = @N_DIALOG_MAINMENU | N.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE | N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY |
		N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY_NUM | N.DIALOG = @N_DIALOG_BT_VAD_LIST | N.DIALOG = @N_DIALOG_BT_VAD_NUM_LOCAL |
		N.DIALOG = @N_DIALOG_BT_VAD_NUM_SELECT | N.DIALOG = @N_DIALOG_MAINMENU_HELP_RADIO | N.DIALOG = @N_DIALOG_MAINMENU_AM_FREQUENCY |
		N.DIALOG = @N_DIALOG_MAINMENU_FM_FREQUENCY | N.DIALOG = @N_DIALOG_MAINMENU_RADIO_PRESET |
		N.DIALOG = @N_DIALOG_MAINMENU_HELP_MEDIA | N.DIALOG = @N_DIALOG_MAINMENU_TRACKLIST | N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_LIST |
		N.DIALOG = @N_DIALOG_NAVI_ADDRESS_LIST | N.DIALOG = @N_DIALOG_NAVI_FULL_ADDRESS_LIST | N.DIALOG = @N_DIALOG_NAVI_NBEST_LIST |
		N.DIALOG = @N_DIALOG_NAVI_LIST | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_POINT | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_DESTINATION |
		N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_SEARCH | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_START THEN
		BEGIN
			N.LEX.TYPE := N.LEX.TYPE * 2 ;
		END
	
	! @N_LEX_NAME 사용
	IF N.DIALOG = @N_DIALOG_MAINMENU | N.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE | N.DIALOG = @N_DIALOG_BT_VAD THEN
		BEGIN
			N.LEX.TYPE := N.LEX.TYPE * 3 ;
		END
	
	! @N_LEX_SDCARD 사용
	IF N.DIALOG = @N_DIALOG_MAINMENU | N.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION | N.DIALOG = @N_DIALOG_NAVI_VDE_LOCATION THEN
		BEGIN
			IF N.NAVI.SDCARD.EXIST = 1 THEN
				BEGIN
					N.LEX.TYPE := N.LEX.TYPE * 5 ;
				END
			ELSE
				BEGIN
					N.LEX.TYPE := N.LEX.TYPE ;
				END
		END
		
	! @N_LEX_HOUSENUMBER 사용
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_HOUSE_NUMBER_STEP | N.DIALOG = @N_DIALOG_NAVI_VDE_LOCATION THEN
		BEGIN
			N.LEX.TYPE := N.LEX.TYPE * 11 ;
		END
		
	! LEX DB LOAD
	IF N.LEX.TYPE % 2 = 0 THEN
		BEGIN
			$S.CONTEXT.LEX := $S.CONTEXT.LEX + "+ \@N_LEX_NUM" ;
		END
	IF N.LEX.TYPE % 3 = 0 THEN
		BEGIN
			$S.CONTEXT.LEX := $S.CONTEXT.LEX + "+ \@N_LEX_NAME" ;
		END
	IF N.LEX.TYPE % 5 = 0 THEN
		BEGIN
			$S.CONTEXT.LEX := $S.CONTEXT.LEX + "+ \@N_LEX_SDCARD" ;
		END
	IF N.LEX.TYPE%11 = 0 THEN
		BEGIN
			$S.CONTEXT.LEX := $S.CONTEXT.LEX + "+ \@N_LEX_HOUSENUMBER" ;
		END
	
	! POI LOCATION
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_STREETCITY_STEP | N.DIALOG = @N_DIALOG_NAVI_VDE_LOCATION THEN
		BEGIN
			IF N.NAVI.CURRENT.REGION = 301 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_AC + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 302 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_AL + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 303 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_AP + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 304 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_AM + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 305 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_BA + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 306 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_CE + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 307 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_DF + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 308 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_ES + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 309 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_GO + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 310 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_MA + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 311 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_MT + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 312 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_MS + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 313 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_MG + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 314 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_PR + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 315 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_PB + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 316 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_PA + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 317 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_PE + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 318 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_PI + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 319 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_RN + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 320 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_RS + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 321 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_RJ + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 322 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_RO + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 323 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_RR + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 324 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_SC + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 325 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_SE + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 326 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_SP + " + $S.CONTEXT.LEX ;
				END
			IF N.NAVI.CURRENT.REGION = 327 THEN
				BEGIN
					$S.CONTEXT.LEX := "\@N_LEX_TO + " + $S.CONTEXT.LEX ;
				END
		END
EOP

! DIALOG에서 사용하는 GRAMMAR 및 ACTIVATE RULE 설정
JINIE Common.GrammarLoad (NUMBER N.DIALOG)
	
	! 2017/02/24 검토 : TEMPORARY 사용 검토
	S.GRAMMAR := "" ;
	S.ACTIVATION := "" ;
	S.SLM.GRAMMAR := "" ;
	S.SLM.GRAMMAR.BT.FULL := "" ;
	S.SLM.GRAMMAR.BT.REVERSE := "" ;
	S.BNF.GRAMMAR := "" ;
	S.BNF.ACTIVATION := "" ;
	
	S.INNER.LOG.STRING ~= N.NAVI.SDCARD.EXIST ;
	LOG "LP LOG : Common.GrammarLoad - N.NAVI.SDCARD.EXIST = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.BT.PATTERN.MODE ;
	LOG "LP LOG : Common.GrammarLoad - N.BT.PATTERN.MODE = " + S.INNER.LOG.STRING ;	
	S.INNER.LOG.STRING ~= N.BT.CONTACT.NUMBER ;
	LOG "LP LOG : Common.GrammarLoad - N.BT.CONTACT.NUMBER = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.BT.DP.NUMBER ;
	LOG "LP LOG : Common.GrammarLoad - N.BT.DP.NUMBER = " + S.INNER.LOG.STRING ;
	LOG "LP LOG : Common.GrammarLoad - S.BT.DP.CONDITION = " + S.BT.DP.CONDITION ;
	S.INNER.LOG.STRING ~= N.NAVI.CURRENT.REGION ;
	LOG "LP LOG : Common.GrammarLoad - N.NAVI.CURRENT.REGION = " + S.INNER.LOG.STRING ;
		
	CALL Common.BNFGrammarLoad (N.DIALOG) ;
	
	S.GRAMMAR := S.BNF.GRAMMAR ;
	S.ACTIVATION := S.BNF.ACTIVATION ;
	
	LOG "LP LOG : Common.GrammarLoad - S.GRAMMAR = " + S.GRAMMAR ;
	LOG "LP LOG : Common.GrammarLoad - S.ACTIVATION = " + S.ACTIVATION ;
	
	CALL Common.Grammar (S.GRAMMAR, S.ACTIVATION) ;
EOP

! DIALOG에서 사용하는 BNF GRAMMAR 및 ACTIVATE RULE 설정
JINIE Common.BNFGrammarLoad (NUMBER N.DIALOG)

	IF N.DIALOG = @N_DIALOG_MAINMENU THEN
		BEGIN
			! HOST/GUEST GRAMMAR, ACTIVATE SETTING
			IF N.BT.PATTERN.MODE = 0 THEN ! 4-PATTERN : SINGLE/FULL_FIRST/REVERSE_LAST
				BEGIN
					IF N.BT.PHONE.CONNECT = 1 THEN
						BEGIN
							IF N.BT.CONTACT.NUMBER > 0 & N.BT.DP.NUMBER > 0 THEN ! PREPHONEBOOK EXIST : Merge Phone book
								BEGIN
									IF S.BT.DP.CONDITION[1][1] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU<\"COMMAND\", \"SLOT_CONTACT_SINGLE\", \@N_GRAMMAR_SLOT_SINGLE>" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									ELSE
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\"><\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\"><\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									IF S.BT.DP.CONDITION[1][2] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\", \"SLOT_CONTACT_FULL_FIRST\", \@N_GRAMMAR_SLOT_FULL_FIRST>" ;
											S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
										END
									IF S.BT.DP.CONDITION[1][3] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT_REVERSE_LAST<\"COMMAND\", \"SLOT_CONTACT_REVERSE_LAST\", \@N_GRAMMAR_SLOT_REVERSE_LAST>" ;
											S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU_MERGE_BT_REVERSE_LAST<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU_MERGE_BT_REVERSE_LAST<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
										END
								END
							ELSE !N.BT.CONTACT.NUMBER = 0 | N.BT.DP.NUMBER = 0 : Dummy Phone book
								BEGIN
									S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" ;
									S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
								END
						END
					ELSE !N.BT.PHONE.CONNECT = 0 : Dummy Phone book
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
						END
				END
			ELSE ! N.BT.PATTERN.MODE = 1 2-PATTERN : SINGLE/FULL_FIRST
				BEGIN
					IF N.BT.PHONE.CONNECT = 1 THEN
						BEGIN
							IF N.BT.CONTACT.NUMBER > 0 & N.BT.DP.NUMBER > 0 THEN ! PREPHONEBOOK EXIST : Merge Phone book
								BEGIN
									IF S.BT.DP.CONDITION[1][1] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU<\"COMMAND\", \"SLOT_CONTACT_SINGLE\", \@N_GRAMMAR_SLOT_SINGLE>" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									ELSE
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\"><\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\"><\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									IF S.BT.DP.CONDITION[1][2] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\", \"SLOT_CONTACT_FULL_FIRST\", \@N_GRAMMAR_SLOT_FULL_FIRST>" ;
											S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
										END
								END
							ELSE !N.BT.CONTACT.NUMBER = 0 | N.BT.DP.NUMBER = 0 : Dummy Phone book
								BEGIN
									S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU" ;
									S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
								END
						END
					ELSE !N.BT.PHONE.CONNECT = 0 : Dummy Phone book
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU"  ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU<\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
						END
				END
				
			IF N.NAVI.SDCARD.EXIST = 1 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR" ;
				END
			ELSE
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR ;
				END
				
			! ALL SLOT ACTIVATE
			S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+ \@N_GRAMMAR_MAINMENU<\"ALL\",\"CD_PLAY_TRACK\"><\"ALL\",\"MY_MUSIC\"><\"ALL\",\"TRAFFIC_INFO\"><\"ALL\",\"VOICE_MEMO\"><\"ALL\",\"CARPLAY\"><\"ALL\",\"ANDROID_AUTO\">" ;
			
			!slot deactivatable 선택적 off
			IF N.VENDER.CD.PLAY.TRACK = 0 THEN ! CD
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"CD_PLAY_TRACK\">" ;
				END
				
			IF N.VENDER.MYMUSIC = 0 THEN ! MY MUSIC
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"MY_MUSIC\">" ;
				END
			
			IF N.VENDER.VOICEMEMO = 0 THEN ! Voice Memo
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"VOICE_MEMO\">" ;
				END
				
			IF N.VENDER.CARPLAY = 0 THEN ! CarPlay
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"CARPLAY\">" ;
				END
						
			IF N.VENDER.ANDROIDAUTO = 0 THEN ! Android Auto
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"ANDROID_AUTO\">" ;
				END
			
			IF N.NAVI.SDCARD.EXIST = 1 THEN
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + " +\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR<\"ALL\",\"CATEGORY_AUTOMOTIVE_HYUNDAI\"><\"ALL\",\"CATEGORY_AUTOMOTIVE_KIA\">" ;
					
					IF N.VENDER.POI.AUTOMOTIVE = 1 THEN ! HYUNDAI
						BEGIN
							S.BNF.ACTIVATION := S.BNF.ACTIVATION + " -\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR<\"ALL\",\"CATEGORY_AUTOMOTIVE_KIA\">" ;
						END
					ELSE ! N.VENDER.POI.AUTOMOTIVE = 2 THEN ! KIA
						BEGIN
							S.BNF.ACTIVATION := S.BNF.ACTIVATION + " -\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR<\"ALL\",\"CATEGORY_AUTOMOTIVE_HYUNDAI\">" ;
						END
				END
				
			IF N.VENDER.TRAFFICINFO = 0 THEN
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU<\"ALL\",\"TRAFFIC_INFO\">" ;
				END
		END
		
	! PHONE
	IF N.DIALOG = @N_DIALOG_BT_VAD THEN
		BEGIN
			! GRM LIST CONTEXT LOAD
			IF N.BT.PATTERN.MODE = 0 THEN ! 4-PATTERN : SINGLE/FULL_FIRST/REVERSE_LAST
				BEGIN
					IF S.BT.DP.CONDITION[1][1] = "1" THEN
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD<\"COMMAND\", \"SLOT_CONTACT_SINGLE\", \@N_GRAMMAR_SLOT_SINGLE>" ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_BT_VAD<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
						END
					ELSE
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD" ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_BT_VAD<\"COMMAND\",\"CALL_NAME_LOCAL\"> - \@N_GRAMMAR_BT_VAD<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
						END
					IF S.BT.DP.CONDITION[1][2] = "1" THEN
						BEGIN
							S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\", \"SLOT_CONTACT_FULL_FIRST\", \@N_GRAMMAR_SLOT_FULL_FIRST>" ;
							S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_LOCAL\"> - \@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
						END
					IF S.BT.DP.CONDITION[1][3] = "1" THEN
						BEGIN
							S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT_REVERSE_LAST<\"COMMAND\", \"SLOT_CONTACT_REVERSE_LAST\", \@N_GRAMMAR_SLOT_REVERSE_LAST>" ;
							S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU_MERGE_BT_REVERSE_LAST<\"COMMAND\",\"CALL_NAME_LOCAL\"> - \@N_GRAMMAR_MAINMENU_MERGE_BT_REVERSE_LAST<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
						END
				END
			ELSE ! N.BT.PATTERN.MODE = 1 2-PATTERN : SINGLE/FULL_FIRST
				BEGIN
					IF S.BT.DP.CONDITION[1][1] = "1" THEN
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD<\"COMMAND\", \"SLOT_CONTACT_SINGLE\", \@N_GRAMMAR_SLOT_SINGLE>" ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_BT_VAD<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
						END
					ELSE
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD" ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_BT_VAD<\"COMMAND\",\"CALL_NAME_LOCAL\"> - \@N_GRAMMAR_BT_VAD<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
						END
					IF S.BT.DP.CONDITION[1][2] = "1" THEN
						BEGIN
							S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\", \"SLOT_CONTACT_FULL_FIRST\", \@N_GRAMMAR_SLOT_FULL_FIRST>" ;
							S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_LOCAL\"> - \@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
						END
				END
		END
		
	IF N.DIALOG = @N_DIALOG_BT_VAD_LIST | N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY_NUM THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_BT_VAD_CATEGORY THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD_CATEGORY" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_SELECT" ;
		END
		
	IF N.DIALOG = @N_DIALOG_BT_VAD_NUM_LOCAL THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD_NUM_LOCAL" ;
		END
		
	IF N.DIALOG = @N_DIALOG_BT_VAD_NUM_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_BT_VAD_NUM_SELECT" ;
		END
		
	! RADIO
	IF N.DIALOG = @N_DIALOG_MAINMENU_AM_FREQUENCY THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_AM_FREQUENCY" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_FM_FREQUENCY THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_FM_FREQUENCY" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_RADIO_PRESET THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_RADIO_PRESET" ;
		END
		
	! MEDIA
	IF N.DIALOG = @N_DIALOG_MAINMENU_TRACKLIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_TRACKLIST" ;
		END
		
	! NAVI
	IF N.DIALOG = @N_DIALOG_NAVI_ADDRESS_SELECT | N.DIALOG = @N_DIALOG_NAVI_REGISTER_HOME_SELECT | N.DIALOG = @N_DIALOG_NAVI_REGISTER_OFFICE_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_ADDRESS_SELECT" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_ADDRESS_WAY_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_ADDRESS_WAY_SELECT" ;
		END	

	IF N.DIALOG = @N_DIALOG_NAVI_VDE_STREETCITY_STEP THEN
		BEGIN
			IF N.NAVI.CURRENT.REGION = 301 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_AC>" ;
				END
			IF N.NAVI.CURRENT.REGION = 302 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_AL>" ;
				END
			IF N.NAVI.CURRENT.REGION = 303 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_AP>" ;
				END
			IF N.NAVI.CURRENT.REGION = 304 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_AM>" ;
				END
			IF N.NAVI.CURRENT.REGION = 305 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_BA>" ;
				END
			IF N.NAVI.CURRENT.REGION = 306 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_CE>" ;
				END
			IF N.NAVI.CURRENT.REGION = 307 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_DF>" ;
				END
			IF N.NAVI.CURRENT.REGION = 308 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_ES>" ;
				END
			IF N.NAVI.CURRENT.REGION = 309 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_GO>" ;
				END
			IF N.NAVI.CURRENT.REGION = 310 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_MA>" ;
				END
			IF N.NAVI.CURRENT.REGION = 311 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_MT>" ;
				END
			IF N.NAVI.CURRENT.REGION = 312 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_MS>" ;
				END
			IF N.NAVI.CURRENT.REGION = 313 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_MG>" ;
				END
			IF N.NAVI.CURRENT.REGION = 314 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_PR>" ;
				END
			IF N.NAVI.CURRENT.REGION = 315 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_PB>" ;
				END
			IF N.NAVI.CURRENT.REGION = 316 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_PA>" ;
				END
			IF N.NAVI.CURRENT.REGION = 317 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_PE>" ;
				END
			IF N.NAVI.CURRENT.REGION = 318 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_PI>" ;
				END
			IF N.NAVI.CURRENT.REGION = 319 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_RN>" ;
				END
			IF N.NAVI.CURRENT.REGION = 320 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_RS>" ;
				END
			IF N.NAVI.CURRENT.REGION = 321 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_RJ>" ;
				END
			IF N.NAVI.CURRENT.REGION = 322 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_RO>" ;
				END
			IF N.NAVI.CURRENT.REGION = 323 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_RR>" ;
				END
			IF N.NAVI.CURRENT.REGION = 324 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_SC>" ;
				END
			IF N.NAVI.CURRENT.REGION = 325 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_SE>" ;
				END
			IF N.NAVI.CURRENT.REGION = 326 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_SP>" ;
				END
			IF N.NAVI.CURRENT.REGION = 327 THEN
				BEGIN
					! GRAMMAR
					S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NAME_STREETCITY_CHANGE<\"MAINMENU\", \"STREET_CITY\", \@N_GRAMMAR_NAVI_STATE_TO>" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_HOUSE_NUMBER_STEP THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_HOUSE_NUMBER_STEP" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_NONE_HOUSE_NUMBER_STEP THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NONE_HOUSE_NUMBER_STEP" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_NONE_HOUSE_NUMBER_WAY_STEP THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NONE_HOUSE_NUMBER_WAY_STEP" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_REGISTER_HOME_NONE_HOUSE_NUMBER_SELECT_STEP | N.DIALOG = @N_DIALOG_NAVI_REGISTER_OFFICE_NONE_HOUSE_NUMBER_SELECT_STEP THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_NONE_HOUSE_NUMBER_STEP" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_ADDRESS_SELECT_STEP | N.DIALOG = @N_DIALOG_NAVI_REGISTER_HOME_SELECT_STEP | N.DIALOG = @N_DIALOG_NAVI_REGISTER_OFFICE_SELECT_STEP THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_ADDRESS_SELECT_STEP" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_LIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_FIND_CATEGORY_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_NONE_LIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_FIND_CATEGORY_NONE_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_LOCATION THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_CNC" ;
			
			IF N.NAVI.CURRENT.REGION < 301 | 327 < N.NAVI.CURRENT.REGION THEN ! Non State 
				BEGIN
					S.NAVI.CURRENT.REGION := "None State" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR ;
				END
			
			IF N.NAVI.CURRENT.REGION = 301 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_AC_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_AC<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_AC>" ;
				END
			IF N.NAVI.CURRENT.REGION = 302 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_AL_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_AL<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_AL>" ;
				END
			IF N.NAVI.CURRENT.REGION = 303 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_AP_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_AP<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FOUR><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_AP>" ;
				END
			IF N.NAVI.CURRENT.REGION = 304 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_S_AM_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_AM<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_AM>" ;
				END
			IF N.NAVI.CURRENT.REGION = 305 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_BA_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_BA<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_BA>" ;
				END
			IF N.NAVI.CURRENT.REGION = 306 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_CE_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_CE<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_CE>" ;
				END
			IF N.NAVI.CURRENT.REGION = 307 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_DF_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_DF<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FOUR><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_DF>" ;
				END
			IF N.NAVI.CURRENT.REGION = 308 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_ES_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_ES<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_ES>" ;
				END
			IF N.NAVI.CURRENT.REGION = 309 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_GO_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_GO<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_SIX_PAT><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_GO>" ;
				END
			IF N.NAVI.CURRENT.REGION = 310 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_MA_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_MA<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_MA>" ;
				END
			IF N.NAVI.CURRENT.REGION = 311 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_MT_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_MT<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_MT>" ;
				END
			IF N.NAVI.CURRENT.REGION = 312 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_MS_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_MS<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_SIX><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_MS>" ;
				END
			IF N.NAVI.CURRENT.REGION = 313 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_MG_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_MG<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_SIX><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_MG>" ;
				END
			IF N.NAVI.CURRENT.REGION = 314 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_PR_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_PR<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_SIX><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_PR>" ;
				END
			IF N.NAVI.CURRENT.REGION = 315 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_PB_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_PB<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_PB>" ;
				END
			IF N.NAVI.CURRENT.REGION = 316 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_PA_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_PA<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_PA>" ;
				END
			IF N.NAVI.CURRENT.REGION = 317 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_PE_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_PE<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_PE>" ;
				END
			IF N.NAVI.CURRENT.REGION = 318 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_PI_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_PI<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_PI>" ;
				END
			IF N.NAVI.CURRENT.REGION = 319 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_RN_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_RN<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_RN>" ;
				END
			IF N.NAVI.CURRENT.REGION = 320 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_RS_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_RS<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_RS>" ;
				END
			IF N.NAVI.CURRENT.REGION = 321 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_RJ_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_RJ<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_SIX><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_RJ>" ;
				END
			IF N.NAVI.CURRENT.REGION = 322 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_RO_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_RO<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_RO>" ;
				END
			IF N.NAVI.CURRENT.REGION = 323 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_RR_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_RR<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_RR>" ;
				END
			IF N.NAVI.CURRENT.REGION = 324 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_SC_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_SC<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE_DIR><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_SC>" ;
				END
			IF N.NAVI.CURRENT.REGION = 325 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_SE_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_SE<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_SE>" ;
				END
			IF N.NAVI.CURRENT.REGION = 326 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_SP_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_SP<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_SIX_PAT><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_SP>" ;
				END
			IF N.NAVI.CURRENT.REGION = 327 THEN
				BEGIN
					S.NAVI.CURRENT.REGION := "\@S_TAG_TO_STRING" ;
					
					! GRAMMAR
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "+\@N_GRAMMAR_NAVI_STATE_TO<\"MAINMENU\", \"SLOT_HOUSE_NUMBER\", \@N_GRAMMAR_NAVI_VDE_HOUSENUMBER_FIVE><\"MAINMENU\", \"SLOT_STATE_NAME\", \@N_GRAMMAR_NAVI_VDE_SLOT_TO>" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_NBEST_LIST THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_NBEST_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_LIST | N.DIALOG = @N_DIALOG_NAVI_ADDRESS_LIST | N.DIALOG = @N_DIALOG_NAVI_FULL_ADDRESS_LIST |
		N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_POINT | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_DESTINATION | N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_SEARCH | 
		N.DIALOG = @N_DIALOG_NAVI_PREVIOUS_START THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_LIST" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_SELECT | N.DIALOG = @N_DIALOG_NAVI_YESNO_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_YESNO_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_SELECT" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_WAY_SELECT  | N.DIALOG = @N_DIALOG_NAVI_PRE_WAY_SELECT | N.DIALOG = @N_DIALOG_NAVI_YESNO_WAY_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_WAY_SELECT" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_CALL_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_YESNO_CALL_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_CALL_SELECT" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_CALL_WAY_SELECT | N.DIALOG = @N_DIALOG_NAVI_PRE_CALL_WAY_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_CALL_WAY_SELECT" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_VDE_ADDRESS_WAY_SELECT_STEP THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_VDE_ADDRESS_WAY_SELECT_STEP" ;
		END
		
	IF N.DIALOG = @N_DIALOG_NAVI_DEL_WAY_SELECT THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NAVI_DEL_WAY_SELECT" ;
		END
		
	! HELP
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_CATEGORY THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_CATEGORY" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE THEN
		BEGIN
			! GRM LIST CONTEXT LOAD
			IF N.BT.PATTERN.MODE = 0 THEN ! 4-PATTERN : SINGLE/FULL_FIRST/REVERSE_LAST
				BEGIN
					IF N.BT.PHONE.CONNECT = 1 THEN
						BEGIN
							IF N.BT.CONTACT.NUMBER > 0 & N.BT.DP.NUMBER > 0 THEN ! PREPHONEBOOK EXIST : Merge Phone book
								BEGIN
									IF S.BT.DP.CONDITION[1][1] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\", \"SLOT_CONTACT_SINGLE\", \@N_GRAMMAR_SLOT_SINGLE>" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									ELSE
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\"><\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\"><\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									IF S.BT.DP.CONDITION[1][2] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\", \"SLOT_CONTACT_FULL_FIRST\", \@N_GRAMMAR_SLOT_FULL_FIRST>" ;
											S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
										END
									IF S.BT.DP.CONDITION[1][3] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT_REVERSE_LAST<\"COMMAND\", \"SLOT_CONTACT_REVERSE_LAST\", \@N_GRAMMAR_SLOT_REVERSE_LAST>" ;
											S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU_MERGE_BT_REVERSE_LAST<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU_MERGE_BT_REVERSE_LAST<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
										END
								END
							ELSE !N.BT.CONTACT.NUMBER = 0 | N.BT.DP.NUMBER = 0 : Dummy Phone book
								BEGIN
									S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
									S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
								END
						END
					ELSE !N.BT.PHONE.CONNECT = 0 : Dummy Phone book
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
						END
				END
			ELSE ! N.BT.PATTERN.MODE = 1 2-PATTERN : SINGLE/FULL_FIRST
				BEGIN
					IF N.BT.PHONE.CONNECT = 1 THEN
						BEGIN
							IF N.BT.CONTACT.NUMBER > 0 & N.BT.DP.NUMBER > 0 THEN ! PREPHONEBOOK EXIST : Merge Phone book
								BEGIN
									IF S.BT.DP.CONDITION[1][1] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\", \"SLOT_CONTACT_SINGLE\", \@N_GRAMMAR_SLOT_SINGLE>" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									ELSE
										BEGIN
											S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
											S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\"><\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\"><\"COMMAND\",\"GARBAGE_CALL\">" ;
										END
									IF S.BT.DP.CONDITION[1][2] = "1" THEN
										BEGIN
											S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\", \"SLOT_CONTACT_FULL_FIRST\", \@N_GRAMMAR_SLOT_FULL_FIRST>" ;
											S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_GLOBAL\"> - \@N_GRAMMAR_MAINMENU_MERGE_BT_FULL_FIRST<\"COMMAND\",\"CALL_NAME_LOCAL\">" ;
										END
								END
							ELSE !N.BT.CONTACT.NUMBER = 0 | N.BT.DP.NUMBER = 0 : Dummy Phone book
								BEGIN
									S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
									S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
								END
						END
					ELSE !N.BT.PHONE.CONNECT = 0 : Dummy Phone book
						BEGIN
							S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_PHONE" ;
							S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"GARBAGE_CALL\"> - \@N_GRAMMAR_MAINMENU_HELP_PHONE<\"COMMAND\",\"CALL_NAME_GLOBAL\">" ;
						END
				END
		END
	
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_RADIO THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_RADIO" ;
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_MEDIA THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_MEDIA" ;
			
			S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_MEDIA<\"ALL\",\"CD_PLAY_TRACK\"><\"ALL\",\"MY_MUSIC\"><\"ALL\",\"VOICE_MEMO\">" ;
			
			IF N.VENDER.CD.PLAY.TRACK = 0 THEN ! CD
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_MEDIA<\"ALL\",\"CD_PLAY_TRACK\">" ;
				END
				
			IF N.VENDER.MYMUSIC = 0 THEN ! MY MUSIC
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_MEDIA<\"ALL\",\"MY_MUSIC\">" ;
				END
				
			IF N.VENDER.VOICEMEMO = 0 THEN ! Voice Memo
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_MEDIA<\"ALL\",\"VOICE_MEMO\">" ;
				END
		END
		
	IF N.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
		BEGIN
			! GRAMMAR
			S.BNF.GRAMMAR := "\@N_GRAMMAR_MAINMENU_HELP_NAVIGATION" ;
			S.BNF.ACTIVATION := "\@N_GRAMMAR_MAINMENU_HELP_NAVIGATION<\"ALL\",\"TRAFFIC_INFO\">" ;
			
			IF N.VENDER.TRAFFICINFO = 0 THEN
				BEGIN
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_MAINMENU_HELP_NAVIGATION<\"ALL\",\"TRAFFIC_INFO\">" ;
				END
				
			! SD CARD CHECK
			IF N.NAVI.SDCARD.EXIST = 1 THEN
				BEGIN
					S.BNF.GRAMMAR := S.BNF.GRAMMAR + "\n" + "\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR" ;
					
					S.BNF.ACTIVATION := S.BNF.ACTIVATION + "+\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR<\"ALL\",\"CATEGORY_AUTOMOTIVE_HYUNDAI\"><\"ALL\",\"CATEGORY_AUTOMOTIVE_KIA\">" ;
					
					IF N.VENDER.POI.AUTOMOTIVE = 1 THEN ! HYUNDAI
						BEGIN
							S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR<\"ALL\",\"CATEGORY_AUTOMOTIVE_KIA\">" ;
						END
					ELSE ! N.VENDER.POI.AUTOMOTIVE = 2 THEN ! KIA
						BEGIN
							S.BNF.ACTIVATION := S.BNF.ACTIVATION + "-\@N_GRAMMAR_NAVI_SDCARD_GRAMMAR<\"ALL\",\"CATEGORY_AUTOMOTIVE_HYUNDAI\">" ;
						END
				END
		END
		
	! GENERAL
	IF N.DIALOG = @N_DIALOG_NO_RECOG_EXIT | N.DIALOG = @N_DIALOG_NO_RECOG_DRIVING | 
		N.DIALOG = @N_DIALOG_NO_RECOG_BACK | N.DIALOG = @N_DIALOG_NO_RECOG_HOUSE_NUMBER_STEP THEN
		BEGIN
			S.BNF.GRAMMAR := "\@N_GRAMMAR_NO_RECOG_EXIT" ;
		END
		
	LOG "LP LOG : Common.BNFGrammarLoad - S.BNF.GRAMMAR = " + S.BNF.GRAMMAR ;
	LOG "LP LOG : Common.BNFGrammarLoad - S.BNF.ACTIVATION = " + S.BNF.ACTIVATION ;
EOP

! GRAMMAR의 CTX PARAMETER 설정 후 GRAMMAR LOAD
JINIE Common.Grammar (STRING S.GRAMMAR, STRING S.ACTIVATION)

	TEMPORARY NUMBER N.TEMP := 1 ;
	TEMPORARY STRING S.PARAM := "" ;

	WHILE S.GRAMMAR [N.TEMP] <> "" DO
		BEGIN
			IF $N.STATUS.DIALOG = @N_DIALOG_NAVI_VDE_LOCATION | $N.STATUS.DIALOG = @N_DIALOG_NAVI_VDE_STREETCITY_STEP THEN
				BEGIN
					! ("ACCURACY"=6700,"HYPOTHESES.RESULT"=8,"HYPOTHESES.SEARCH"=16,"TS.FX"=1000)
					S.PARAM := "(\"ACCURACY\" = N.ACCURACY.SDCARD.VALUE, \"HYPOTHESES.RESULT\" = N.HYPOTHESES.RESULT.SDCARD.VALUE, \"HYPOTHESES.SEARCH\" = N.HYPOTHESES.SEARCH.SDCARD.VALUE, \"TS.FX\" = N.TS.FX.SDCARD.VALUE)"  ;
				END
			ELSE
				BEGIN
					! ("ACCURACY"=1500,"HYPOTHESES.RESULT"=8,"HYPOTHESES.SEARCH"=8,"TS.FX"=1000)
					S.PARAM := "(\"ACCURACY\" = N.ACCURACY.VALUE, \"HYPOTHESES.RESULT\" = N.HYPOTHESES.RESULT.VALUE, \"HYPOTHESES.SEARCH\" = N.HYPOTHESES.SEARCH.VALUE, \"TS.FX\" = N.TS.FX.VALUE)"  ;
				END
				
			IF N.TEMP = 1 THEN
				BEGIN
					$S.CONTEXT.GRAMMAR := S.GRAMMAR[N.TEMP] + S.PARAM ;
				END
			ELSE
				BEGIN
					$S.CONTEXT.GRAMMAR := $S.CONTEXT.GRAMMAR + " + " +  S.GRAMMAR[N.TEMP] + S.PARAM ;
				END
				
			N.TEMP := N.TEMP + 1 ;
		END
		
	$S.CONTEXT.ACTIVATION := S.ACTIVATION ;
EOP

! 인식 결과에 따른 다음 동작을 결정
! 인식 결과 O -> RULE, 인식 결과 X -> GUIDANCE or RESULT PROCESS 천이
JINIE Common.Recognizer ()
	
	LOG "LP LOG : Common.Recognizer <:::::EMBEDDED RESULT:::::>" ;
	LOG "LP LOG : Common.Recognizer - EMBEDDED ID = " + $S.STT.RESULT.OFFLINE.ID[1] ;
	LOG "LP LOG : Common.Recognizer - EMBEDDED STRING = " + $S.STT.RESULT.OFFLINE.STRING[1] + "\n" ;
	LOG "LP LOG : Common.Recognizer - EMBEDDED INTENTION = " + $S.STT.RESULT.OFFLINE.INTENTION[1] ;
	LOG "LP LOG : Common.Recognizer - EMBEDDED SLOT = " + $S.STT.RESULT.OFFLINE.SLOT[1] + "\n" ;
	
	LOG "LP LOG : Common.Recognizer <::::::SERVER RESULT::::::>" ;
	LOG "LP LOG : Common.Recognizer - SERVER STRING = " + $S.STT.RESULT.ONLINE.STRING[1] ;
	LOG "LP LOG : Common.Recognizer - SERVER DOMAIN = " + $S.STT.RESULT.ONLINE.DOMAIN[1] ;
	LOG "LP LOG : Common.Recognizer - SERVER INTENTION = " + $S.STT.RESULT.ONLINE.INTENTION[1] ;
	LOG "LP LOG : Common.Recognizer - SERVER SLOT = " + $S.STT.RESULT.ONLINE.SLOT[1] ;

	LOG "LP LOG : Common.Recognizer <::::::RESULT INFO::::::>" ;
	S.INNER.LOG.STRING ~= $N.STT.RESULT.OFFLINE.TYPE ;
	LOG "LP LOG : Common.Recognizer - $N.STT.RESULT.OFFLINE.TYPE = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= $N.STT.RESULT.ONLINE.TYPE ;
	LOG "LP LOG : Common.Recognizer - $N.STT.RESULT.ONLINE.TYPE = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= $N.STT.RESULT.OFFLINE.CONDITION ;
	LOG "LP LOG : Common.Recognizer - $N.STT.RESULT.OFFLINE.CONDITION = " + S.INNER.LOG.STRING ;
	
	! INTERRUPT TYPE INITIALIZE
	! INIT, GUIDANCE, RULE, RESULT, TRANSITION PROCESS : INTERRUPT TYPE 유지 필요
	$N.INTERRUPT.TYPE := 0 ;
	
	! ART
	CALL Common.ARTResultSetting () ;
	
	! VCRM
	CALL Common.VCRMResultSetting () ;
			
	IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_TIMEOUT THEN
		BEGIN
			CALL Common.EmbeddedTimeout () ;
		END
		
	IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_REJECTION THEN
		BEGIN
			CALL Common.EmbeddedRejection () ;
		END
EOP

! ART 변수에 EMBEDDED, SERVER 인식 결과 정보 저장
JINIE Common.ARTResultSetting ()

	TEMPORARY STRING S.TEMP.RESULT := "" ;
	TEMPORARY NUMBER N.CNT := 2 ;
	
	! EMBEDDED RESULT
	IF $N.STT.RESULT.OFFLINE.TYPE = @N_RESULT_TYPE_RESULT THEN
		BEGIN
			N.CNT := 2 ;
			S.TEMP.RESULT := $S.STT.RESULT.OFFLINE.STRING[1][1] ;
			WHILE $S.STT.RESULT.OFFLINE.STRING[1][N.CNT] <> "" DO
				BEGIN
					S.TEMP.RESULT := S.TEMP.RESULT + " " + $S.STT.RESULT.OFFLINE.STRING[1][N.CNT] ;
					
					N.CNT := N.CNT + 1 ;
				END
				
			! Result String\fConfidence\nDomain\fIntention\nSlotTag1\fSlotValue1\n...\fSlotTagN\fSlotValueN
			S.ART.EMBEDDED.RESULT := S.TEMP.RESULT + "\f" + $S.STT.RESULT.SCORE[1] + "\n" +
									" " + "\f" + " " + "\n" + 
									" " + "\f" + " " + "\n" ;
		END
	ELSE
		BEGIN
			S.ART.EMBEDDED.RESULT := "" ;
		END
		
	! SERVER RESULT
	IF $N.STT.RESULT.ONLINE.TYPE = @N_RESULT_TYPE_RESULT THEN
		BEGIN
			N.CNT := 2 ;
			S.TEMP.RESULT := $S.STT.RESULT.ONLINE.SLOT[1][1] ;
			WHILE $S.STT.RESULT.ONLINE.SLOT[1][N.CNT] <> "" DO
				BEGIN
					IF ( N.CNT % 2 ) = 0 THEN
						BEGIN
							S.TEMP.RESULT := S.TEMP.RESULT + "\f" + $S.STT.RESULT.ONLINE.SLOT[1][N.CNT] ;
						END
					ELSE
						BEGIN
							S.TEMP.RESULT := S.TEMP.RESULT + "\n" + $S.STT.RESULT.ONLINE.SLOT[1][N.CNT] ;
						END
						
					N.CNT := N.CNT + 1 ;
				END
				
			! Dictation String\fConfidence\nDomain\fIntention\nSlotTag1\fSlotValue1\n...\fSlotTagN\fSlotValueN
			S.ART.SERVER.RESULT := $S.STT.RESULT.ONLINE.STRING[1] + "\f" + "0" + "\n" +
									$S.STT.RESULT.ONLINE.DOMAIN + "\f" + $S.STT.RESULT.ONLINE.INTENTION + "\n" + S.TEMP.RESULT ;
		END
	ELSE
		BEGIN
			S.ART.SERVER.RESULT := "" ;
		END
		
	LOG "LP LOG : Common.ARTResultSetting - S.ART.EMBEDDED.RESULT = " + S.ART.EMBEDDED.RESULT ;
	LOG "LP LOG : Common.ARTResultSetting - S.ART.SERVER.RESULT = " + S.ART.SERVER.RESULT ;
EOP

! VCRM 변수에 인식 결과 정보 저장
JINIE Common.VCRMResultSetting ()

	TEMPORARY NUMBER N.TEMP := 1 ;
	
	S.VCRM.RESULT.CONFIDENCE := "" ;
	WHILE N.TEMP <= $N.STT.RESULT.RESULTS DO
		BEGIN
			S.VCRM.RESULT.CONFIDENCE := S.VCRM.RESULT.CONFIDENCE + " " + $S.STT.RESULT.STRING[N.TEMP][1] + "_" + $S.STT.RESULT.SCORE[N.TEMP] ;
			N.TEMP := N.TEMP + 1 ;
		END
		
	LOG "LP LOG : Common.VCRMResultSetting - S.VCRM.RESULT.CONFIDENCE = " + "\n" + S.VCRM.RESULT.CONFIDENCE ;
EOP

! EMBEDDED ENGINE에서 TIMEOUT 발생 시 수행
JINIE Common.EmbeddedTimeout ()

	N.CONTROL.TIMEOUT.NUM := N.CONTROL.TIMEOUT.NUM + 1 ;
	N.INNER.RECOG.COUNT.NUM := N.CONTROL.TIMEOUT.NUM + N.CONTROL.REJECTION.NUM ;
	
	S.INNER.LOG.STRING ~= N.CONTROL.TIMEOUT.NUM ;
	LOG "LP LOG : Common.EmbeddedTimeout - N.CONTROL.TIMEOUT.NUM = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.CONTROL.REJECTION.NUM ;
	LOG "LP LOG : Common.EmbeddedTimeout - N.CONTROL.REJECTION.NUM = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.INNER.RECOG.COUNT.NUM ;
	LOG "LP LOG : Common.EmbeddedTimeout - N.INNER.RECOG.COUNT.NUM = " + S.INNER.LOG.STRING ;
	
	IF N.INNER.RECOG.COUNT.NUM = 1 | N.INNER.RECOG.COUNT.NUM = 0 | N.INNER.RECOG.COUNT.NUM > 3 THEN
		BEGIN ! 0 or 3 초과의 경우, 1과 동일한 동작으로 예외 처리
			$N.CONTROL.FUNCTION.BARGEIN.FLAG := N.CONTROL.FUNCTION.BARGEIN.FLAG ; ! 사양으로 전달 받은 값으로 Barge In Flag 설정
			
			S.INNER.LOG.STRING ~= $N.CONTROL.FUNCTION.BARGEIN.FLAG ;
			LOG "LP LOG : Common.EmbeddedTimeout - $N.CONTROL.FUNCTION.BARGEIN.FLAG = " + S.INNER.LOG.STRING ;
			
			$N.CONTROL.FLOW := @N_STAGE_GUIDANCE ;
			$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_OFF ; ! PRE PROGRAM에서 다시 PROMPT 저장 안하도록 PROGRAM OFF 설정
			
			IF N.CONTROL.RECOGNITION.MODE = 0 THEN
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_K1_10_00"  + "\"" + " + " + S.BEEP ;
				END
			ELSE
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_00"  + "\"" + " + " + S.BEEP ;
				END
				
			$S.PROMPT.GUIDANCE.TEXT := "\"\@S_SCREEN_PROMPT_LID_1_10_01\"" ;
		END
		
	IF N.INNER.RECOG.COUNT.NUM = 2 THEN
		BEGIN
			$N.CONTROL.FUNCTION.BARGEIN.FLAG := N.CONTROL.FUNCTION.BARGEIN.FLAG ; ! 사양으로 전달 받은 값으로 Barge In Flag 설정
			
			S.INNER.LOG.STRING ~= $N.CONTROL.FUNCTION.BARGEIN.FLAG ;
			LOG "LP LOG : Common.EmbeddedTimeout - $N.CONTROL.FUNCTION.BARGEIN.FLAG = " + S.INNER.LOG.STRING ;
			
			$N.CONTROL.FLOW := @N_STAGE_GUIDANCE ;
			$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_OFF ; ! PRE PROGRAM에서 다시 PROMPT 저장 안하도록 PROGRAM OFF 설정
			
			IF N.CONTROL.RECOGNITION.MODE = 0 THEN
				BEGIN
					IF $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_CATEGORY | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_MEDIA | 
						$N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_RADIO | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
						BEGIN
							$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_01"  + "\"" + " + " + S.BEEP ;
						END
					ELSE
						BEGIN
							$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_K1_10_01"  + "\"" + " + " + S.BEEP ;
						END
				END
			ELSE
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_01"  + "\"" + " + " + S.BEEP ;
				END
				
			$S.PROMPT.GUIDANCE.TEXT := "\"\@S_SCREEN_PROMPT_LID_1_10_02\"" ;
		END
		
	IF N.INNER.RECOG.COUNT.NUM = 3 THEN
		BEGIN
			CALL Common.EmbeddedVRExit () ;
		END

	! LID
	$N.PROMPT.GUIDANCE.ID := N.SCREEN.PROMPT ;
	$N.PROMPT.FEEDBACK.ID := N.SCREEN.PROMPT ;
EOP

! EMBEDDED ENGINE에서 REJECTION 발생 시 수행
JINIE Common.EmbeddedRejection ()

	N.CONTROL.REJECTION.NUM := N.CONTROL.REJECTION.NUM + 1 ;
	N.INNER.RECOG.COUNT.NUM := N.CONTROL.TIMEOUT.NUM + N.CONTROL.REJECTION.NUM ;
			
	S.INNER.LOG.STRING ~= N.CONTROL.TIMEOUT.NUM ;
	LOG "LP LOG : Common.EmbeddedRejection - N.CONTROL.TIMEOUT.NUM = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.CONTROL.REJECTION.NUM ;
	LOG "LP LOG : Common.EmbeddedRejection - N.CONTROL.REJECTION.NUM = " + S.INNER.LOG.STRING ;
	S.INNER.LOG.STRING ~= N.INNER.RECOG.COUNT.NUM ;
	LOG "LP LOG : Common.EmbeddedRejection - N.INNER.RECOG.COUNT.NUM = " + S.INNER.LOG.STRING ;
	
	IF N.INNER.RECOG.COUNT.NUM = 1 | N.INNER.RECOG.COUNT.NUM = 0 | N.INNER.RECOG.COUNT.NUM > 3 THEN
		BEGIN ! 0 or 3 초과의 경우, 1과 동일한 동작으로 예외 처리
			$N.CONTROL.FUNCTION.BARGEIN.FLAG := N.CONTROL.FUNCTION.BARGEIN.FLAG ; ! 사양으로 전달 받은 값으로 Barge In Flag 설정
			
			S.INNER.LOG.STRING ~= $N.CONTROL.FUNCTION.BARGEIN.FLAG ;
			LOG "LP LOG : Common.EmbeddedRejection - $N.CONTROL.FUNCTION.BARGEIN.FLAG = " + S.INNER.LOG.STRING ;
			
			$N.CONTROL.FLOW := @N_STAGE_GUIDANCE ;
			$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_OFF ; ! PRE PROGRAM에서 다시 PROMPT 저장 안하도록 PROGRAM OFF 설정
			
			IF N.CONTROL.RECOGNITION.MODE = 0 THEN
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_K1_10_03"  + "\"" + " + " + S.BEEP ;
				END
			ELSE
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_03"  + "\"" + " + " + S.BEEP ;
				END
				
			$S.PROMPT.GUIDANCE.TEXT := "\"\@S_SCREEN_PROMPT_LID_1_10_04\"" ;
		END
		
	IF N.INNER.RECOG.COUNT.NUM = 2 THEN
		BEGIN
			$N.CONTROL.FUNCTION.BARGEIN.FLAG := N.CONTROL.FUNCTION.BARGEIN.FLAG ; ! 사양으로 전달 받은 값으로 Barge In Flag 설정
			
			S.INNER.LOG.STRING ~= $N.CONTROL.FUNCTION.BARGEIN.FLAG ;
			LOG "LP LOG : Common.EmbeddedRejection - $N.CONTROL.FUNCTION.BARGEIN.FLAG = " + S.INNER.LOG.STRING ;
			
			$N.CONTROL.FLOW := @N_STAGE_GUIDANCE ;
			$N.CONTROL.PROGRAM.GUIDANCE := @N_FLAG_OFF ; ! PRE PROGRAM에서 다시 PROMPT 저장 안하도록 PROGRAM OFF 설정
			
			IF N.CONTROL.RECOGNITION.MODE = 0 THEN
				BEGIN
					IF $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_CATEGORY | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_MEDIA | 
						$N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_RADIO | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
						BEGIN
							$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_04"  + "\"" + " + " + S.BEEP ;
						END
					ELSE
						BEGIN
							$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_K1_10_04"  + "\"" + " + " + S.BEEP ;
						END
				END
			ELSE
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + "\@S_DIALOG_PROMPT_LID_S1_10_04"  + "\"" + " + " + S.BEEP ;
				END
			
			$S.PROMPT.GUIDANCE.TEXT := "\"\@S_SCREEN_PROMPT_LID_1_10_05\"" ;
		END
		
	IF N.INNER.RECOG.COUNT.NUM = 3 THEN
		BEGIN
			CALL Common.EmbeddedVRExit () ;
		END
		
	! LID
	$N.PROMPT.GUIDANCE.ID := N.SCREEN.PROMPT ;
	$N.PROMPT.FEEDBACK.ID := N.SCREEN.PROMPT ;
EOP

! EMBEDDED ENGINE에서 TIMEOUT or REJECTION이 3회 발생 시 수행
JINIE Common.EmbeddedVRExit ()

	! FLOW
	$N.CONTROL.FLOW := @N_STAGE_RULE ;
	
	$S.RESULT.ID := "\@N_TAG_INNER_RESULT_ID" ;
	$N.RESULT.RESULTS := 1 ;
	$N.RESULT.FORMAT := 2 ;
EOP

! 모드에 따른 GUIDANCE PROMPT 설정
! INTERRUPT 및 사양에 따른 EXCEPTION 수행
JINIE Common.GuidancePromptControl ()

	! GUIDANCE PROMPT CONTROL
	IF N.VOLUME.SILENCE = 1 THEN
		BEGIN
			$S.PROMPT.GUIDANCE.EXPRESSION := "\@N_PROMPT_SILENCE" ;
		END
	ELSE
		BEGIN
			IF $N.INTERRUPT.TYPE = 1 | $N.INTERRUPT.TYPE = 3 |
			S.RESULT.FIX.CID = "\@N_TAG_NEXT_PAGE_ID" & N.GLOBAL.LISTITEM.REMAIN = 1 |
			S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_PAGE_ID" & N.GLOBAL.LISTITEM.REMAIN = 1 THEN
				BEGIN
					$S.PROMPT.GUIDANCE.EXPRESSION := S.BEEP ;
				END
			ELSE ! 0 : NIL, 4 : RESULT(MULTI-MODAL)
				BEGIN
					IF $N.STATUS.DIALOG = @N_DIALOG_NO_RECOG_EXIT | $N.STATUS.DIALOG = @N_DIALOG_NO_RECOG_BACK | $N.STATUS.DIALOG = @N_DIALOG_NO_RECOG_HOUSE_NUMBER_STEP THEN
						BEGIN
							IF N.CONTROL.RECOGNITION.MODE = 0 THEN
								BEGIN
									$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + S.INNER.PROMPT.KINDLY.STR  + "\"" ;
								END
							ELSE
								BEGIN
									$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + S.INNER.PROMPT.SIMPLY.STR  + "\"" ;
								END
						END
					ELSE
						BEGIN
							IF N.CONTROL.RECOGNITION.MODE = 0 THEN
								BEGIN
									$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + S.INNER.PROMPT.KINDLY.STR  + "\"" + " + " + S.BEEP ;
								END
							ELSE
								BEGIN
									$S.PROMPT.GUIDANCE.EXPRESSION := "\"" + S.INNER.PROMPT.SIMPLY.STR  + "\"" + " + " + S.BEEP ;
								END
						END
				END
		END
		
	! UNINITAL
	N.VOLUME.SILENCE := 0 ;
EOP

! ON SCREEN TEXT에 해당하는 GUIDANCE TEXT 및 LID 전달
JINIE Common.GuidanceOnScreenText ()

	! LID
	$N.PROMPT.GUIDANCE.ID := N.SCREEN.PROMPT ;
	$N.PROMPT.FEEDBACK.ID := N.SCREEN.PROMPT ;
	
	! ON SCREEN TEXT
	IF $N.INTERRUPT.TYPE = 1 | $N.INTERRUPT.TYPE = 3 THEN
		BEGIN
			$S.PROMPT.GUIDANCE.TEXT := " " ;
		END
	ELSE ! 0 : NIL, 4 : RESULT(MULTI-MODAL)
		BEGIN
			IF S.INNER.PROMPT.DISPLY.STR = "" THEN
				BEGIN
					$S.PROMPT.GUIDANCE.TEXT := $S.PROMPT.GUIDANCE.EXPRESSION ;
				END
			ELSE
				BEGIN
					$S.PROMPT.GUIDANCE.TEXT := "\"" + S.INNER.PROMPT.DISPLY.STR + "\"" ;
				END
		END
EOP

! INTERRUPT TYPE : RESULT 전달되는 경우, RESULT 관련 변수 초기화
JINIE Common.CheckInterrupt ()

	S.INNER.LOG.STRING ~= $N.INTERRUPT.TYPE ;
	LOG "LP LOG : Common.CheckInterrupt - $N.INTERRUPT.TYPE = " + S.INNER.LOG.STRING ;
	
	IF $N.INTERRUPT.TYPE = 4 THEN
		BEGIN
			$S.STT.RESULT.SCORE := "0" ;
			S.VCRM.RESULT.CONFIDENCE := "" ;
			$S.STT.RESULT.STRING := "" ;
			$S.STT.RESULT.DOMAIN := "" ;
			$S.STT.RESULT.INTENTION := "" ;
			$S.STT.RESULT.SLOT := "" ;
			$S.STT.RESULT.ONLINE.STRING := "" ;
			$S.STT.RESULT.ONLINE.DOMAIN := "" ;
			$S.STT.RESULT.ONLINE.INTENTION := "" ;
			$S.STT.RESULT.ONLINE.SLOT := "" ;
			$S.STT.RESULT.OFFLINE.STRING := "" ;
			$S.STT.RESULT.OFFLINE.DOMAIN := "" ;
			$S.STT.RESULT.OFFLINE.INTENTION := "" ;
			$S.STT.RESULT.OFFLINE.SLOT := "" ;
			$S.ACTION.VALUE := "" ;
			S.ACTION.STRING := "" ;
			$S.RESULT.STRING := "" ;
			N.VOLUME.SILENCE := 0 ;
			
			! Call <name>, Find <category>, <house number> 인식 후 multimodal 발생 시 변수 초기화
			S.SLOT.TAG.CONTACTNAME := "" ;
			S.SLOT.TAG.POI.CATEGORY := "" ;
			S.SLOT.TAG.HOUSE.NUMBER := "" ;
		END
EOP

! POST PROCESSOR 사용 PROCESS의 PROCESS 및 PROGRAM 사용 여부 설정
! RULE 단계 진입 시 마다 초기화가 필요한 항목에 대하여 초기화 수행
JINIE Common.ControlPost ()

	CALL Common.SetStagePost () ;
	CALL Common.InitializerPost () ;
EOP

! Post Processor 진입 시 마다 Stage on/off 설정
JINIE Common.SetStagePost ()

	! CONTROL
	$N.CONTROL.PROCESS.REFERENCE := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.RESULT := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.RESULT := @N_FLAG_ON ;
	$N.CONTROL.PROCESS.FEEDBACK := @N_FLAG_OFF ;
	$N.CONTROL.PROGRAM.FEEDBACK := @N_FLAG_OFF ;
	$N.CONTROL.PROCESS.TRANSITION := @N_FLAG_ON ;
	$N.CONTROL.PROGRAM.TRANSITION := @N_FLAG_ON ;
EOP

! Post Processor 진입 시 마다 초기화 및 설정이 필요한 항목에 대하여 수행
JINIE Common.InitializerPost ()
	
	! DEFAULT SETTING
	N.SCREEN.PROMPT := 0 ;
	S.ACTION.STRING := "" ;
	
	S.SLOT.TAG := "" ;
	S.SLOT.VALUE := "" ;
	S.SLOT.SCORE := "" ;
	S.SLOT.ID := "" ;
	
	S.SLOT.ID.NUMBER := "" ;
	S.SLOT.ID.FM.FREQ := "" ;
	S.SLOT.ID.AM.FREQ := "" ;
	S.SLOT.ID.CONTACTNAME := "" ;
	S.SLOT.ID.PHONETYPE := "" ;
	S.SLOT.ID.VAD.NUM := "" ;
	S.SLOT.ID.POI.CATEGORY := "" ;
	S.SLOT.ID.STATE.NAME := "" ;
	
	S.SLOT.TAG.NUMBER := "" ;
	S.SLOT.TAG.FM.FREQ := "" ;
	S.SLOT.TAG.AM.FREQ := "" ;
	S.SLOT.TAG.CONTACTNAME := "" ;
	S.SLOT.TAG.PHONETYPE := "" ;
	S.SLOT.TAG.VAD.NUM := "" ;
	S.SLOT.TAG.POI.CATEGORY := "" ;
	S.SLOT.TAG.STATE.NAME := "" ;
	S.SLOT.TAG.STREET.CITY := "" ;
	S.SLOT.TAG.HOUSE.NUMBER := "" ;
	
	S.SLOT.NUMBER := "" ;
	S.SLOT.FM.FREQ := "" ;
	S.SLOT.AM.FREQ := "" ;
	S.SLOT.CONTACTNAME := "" ;
	S.SLOT.PHONETYPE := "" ;
	S.SLOT.VAD.NUM := "" ;
	S.SLOT.POI.CATEGORY := "" ;
	S.SLOT.STATE.NAME := "" ;
	
	S.SLOT.SCORE.NUMBER := "" ;
	S.SLOT.SCORE.FM.FREQ := "" ;
	S.SLOT.SCORE.AM.FREQ := "" ;
	S.SLOT.SCORE.XM.FREQ := "" ;
	S.SLOT.SCORE.CONTACTNAME := "" ;
	S.SLOT.SCORE.PHONETYPE := "" ;
	S.SLOT.SCORE.VAD.NUM := "" ;
	S.SLOT.SCORE.POI.CATEGORY := "" ;
	S.SLOT.SCORE.STATE.NAME := "" ;
	
	N.SLOT.SCORE.NUMBER := 0 ;
	N.SLOT.SCORE.FM.FREQ := 0 ;
	N.SLOT.SCORE.AM.FREQ := 0 ;
	S.SLOT.FREQ.SCORE.CONTROL := "";
	S.SLOT.FREQ.VALUE.CONTROL := "";
	N.DIP.NUMBER := 0 ;
EOP

JINIE Common.SlmIntentionThresholdOneBest (STRING S.SLOT.TEMP)

	TEMPORARY NUMBER N.TEMP.ADD := 1 ;
	TEMPORARY NUMBER N.TEMP := 1 ;
	TEMPORARY NUMBER N.TEMP.ID := 1 ;
	TEMPORARY NUMBER N.SCORE.TEMP := 0 ;
	
	LOG "LP LOG : Common.SlmIntentionThresholdOneBest - $S.STT.RESULT.SLOT = " + $S.STT.RESULT.SLOT ;
	
	! BNF slot
	IF $S.STT.RESULT.SLOT[1][1] = "<STREET_CITY>" | $S.STT.RESULT.SLOT[1][1] = "<SLOT_HOUSE_NUMBER>" THEN
		BEGIN 
			S.SLOT.ID := $S.STT.RESULT.ID ;
			S.SLOT.TAG :=  $S.STT.RESULT.SLOT[1][1] ;
			S.SLOT.VALUE :=  $S.STT.RESULT.SLOT ;
			S.SLOT.SCORE :=  $S.STT.RESULT.SLOT ;
			
			IF $S.RULE.LEXEMES[1][3] = "\@N_LEXEME_STREET_NAME"  THEN
				BEGIN
					S.SLOT.TAG := S.SLOT.TAG + "\f" + "<STREET_CITY>" ;
				END
		END
	ELSE ! NLU slot
		BEGIN
			WHILE S.SLOT.TEMP[N.TEMP.ADD] <> "" DO
				BEGIN
					WHILE $S.STT.RESULT.SLOT[1][N.TEMP] <> "" DO
						BEGIN
							IF $S.STT.RESULT.SLOT[1][N.TEMP] = S.SLOT.TEMP[N.TEMP.ADD] THEN
								BEGIN
									N.SCORE.TEMP ~= $S.STT.RESULT.SLOT[1][N.TEMP+2] ;
									
									IF N.TEMP = 1 THEN
										BEGIN
											IF N.SCORE.TEMP > N.SLOT.REJECTION.VALUE THEN
												BEGIN
													S.SLOT.ID := $S.STT.RESULT.ID[1][N.TEMP.ID] ;
													S.SLOT.TAG :=  $S.STT.RESULT.SLOT[1][N.TEMP] ;
													S.SLOT.VALUE :=  $S.STT.RESULT.SLOT[1][N.TEMP+1] ;
													S.SLOT.SCORE :=  $S.STT.RESULT.SLOT[1][N.TEMP+2] ;
												END
										END
									ELSE
										BEGIN
											IF N.SCORE.TEMP > N.SLOT.REJECTION.VALUE THEN
												BEGIN
													S.SLOT.ID := S.SLOT.ID + "\f" + $S.STT.RESULT.ID[1][N.TEMP.ID] ;
													S.SLOT.TAG :=  S.SLOT.TAG + "\f" + $S.STT.RESULT.SLOT[1][N.TEMP] ;
													S.SLOT.VALUE :=  S.SLOT.VALUE + "\f" + $S.STT.RESULT.SLOT[1][N.TEMP+1] ;
													S.SLOT.SCORE :=  S.SLOT.SCORE + "\f" + $S.STT.RESULT.SLOT[1][N.TEMP+2] ;
												END
										END
								END
								
							N.TEMP := N.TEMP + 3 ;
							N.TEMP.ID := N.TEMP.ID + 1 ;
						END
						
					N.TEMP := 1 ;
					N.TEMP.ADD := N.TEMP.ADD + 1 ;
				END
		END
		
	LOG "LP LOG : Common.SlmIntentionThresholdOneBest - S.SLOT.TAG = " + S.SLOT.TAG ;
	LOG "LP LOG : Common.SlmIntentionThresholdOneBest - S.SLOT.VALUE = " + S.SLOT.VALUE ;
EOP

JINIE Common.SlmSlotThresholdOneBest ()

	TEMPORARY NUMBER N.TEMP := 1 ; ! 열
	TEMPORARY NUMBER N.TEMP.ADD := 1 ; ! 행
	TEMPORARY STRING S.SCORE.TEMP := "" ;
	TEMPORARY NUMBER N.SLOT.SCORE.TEMP := 0 ;
	TEMPORARY NUMBER N.SLOT.SCORE.PRE.TEMP := 0 ;
	
	WHILE S.SLOT.TAG[1][N.TEMP] <> "" DO
		BEGIN
			S.INNER.LOG.STRING ~= N.TEMP ;
			LOG "LP LOG : Common.SlmSlotThresholdOneBest - S.SLOT.TAG[1][" + S.INNER.LOG.STRING+ "] = " + S.SLOT.TAG[1][N.TEMP] ;
			LOG "LP LOG : Common.SlmSlotThresholdOneBest - S.SLOT.SCORE[1][" + S.INNER.LOG.STRING+ "] = " + S.SLOT.SCORE[1][N.TEMP] ;
			
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_NUMBER>" THEN
				BEGIN
					IF S.SLOT.NUMBER = "" THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.NUMBER = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							S.SLOT.SCORE.NUMBER ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_PRESET_NUMBER>" THEN
				BEGIN
					IF S.SLOT.NUMBER = "" THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.NUMBER = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							S.SLOT.SCORE.NUMBER ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_TRACK_NUMBER>" THEN
				BEGIN
					IF S.SLOT.NUMBER = "" THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.NUMBER = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							S.SLOT.SCORE.NUMBER ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_CHANNEL_NUMBER>" THEN
				BEGIN
					IF S.SLOT.NUMBER = "" THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.NUMBER = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							S.SLOT.SCORE.NUMBER ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_LINE_NUMBER>"  THEN
				BEGIN
					IF S.SLOT.NUMBER = "" THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.NUMBER = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.NUMBER := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.NUMBER := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
							S.SLOT.SCORE.NUMBER ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_FM_FREQ>" THEN
				BEGIN
					IF S.SLOT.FM.FREQ = "" THEN
						BEGIN
							S.SLOT.ID.FM.FREQ := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.FM.FREQ := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.FM.FREQ := S.SLOT.TAG[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.FM.FREQ = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.FM.FREQ := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.FM.FREQ := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.FM.FREQ := S.SLOT.TAG[1][N.TEMP] ;
							S.SLOT.SCORE.FM.FREQ ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_AM_FREQ>" THEN
				BEGIN
					IF S.SLOT.AM.FREQ = "" THEN
						BEGIN
							S.SLOT.ID.AM.FREQ := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.AM.FREQ := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.AM.FREQ := S.SLOT.TAG[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.AM.FREQ = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.AM.FREQ := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.AM.FREQ := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.AM.FREQ := S.SLOT.TAG[1][N.TEMP] ;
							S.SLOT.SCORE.AM.FREQ ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_VAD_NUM_SLOT>" THEN
				BEGIN
					IF S.SLOT.VAD.NUM = "" THEN
						BEGIN
							S.SLOT.ID.VAD.NUM := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.VAD.NUM := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.VAD.NUM := S.SLOT.TAG[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.VAD.NUM = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.VAD.NUM := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.VAD.NUM := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.VAD.NUM := S.SLOT.TAG[1][N.TEMP] ;
							S.SLOT.SCORE.VAD.NUM ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_CATEGORY_NAME>" THEN
				BEGIN
					IF S.SLOT.POI.CATEGORY = "" THEN
						BEGIN
							S.SLOT.ID.POI.CATEGORY := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.POI.CATEGORY := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.POI.CATEGORY := "<SLOT_CATEGORY_NAME>" ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.POI.CATEGORY = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.POI.CATEGORY := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.POI.CATEGORY := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.POI.CATEGORY := "<SLOT_CATEGORY_NAME>" ;
							S.SLOT.SCORE.POI.CATEGORY ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_STATE_NAME>" THEN
				BEGIN
					IF S.SLOT.STATE.NAME = "" THEN
						BEGIN
							S.SLOT.ID.STATE.NAME := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.STATE.NAME := S.SLOT.VALUE[1][N.TEMP] ;
							S.SLOT.TAG.STATE.NAME := S.SLOT.TAG[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := 0 ;
						END
						
					N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[1][N.TEMP] ;
					IF ( S.SLOT.TAG.STATE.NAME = S.SLOT.TAG[1][N.TEMP] ) & ( N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP ) THEN
						BEGIN
							S.SLOT.ID.STATE.NAME := S.SLOT.ID[1][N.TEMP] ;
							S.SLOT.STATE.NAME := S.SLOT.VALUE[1][N.TEMP] ;
							N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
							S.SLOT.TAG.STATE.NAME := S.SLOT.TAG[1][N.TEMP] ;
							S.SLOT.SCORE.STATE.NAME ~= N.SLOT.SCORE.TEMP ;
						END
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<STREET_CITY>" THEN
				BEGIN 
					S.SLOT.TAG.STREET.CITY := S.SLOT.TAG[1][N.TEMP] ;
				END
				
			IF S.SLOT.TAG[1][N.TEMP] = "<SLOT_HOUSE_NUMBER>" THEN
				BEGIN 
					S.SLOT.TAG.HOUSE.NUMBER := S.SLOT.TAG[1][N.TEMP] ;
				END
				
			N.TEMP := N.TEMP + 1 ;
		END
EOP

JINIE Common.SlmIntentionThresholdNbest (STRING S.SLOT.TEMP)

	TEMPORARY NUMBER N.TEMP.ROW := 1 ; ! 행
	TEMPORARY NUMBER N.TEMP.SLOT.COL := 1 ; ! SLOT의 열
	TEMPORARY NUMBER N.TEMP.ID.COL := 1 ; ! ID의 열
	TEMPORARY NUMBER N.TEMP.ADD := 1 ;
	TEMPORARY NUMBER N.TEMP.SCORE := 0 ;
	TEMPORARY NUMBER N.TEMP.ROW.STORED := 0 ; ! N.TEMP.ROW 값이 바뀌었는지 확인하기 위해 저장. 이전에 저장한 N.TEMP.ROW와 해당 값이 다르면 개행 처리함
	
	WHILE N.TEMP.ROW <= $N.RESULT.RESULTS DO ! S.SLOT.TEMP와 일치하지 않는 SLOT이 RESULT 중간에 존재 할 수 있으므로 해당 값을 건너뛰고 값을 저장하려면 전체를 모두 체크해야함.
		BEGIN
			IF $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL] <> "" & S.SLOT.TEMP[N.TEMP.ADD] <> "" THEN
				BEGIN
					S.INNER.LOG.STRING ~= N.TEMP.ROW ;
					LOG "LP LOG : Common.SlmIntentionThresholdNbest - $S.STT.RESULT.SLOT[" + S.INNER.LOG.STRING + "][N.TEMP.SLOT.COL] = " + $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL] ;
					
					IF $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL] = S.SLOT.TEMP[N.TEMP.ADD] THEN ! RESULT 기준으로 S.SLOT.TEMP의 INDEX를 조정하여 체크
						BEGIN
							LOG "LP LOG : Common.SlmIntentionThresholdNbest - S.SLOT.TEMP[N.TEMP.ADD] = " + S.SLOT.TEMP[N.TEMP.ADD] ;
							
							N.TEMP.SCORE ~= $S.STT.RESULT.SCORE[N.TEMP.ROW][1] ; ! Dual Threshold 사양으로 인하여 Slot Score가 아닌 Result Score 사용
							IF N.TEMP.SCORE > $N.STT.RESULT.CONTROL.THRESHOLD.UTTERANCE.LOW THEN
								BEGIN
									IF S.SLOT.TAG = "" THEN ! 처음 SLOT 값을 저장하는 경우
										BEGIN
											S.SLOT.ID := $S.STT.RESULT.ID[N.TEMP.ROW][N.TEMP.ID.COL] ;
											S.SLOT.TAG := $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL] ;
											S.SLOT.VALUE := $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL+1] ;
											S.SLOT.SCORE := $S.STT.RESULT.SCORE[N.TEMP.ROW][1] ;
											N.TEMP.ROW.STORED := N.TEMP.ROW ; ! 처음 저장 시의 행 정보를 저장
										END
									ELSE
										BEGIN
											IF N.TEMP.ROW.STORED = N.TEMP.ROW THEN ! 저장된 행 정보와 현재의 행 정보가 같으면 '\f'로 이어서 저장
												BEGIN
													S.SLOT.ID := S.SLOT.ID + "\f" + $S.STT.RESULT.ID[N.TEMP.ROW][N.TEMP.ID.COL] ;
													S.SLOT.TAG := S.SLOT.TAG + "\f" + $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL] ;
													S.SLOT.VALUE := S.SLOT.VALUE + "\f" + $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL+1] ;
													S.SLOT.SCORE := S.SLOT.SCORE + "\f" + $S.STT.RESULT.SCORE[N.TEMP.ROW][1] ;
												END
											ELSE ! 저장된 행 정보와 현재의 행 정보가 다르면 '\n'로 다음 행에 저장
												BEGIN
													S.SLOT.ID := S.SLOT.ID + "\n" + $S.STT.RESULT.ID[N.TEMP.ROW][N.TEMP.ID.COL] ;
													S.SLOT.TAG := S.SLOT.TAG + "\n" + $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL] ;
													S.SLOT.VALUE := S.SLOT.VALUE + "\n" + $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL+1] ;
													S.SLOT.SCORE := S.SLOT.SCORE + "\n" + $S.STT.RESULT.SCORE[N.TEMP.ROW][1] ;
													N.TEMP.ROW.STORED := N.TEMP.ROW ; ! 개행 후 처음 저장 시의 행 정보를 저장
												END
										END
										
									N.TEMP.ADD := 1 ; ! RESULT와 S.SLOT.TEMP가 동일한 결과를 저장했으므로 다시 S.SLOT.TEMP의 처음부터 비교하도록 INDEX 조정
									
									! 다음 SLOT 정보가 존재하는지 확인
									IF $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL + 3] = "" THEN
										BEGIN ! 다음 SLOT이 없으면 다음 행의 첫번째 INDEX로 조정
											N.TEMP.ID.COL := 1 ;
											N.TEMP.SLOT.COL := 1 ;
											N.TEMP.ROW := N.TEMP.ROW + 1 ;
										END
									ELSE ! 다음 SLOT이 존재하는 경우, 다음 SLOT으로 INDEX 조정
										BEGIN
											N.TEMP.ID.COL := N.TEMP.ID.COL + 1 ;
											N.TEMP.SLOT.COL := N.TEMP.SLOT.COL + 3 ;
										END
								END
							ELSE ! Low Threshold 보다 낮은 값은 Rejection
								BEGIN
									N.TEMP.ROW := $N.RESULT.RESULTS + 1 ; ! WHILE 문 종료 조건
								END
						END
					ELSE ! 사양 슬롯 정보와 일치하지 않는 경우, 다음 사양 슬롯 정보와 비교
						BEGIN
							! 다음 SLOT 사양이 존재하지 않는지 확인
							IF S.SLOT.TEMP[N.TEMP.ADD + 1] = "" THEN
								BEGIN
									N.TEMP.ADD := 1 ;
									
									IF $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL + 3] = "" THEN
										BEGIN
											N.TEMP.ID.COL := 1 ;
											N.TEMP.SLOT.COL := 1 ;
											N.TEMP.ROW := N.TEMP.ROW + 1 ;
										END
									ELSE ! 다음 SLOT이 존재하는 경우
										BEGIN
											N.TEMP.ID.COL := N.TEMP.ID.COL + 1 ;
											N.TEMP.SLOT.COL := N.TEMP.SLOT.COL + 3 ;
										END
								END
							ELSE
								BEGIN
									N.TEMP.ADD := N.TEMP.ADD + 1 ;
								END
						END
				END
			ELSE ! 비어 있는 변수가 어떤 변수인지 확인
				BEGIN
					N.TEMP.ID.COL := 1 ;
					N.TEMP.SLOT.COL := 1 ;
					
					IF $S.STT.RESULT.SLOT[N.TEMP.ROW][N.TEMP.SLOT.COL] = "" THEN
						BEGIN ! RESULT가 비어있는 경우, SLOT이 없는 명령어가 인식되었을 수 있기 때문에 다음 행으로 넘어감
							N.TEMP.ROW := N.TEMP.ROW + 1 ;
						END
				END
		END
		
	LOG "LP LOG : Common.SlmIntentionThresholdNbest - S.SLOT.TAG = " + S.SLOT.TAG ;
	LOG "LP LOG : Common.SlmIntentionThresholdNbest - S.SLOT.VALUE = " + S.SLOT.VALUE ;
EOP

JINIE Common.SlmSlotThresholdNbest ()

	TEMPORARY NUMBER N.TEMP.ROW := 1 ; ! 행
	TEMPORARY NUMBER N.TEMP.COL := 1 ; ! 열
	TEMPORARY STRING S.NAME.ID.TEMP := "" ;
	TEMPORARY STRING S.NAME.VALUE.TEMP := "" ;
	TEMPORARY STRING S.NAME.TAG.TEMP := "" ;
	TEMPORARY STRING S.NAME.SCORE.TEMP := "" ;
	TEMPORARY STRING S.PHONE.ID.TEMP := "" ;
	TEMPORARY STRING S.PHONE.VALUE.TEMP := "" ;
	TEMPORARY STRING S.PHONE.TAG.TEMP := "" ;
	TEMPORARY STRING S.PHONE.SCORE.TEMP := "" ;
	TEMPORARY NUMBER N.SLOT.SCORE.TEMP := 0 ;
	TEMPORARY NUMBER N.SLOT.SCORE.PRE.TEMP := 0 ;
	
	! INITIALIZE
	S.SLOT.ID.CONTACTNAME := "" ;
	S.SLOT.CONTACTNAME := "" ;
	S.SLOT.TAG.CONTACTNAME := "" ;
	S.SLOT.SCORE.CONTACTNAME := "" ;
	
	WHILE S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] <> "" DO
		BEGIN
			IF ( S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] = "<SLOT_CONTACT_SINGLE>" ) | ( S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] = "<SLOT_CONTACT_FULL_FIRST>" ) |
				( S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] = "<SLOT_CONTACT_REVERSE_LAST>" ) | ( S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] = "<SLOT_PHONETYPE>" ) THEN ! PHONE WHILE, NAME WHILE 따로 만드는거 생각해보기
				BEGIN
					WHILE S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] <> "" DO
						BEGIN
							IF S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] = "<SLOT_CONTACT_SINGLE>" | S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] = "<SLOT_CONTACT_FULL_FIRST>" | S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] = "<SLOT_CONTACT_REVERSE_LAST>" THEN
								BEGIN
									IF S.NAME.VALUE.TEMP = "" THEN ! 1행에서 CONTACTNAME이 아닐 경우
										BEGIN
											S.NAME.VALUE.TEMP := S.SLOT.VALUE[N.TEMP.ROW][N.TEMP.COL] ;
											S.NAME.TAG.TEMP := S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] ;
											S.NAME.SCORE.TEMP := S.SLOT.SCORE[N.TEMP.ROW][N.TEMP.COL] ;
											CALL Common.SetVadNamePatternId (S.NAME.TAG.TEMP, S.NAME.ID.TEMP) ;
											N.SLOT.SCORE.PRE.TEMP ~= S.NAME.SCORE.TEMP ;
										END
										
									N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[N.TEMP.ROW][N.TEMP.COL] ;
									IF N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP THEN
										BEGIN
											S.NAME.VALUE.TEMP := S.SLOT.VALUE[N.TEMP.ROW][N.TEMP.COL] ;
											S.NAME.TAG.TEMP := S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] ;
											S.NAME.SCORE.TEMP := S.SLOT.SCORE[N.TEMP.ROW][N.TEMP.COL] ;
											CALL Common.SetVadNamePatternId (S.NAME.TAG.TEMP, S.NAME.ID.TEMP) ;
											N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
										END
								END
								
							IF S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] = "<SLOT_PHONETYPE>" THEN
								BEGIN
									IF S.PHONE.VALUE.TEMP = "" THEN
										BEGIN
											S.PHONE.VALUE.TEMP := S.SLOT.VALUE[N.TEMP.ROW][N.TEMP.COL] ;
											S.PHONE.TAG.TEMP := S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] ;
											S.PHONE.SCORE.TEMP := S.SLOT.SCORE[N.TEMP.ROW][N.TEMP.COL] ;
											CALL Common.SetVadCategoryTypeId (S.PHONE.VALUE.TEMP, S.PHONE.ID.TEMP) ;
											N.SLOT.SCORE.PRE.TEMP ~= S.PHONE.SCORE.TEMP ;
										END
										
									N.SLOT.SCORE.TEMP ~= S.SLOT.SCORE[N.TEMP.ROW][N.TEMP.COL] ;
									IF N.SLOT.SCORE.TEMP > N.SLOT.SCORE.PRE.TEMP THEN
										BEGIN
											S.PHONE.VALUE.TEMP := S.SLOT.VALUE[N.TEMP.ROW][N.TEMP.COL] ;
											S.PHONE.TAG.TEMP := S.SLOT.TAG[N.TEMP.ROW][N.TEMP.COL] ;
											S.PHONE.SCORE.TEMP := S.SLOT.SCORE[N.TEMP.ROW][N.TEMP.COL] ;
											CALL Common.SetVadCategoryTypeId (S.PHONE.VALUE.TEMP, S.PHONE.ID.TEMP) ;
											N.SLOT.SCORE.PRE.TEMP := N.SLOT.SCORE.TEMP ;
										END
								END
							N.TEMP.COL := N.TEMP.COL + 1 ;
						END
						
					S.SLOT.ID.CONTACTNAME := S.SLOT.ID.CONTACTNAME + S.NAME.ID.TEMP + "\n" ;
					S.SLOT.CONTACTNAME := S.SLOT.CONTACTNAME + S.NAME.VALUE.TEMP + "\n" ;
					S.SLOT.TAG.CONTACTNAME := S.SLOT.TAG.CONTACTNAME + S.NAME.TAG.TEMP + "\n" ;
					S.SLOT.SCORE.CONTACTNAME := S.SLOT.SCORE.CONTACTNAME + S.NAME.SCORE.TEMP + "\n" ;
					
					S.SLOT.ID.PHONETYPE := S.SLOT.ID.PHONETYPE + S.PHONE.ID.TEMP + "\n" ;
					S.SLOT.PHONETYPE := S.SLOT.PHONETYPE + S.PHONE.VALUE.TEMP + "\n" ;
					S.SLOT.TAG.PHONETYPE := S.SLOT.TAG.PHONETYPE + S.PHONE.TAG.TEMP + "\n" ;
					S.SLOT.SCORE.PHONETYPE := S.SLOT.SCORE.PHONETYPE + S.PHONE.SCORE.TEMP + "\n" ;
				END
				
			N.TEMP.ROW := N.TEMP.ROW + 1 ;
			N.TEMP.COL := 1 ;
			S.NAME.VALUE.TEMP := "" ;
			S.NAME.TAG.TEMP := "" ;
			S.NAME.SCORE.TEMP := "" ;
			S.PHONE.VALUE.TEMP := "" ;
			S.PHONE.TAG.TEMP := "" ;
			S.PHONE.SCORE.TEMP := "" ;
		END
		
	LOG "LP LOG : Common.SlmSlotThresholdNbest - S.SLOT.CONTACTNAME = " + S.SLOT.CONTACTNAME ;
	LOG "LP LOG : Common.SlmSlotThresholdNbest - S.SLOT.ID.CONTACTNAME = " + S.SLOT.ID.CONTACTNAME ;
	LOG "LP LOG : Common.SlmSlotThresholdNbest - S.SLOT.TAG.CONTACTNAME = " + S.SLOT.TAG.CONTACTNAME ;
	LOG "LP LOG : Common.SlmSlotThresholdNbest - S.SLOT.PHONETYPE = " + S.SLOT.PHONETYPE ;
EOP

! SLOT Tag를 확인하여 Name Pattern ID를 저장
JINIE Common.SetVadNamePatternId (STRING S.NAME.TAG.IN, STRING S.NAME.ID.OUT)

	TEMPORARY NUMBER N.TEMP := 1 ;
	TEMPORARY STRING S.VAD.NAME.PATTERN.CHECK := "" ;
	
	S.VAD.NAME.PATTERN.CHECK := "\@S_VAD_NAME_PATTERN_SLOT_TAG" ;
	
	WHILE N.TEMP <= 3 DO ! Name Pattern Slot Tag 개수 = 3
		BEGIN
			! SLOT TAG가 NAME 관련 TAG 인지 확인 후 TAG에 맞는 Name Pattern ID 저장
			IF S.NAME.TAG.IN = S.VAD.NAME.PATTERN.CHECK[1][N.TEMP] THEN 
				BEGIN
					IF S.VAD.NAME.PATTERN.CHECK[1][N.TEMP] = "<SLOT_CONTACT_SINGLE>" THEN
						BEGIN ! Slot Value에 매칭되는 ID 전달 불가로 인하여 "LAST ORDER PERSON NAME : 190400"(성 필드만 저장)도 "FIRST PERSON NAME : 190300"로 전달
							S.NAME.ID.OUT := "\@N_TAG_NAME_FIRST_ID" ;
						END
					IF S.VAD.NAME.PATTERN.CHECK[1][N.TEMP] = "<SLOT_CONTACT_FULL_FIRST>" THEN
						BEGIN
							S.NAME.ID.OUT := "\@N_TAG_NAME_FULL_FIRST_ID" ;
						END
					IF S.VAD.NAME.PATTERN.CHECK[1][N.TEMP] = "<SLOT_CONTACT_REVERSE_LAST>" THEN
						BEGIN
							S.NAME.ID.OUT := "\@N_TAG_NAME_REVERSE_LAST_ID" ;
						END
				END
			N.TEMP := N.TEMP + 1 ;
		END
EOP

! SLOT Tag가 <SLOT_PHONETYPE>인 경우, Value를 확인하여 Phone Category ID를 저장
JINIE Common.SetVadCategoryTypeId (STRING S.VAD.CATEGORY.TAG.IN, STRING S.VAD.CATEGORY.ID.OUT)

	TEMPORARY NUMBER N.TEMP := 1 ;
	TEMPORARY STRING S.VAD.CATEGORY.TYPE.CHECK := "" ; ! ENGINE 결과와 PHONE TYPE STRING 비교 하기 위하여 LITERAL TABLE에 저장된 STRING 저장
	
	S.VAD.CATEGORY.TYPE.CHECK := "\@S_VAD_CATEGORY_TYPE_MOBILE" ;
	WHILE N.TEMP <= @N_VAD_CATEGORY_TYPE_MAX_NUM DO
		BEGIN
			IF S.VAD.CATEGORY.TAG.IN = S.VAD.CATEGORY.TYPE.CHECK[1][N.TEMP] THEN
				BEGIN
					S.VAD.CATEGORY.ID.OUT := "\@N_TAG_VAD_MOBILE_ID" ;
				END
			N.TEMP := N.TEMP + 1 ;
		END
		
	N.TEMP := 1 ;
	S.VAD.CATEGORY.TYPE.CHECK := "\@S_VAD_CATEGORY_TYPE_OFFICE" ;
	WHILE N.TEMP <= @N_VAD_CATEGORY_TYPE_MAX_NUM DO
		BEGIN
			IF S.VAD.CATEGORY.TAG.IN = S.VAD.CATEGORY.TYPE.CHECK[1][N.TEMP] THEN
				BEGIN
					S.VAD.CATEGORY.ID.OUT := "\@N_TAG_VAD_OFFICE_ID" ;
				END
			N.TEMP := N.TEMP + 1 ;
		END
		
	N.TEMP := 1 ;
	S.VAD.CATEGORY.TYPE.CHECK := "\@S_VAD_CATEGORY_TYPE_HOME" ;
	WHILE N.TEMP <= @N_VAD_CATEGORY_TYPE_MAX_NUM DO
		BEGIN
			IF S.VAD.CATEGORY.TAG.IN = S.VAD.CATEGORY.TYPE.CHECK[1][N.TEMP] THEN
				BEGIN
					S.VAD.CATEGORY.ID.OUT := "\@N_TAG_VAD_HOME_ID" ;
				END
			N.TEMP := N.TEMP + 1 ;
		END
		
	N.TEMP := 1 ;
	S.VAD.CATEGORY.TYPE.CHECK := "\@S_VAD_CATEGORY_TYPE_OTHER" ;
	WHILE N.TEMP <= @N_VAD_CATEGORY_TYPE_MAX_NUM DO
		BEGIN
			IF S.VAD.CATEGORY.TAG.IN = S.VAD.CATEGORY.TYPE.CHECK[1][N.TEMP] THEN
				BEGIN
					S.VAD.CATEGORY.ID.OUT := "\@N_TAG_VAD_OTHER_ID" ;
				END
			N.TEMP := N.TEMP + 1 ;
		END
EOP

! SERVER INFO 전달
JINIE Common.ExtraInfo ()

	IF $S.STT.RESULT.ONLINE.EXTRAINFO = "" THEN
		BEGIN
			MESSAGE "(INFO_SERVER) \f" + "0" + "\f" + "0" ;
			LOG "LP LOG : Common.ExtraInfo - MESSAGE = (INFO_SERVER) - \f0\f0" ;
		END
	ELSE
		BEGIN
			MESSAGE "(INFO_SERVER) \f" + $S.STT.RESULT.ONLINE.EXTRAINFO ;
			LOG "LP LOG : Common.ExtraInfo - MESSAGE = (INFO_SERVER) - \f" + $S.STT.RESULT.ONLINE.EXTRAINFO ;
		END
EOP

! PARAMETER로 전달받은 값들로 REFERENCE DB 검색 수행
JINIE Common.ReferenceKey (NUMBER N.REF.DB, NUMBER N.REF.ID, STRING S.REF.KEY)
	
	IF $N.INTERRUPT.TYPE = 4 | S.REF.KEY = "" THEN ! INTENTION NOT EXIST
		BEGIN
			LOG "LP LOG : Common.ReferenceKey - Multi-Modal or Reference Key = Null" ;
			$N.REFERENCE.FLAG := @N_FLAG_ON ;
			$N.REFERENCE.DB := N.REF.DB ;
			$N.REFERENCE.ID := 1 ;
			$S.REFERENCE.KEY := $S.RESULT.ID[1][1] ;
		END
	ELSE
		BEGIN
			LOG "LP LOG : Common.ReferenceKey - Recognition " ;
			$N.REFERENCE.FLAG:= @N_FLAG_ON ;
			$N.REFERENCE.DB := N.REF.DB ;
			$N.REFERENCE.ID := N.REF.ID ;
			$S.REFERENCE.KEY := S.REF.KEY ;
		END
	
	LOG "LP LOG : Common.ReferenceKey - $S.REFERENCE.KEY = " + $S.REFERENCE.KEY ;
EOP

! ART 변수에 인식 결과에 대한 ART LOG INTENTION 저장
JINIE Common.ARTIntentionSetting ()

	S.ART.RESULT.STRING := "\@S_TAG_ART_INTENTION_NORMAL" ;
EOP

! 1-BEST에 대한 REFERENCE DB 검색 결과 저장
JINIE Common.ReferenceOneBestResult ()

	TEMPORARY NUMBER N.TEMP.FIRST := 1 ; ! WHILE COUNT
	TEMPORARY STRING S.TEMP.DIALOG := "" ; ! CURRENT DIALOG ID(STRING)
	
	S.TEMP.DIALOG ~= $N.STATUS.DIALOG;
	LOG "LP LOG : Common.ReferenceOneBestResult - $N.STATUS.DIALOG = " + S.TEMP.DIALOG ;
	
	N.RESULT.CONUT.NUM := 1 ; ! 1-Best
	
	S.INNER.LOG.STRING ~= $N.REFERENCE.RESULTS ;
	LOG "LP LOG : Common.ReferenceResult - $N.REFERENCE.RESULTS = " + S.INNER.LOG.STRING + " | $S.REFERENCE.RESULTS = " + $S.REFERENCE.RESULTS ;
	
	! SET REFERENCE DB SEARCH RESULTS
	IF $N.REFERENCE.RESULTS = 1 THEN ! REFERENCE DB SEARCH NUM = 1
		BEGIN
			S.RESULT.CID := $S.REFERENCE.RESULTS[1][1] ;
			S.RESULT.CMD := $S.REFERENCE.RESULTS[1][2] ;
			S.RESULT.DIP := $S.REFERENCE.RESULTS[1][3] ;
			S.RESULT.SCORE := $S.STT.RESULT.SCORE[1][1] ;
			
			S.RESULT.DOMAIN := $S.REFERENCE.RESULTS[1][4] ;
			S.RESULT.EXAMPLE := $S.REFERENCE.RESULTS[1][5] ;
			S.RESULT.INTENTION := $S.REFERENCE.RESULTS[1][6] ;
			
			S.SLOT.FIRST.ID := S.SLOT.FIRST.ID ;
			S.SLOT.FIRST.TAG := $S.REFERENCE.RESULTS[1][7] ;
			S.SLOT.FIRST.VALUE := S.SLOT.FIRST.VALUE ;
			S.SLOT.FIRST.SCORE := S.SLOT.FIRST.SCORE ;
			
			S.SLOT.SECOND.ID := S.SLOT.SECOND.ID ;
			S.SLOT.SECOND.TAG := $S.REFERENCE.RESULTS[1][8] ;
			S.SLOT.SECOND.VALUE := S.SLOT.SECOND.VALUE ;
			S.SLOT.SECOND.SCORE := S.SLOT.SECOND.SCORE ;
			
			S.SLOT.THIRD.ID := S.SLOT.THIRD.ID ;
			S.SLOT.THIRD.TAG := $S.REFERENCE.RESULTS[1][9] ;
			S.SLOT.THIRD.VALUE := S.SLOT.THIRD.VALUE ;
			S.SLOT.THIRD.SCORE := S.SLOT.THIRD.SCORE ;
		END
	ELSE ! REFERENCE DB SEARCH NUM > 1
		BEGIN
			WHILE N.TEMP.FIRST <= $N.REFERENCE.RESULTS DO
				BEGIN
					IF $S.REFERENCE.RESULTS[N.TEMP.FIRST][10] = S.TEMP.DIALOG THEN ! COMPARE CURRENT DIALOG
						BEGIN
							S.RESULT.CID := $S.REFERENCE.RESULTS[N.TEMP.FIRST][1] ;
							S.RESULT.CMD := $S.REFERENCE.RESULTS[N.TEMP.FIRST][2] ;
							S.RESULT.DIP := $S.REFERENCE.RESULTS[N.TEMP.FIRST][3] ;
							S.RESULT.SCORE := $S.STT.RESULT.SCORE[N.REF.NBEST.COUNT][1] ;
							
							S.RESULT.DOMAIN := $S.REFERENCE.RESULTS[N.TEMP.FIRST][4] ;
							S.RESULT.EXAMPLE := $S.REFERENCE.RESULTS[N.TEMP.FIRST][5] ;
							S.RESULT.INTENTION := $S.REFERENCE.RESULTS[N.TEMP.FIRST][6] ;
							
							S.SLOT.FIRST.ID := S.SLOT.FIRST.ID ;
							S.SLOT.FIRST.TAG := $S.REFERENCE.RESULTS[N.TEMP.FIRST][7] ;
							S.SLOT.FIRST.VALUE := S.SLOT.FIRST.VALUE ;
							S.SLOT.FIRST.SCORE := S.SLOT.FIRST.SCORE ;
							
							S.SLOT.SECOND.ID := $S.STT.RESULT.ID[N.REF.NBEST.COUNT][3] ;
							S.SLOT.SECOND.TAG := $S.REFERENCE.RESULTS[N.TEMP.FIRST][8] ;
							S.SLOT.SECOND.VALUE := S.SLOT.SECOND.VALUE ;
							S.SLOT.SECOND.SCORE := S.SLOT.SECOND.SCORE ;
							
							S.SLOT.THIRD.ID := S.SLOT.THIRD.ID ;
							S.SLOT.THIRD.TAG := $S.REFERENCE.RESULTS[N.TEMP.FIRST][9] ;
							S.SLOT.THIRD.VALUE := S.SLOT.THIRD.VALUE ;
							S.SLOT.THIRD.SCORE := S.SLOT.THIRD.SCORE ;
						END
						
					N.TEMP.FIRST := N.TEMP.FIRST + 1 ;
				END
		END
	
	CALL Common.SetActionString () ;
	
	! SET FIX RESULT INFO
	S.RESULT.FIX.CID := S.RESULT.CID ;
	S.RESULT.FIX.CMD := S.RESULT.CMD ;
	S.RESULT.FIX.DIP := S.RESULT.DIP ;
	S.RESULT.FIX.SCORE := S.RESULT.SCORE ;
EOP

! 1-BEST에 대한 REFERENCE DB 검색 결과 저장(POI CATEGORY)
JINIE Common.ReferenceOneBestResultPoiCategory ()
	
	N.RESULT.CONUT.NUM := 1 ;
	
	S.INNER.LOG.STRING ~= $N.REFERENCE.RESULTS ;
	LOG "LP LOG : Common.ReferenceOneBestResultPoiCategory - $N.REFERENCE.RESULTS = " + S.INNER.LOG.STRING + " | $S.REFERENCE.RESULTS = " + $S.REFERENCE.RESULTS ;
	
	IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_FIND_POI" THEN
		BEGIN
			IF $N.STATUS.DIALOG = @N_DIALOG_NAVI_FIND_BIG_CATEGORY THEN
				BEGIN
					S.INNER.TEMP.STRING := "" ;
					S.RESULT.CID := "\@N_TAG_CATEGORY_NAME_BIG_ID" ;
				END
			ELSE
				BEGIN
					IF $N.STATUS.DIALOG = @N_DIALOG_NAVI_FIND_MID_CATEGORY THEN
						BEGIN
							S.INNER.TEMP.STRING := "" ;
							S.RESULT.CID := "\@N_TAG_CATEGORY_NAME_MID_ID" ;
						END
					ELSE
						BEGIN
							S.INNER.TEMP.STRING := "\@S_TAG_FIND_CATEGORY_STRING" ;
							S.RESULT.CID := "\@N_TAG_FIND_CATEGORY_ID" ;
						END
				END
		END
		
	! MULTI-MODAL
	IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_CATEGORY_NAME_BIG" THEN
		BEGIN
			S.INNER.TEMP.STRING := "" ;
			S.RESULT.CID := "\@N_TAG_CATEGORY_NAME_BIG_ID" ;
		END
		
	IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_CATEGORY_NAME_MID" THEN
		BEGIN
			S.INNER.TEMP.STRING := "" ;
			S.RESULT.CID := "\@N_TAG_CATEGORY_NAME_MID_ID" ;
		END
		
	! SET REFERENCE DB SEARCH RESULTS
	S.RESULT.CID := S.RESULT.CID ;
	S.RESULT.CMD := S.INNER.TEMP.STRING + $S.REFERENCE.RESULTS[1][2] ;
	S.RESULT.DIP := S.INNER.TEMP.STRING + $S.REFERENCE.RESULTS[1][3] ;
	S.RESULT.SCORE := $S.STT.RESULT.SCORE[1][1] ;
	
	S.RESULT.DOMAIN := $S.REFERENCE.RESULTS[1][4] ;
	S.RESULT.EXAMPLE := $S.REFERENCE.RESULTS[1][5] ;
	S.RESULT.INTENTION := $S.REFERENCE.RESULTS[1][6] ;
	
	S.SLOT.FIRST.ID    := $S.REFERENCE.RESULTS[1][1] ;
	S.SLOT.FIRST.TAG   := $S.REFERENCE.RESULTS[1][7] ;
	S.SLOT.FIRST.VALUE := $S.REFERENCE.RESULTS[1][3] ;
	S.SLOT.FIRST.SCORE := $S.STT.RESULT.SCORE[1][1] ;
	
	S.SLOT.SECOND.ID := S.SLOT.FIRST.ID ;
	S.SLOT.SECOND.TAG := "<SearchKeyword>" ;
	S.SLOT.SECOND.VALUE := "" ;
	S.SLOT.SECOND.SCORE := S.SLOT.FIRST.SCORE ;
	
	S.SLOT.THIRD.ID := "" ;
	S.SLOT.THIRD.TAG := "_" ;
	S.SLOT.THIRD.VALUE := "" ;
	S.SLOT.THIRD.SCORE := "" ;
	
	IF S.RESULT.CID = "\@N_TAG_CATEGORY_NAME_BIG_ID" THEN
		BEGIN
			S.INNER.NAVI.CATEGORY.ID := S.SLOT.FIRST.ID ;
		END
		
	CALL Common.SetActionString () ;
	
	! SET FIX RESULT INFO
	S.RESULT.FIX.CID := S.RESULT.CID ;
	S.RESULT.FIX.CMD := S.RESULT.CMD ;
	S.RESULT.FIX.DIP := S.RESULT.DIP ;
	S.RESULT.FIX.SCORE := S.RESULT.SCORE ;
EOP

! N-BEST에 대한 REFERENCE DB 검색 결과 저장(대용량 Address)
JINIE Common.ReferenceResultAddress ()
	
	S.INNER.LOG.STRING ~= $N.REFERENCE.RESULTS ;
	LOG "LP LOG : Common.ReferenceResultAddress - $N.REFERENCE.RESULTS = " + S.INNER.LOG.STRING + " | $S.REFERENCE.RESULTS = " + $S.REFERENCE.RESULTS ;
	
	S.RESULT.CID := $S.REFERENCE.RESULTS[1][1] ;
	S.RESULT.CMD := S.INNER.SEARCH.STRING ; ! COMMAND
	S.RESULT.DIP := S.INNER.DISPLAY.STRING ; ! SCREEN_TEXT
	S.RESULT.SCORE := $S.STT.RESULT.SCORE[N.INNER.ROW] ; ! SCORE
	
	S.RESULT.DOMAIN := $S.REFERENCE.RESULTS[1][4] ;
	S.RESULT.EXAMPLE := $S.REFERENCE.RESULTS[1][5] ;
	S.RESULT.INTENTION := $S.REFERENCE.RESULTS[1][6] ;
	
	S.SLOT.FIRST.ID := S.RESULT.CID ;
	S.SLOT.FIRST.TAG := $S.REFERENCE.RESULTS[1][7] ;
	S.SLOT.FIRST.VALUE := S.INNER.DISPLAY.STRING ;
	S.SLOT.FIRST.SCORE := S.RESULT.SCORE ;
	
	S.SLOT.SECOND.ID := S.RESULT.CID ;
	S.SLOT.SECOND.TAG := $S.REFERENCE.RESULTS[1][8] ;
	S.SLOT.SECOND.VALUE := S.INNER.SEARCH.STRING ;
	S.SLOT.SECOND.SCORE := S.RESULT.SCORE ;
			
	IF N.INNER.ROW = 1 THEN ! 첫 번째 내용 저장
		BEGIN
			! SET FIX RESULT INFO
			S.RESULT.FIX.CID := S.RESULT.CID ;
			S.RESULT.FIX.CMD := S.RESULT.CMD ;
			S.RESULT.FIX.DIP := S.RESULT.DIP ;
			S.RESULT.FIX.SCORE := S.RESULT.SCORE ;
		END
	ELSE
		BEGIN
			! 중복 체크
			N.INNER.DUPLICATION.COUNT := N.INNER.ROW - 1 ; ! 현재 Slot String과 이전에 저장 된 Slot String과 비교하기 위하여 N.TEMP - 1 저장
			
			WHILE 1 <= N.INNER.DUPLICATION.COUNT DO ! 첫 번째 저장 내용 까지 확인
				BEGIN
					IF S.INNER.SEARCH.STRING = S.ACTION.STRING[N.INNER.DUPLICATION.COUNT][10] THEN ! 중복 확인
						BEGIN
							N.INNER.DUPLICATION.FLAG := 1 ; ! 중복 시 Flag 값 저장
						END
					N.INNER.DUPLICATION.COUNT := N.INNER.DUPLICATION.COUNT - 1 ; ! 다음 확인을 위하여 - 1
				END
		END
		
	IF N.INNER.DUPLICATION.FLAG = 0 & N.STORE.NBEST <= 3 THEN ! 중복 x & 4개 이하 일 때
		BEGIN
			CALL Common.SetActionString () ;
			
			N.STORE.NBEST := N.STORE.NBEST + 1 ;
		END
		
	IF N.STORE.NBEST = 4 THEN
		BEGIN
			N.INNER.ROW := $N.RESULT.RESULTS + 1 ; ! 종료 조건
		END
		
	N.RESULT.CONUT.NUM := N.STORE.NBEST ; ! N-best
	
	S.INNER.LOG.STRING ~= N.STORE.NBEST ;
	LOG "LP LOG : Common.ReferenceResultAddress - N.STORE.NBEST = " + S.INNER.LOG.STRING ;
EOP

! SLOT 정보에 대한 예외 처리 수행 및 포맷에 맞게 Action String 저장
JINIE Common.SetActionString ()
	
	! CHECK EMPTY SLOT
	IF S.SLOT.FIRST.TAG = "_" THEN
		BEGIN
			S.SLOT.FIRST.ID := "" ;
			S.SLOT.FIRST.TAG := "" ;
			S.SLOT.FIRST.VALUE := "" ;
			S.SLOT.FIRST.SCORE := "" ;
		END
	IF S.SLOT.SECOND.TAG = "_" THEN
		BEGIN
			S.SLOT.SECOND.ID := "" ;
			S.SLOT.SECOND.TAG := "" ;
			S.SLOT.SECOND.VALUE := "" ;
			S.SLOT.SECOND.SCORE := "" ;
		END
	IF S.SLOT.THIRD.TAG = "_" THEN
		BEGIN
			S.SLOT.THIRD.ID := "" ;
			S.SLOT.THIRD.TAG := "" ;
			S.SLOT.THIRD.VALUE := "" ;
			S.SLOT.THIRD.SCORE := "" ;
		END
		
	! SLOT INFO EXCEPTION
	IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_NAME" THEN ! MULTI-MODAL
		BEGIN
			S.RESULT.CMD := S.BT.NAME.SELECT ; ! 선택된 이름 전달
			S.SLOT.FIRST.ID := "\@N_TAG_NAME_ID" ; ! Slot1 ID : 190000
			S.SLOT.FIRST.VALUE := S.BT.NAME.SELECT ; ! 선택된 이름 전달
		END
		
	IF S.RESULT.CID = "\@N_TAG_MANUAL_VAD_MOBILE_ID" | S.RESULT.CID = "\@N_TAG_MANUAL_VAD_OFFICE_ID" |
	S.RESULT.CID = "\@N_TAG_MANUAL_VAD_HOME_ID" | S.RESULT.CID = "\@N_TAG_MANUAL_VAD_OTHER_ID" THEN
		BEGIN
			S.SLOT.FIRST.ID := S.RESULT.CID ;
			S.SLOT.FIRST.VALUE := S.BT.NAME.SELECT ; ! 선택된 이름 전달
		END
		
	IF S.RESULT.CID = "\@N_TAG_FM_FREQUENCY_ID" | S.RESULT.CID = "\@N_TAG_FM_FREQ_SLOT_ID" |
		S.RESULT.CID = "\@N_TAG_AM_FREQUENCY_ID" | S.RESULT.CID = "\@N_TAG_AM_FREQ_SLOT_ID" THEN
		BEGIN
			S.SLOT.FIRST.ID := S.SLOT.ID ;
			S.SLOT.FIRST.VALUE := S.SLOT.RESULT ;
		END
		
	IF S.RESULT.CID = "\@N_TAG_FIND_CATEGORY_ID" | S.RESULT.CID = "\@N_TAG_CATEGORY_NAME_BIG_ID" | S.RESULT.CID = "\@N_TAG_CATEGORY_NAME_MID_ID" THEN
		BEGIN
			CALL LpProc.CategoryGenreCode () ;
			S.SLOT.SECOND.VALUE := S.GENRE.CODE ; ! CATEGORY GENRE CODE 전달 처리
		END
		
	IF S.RESULT.CID = "\@N_TAG_PLAY_TRACK_NUMBER_ID" | S.RESULT.CID = "\@N_TAG_PRESET_NUMBER_ID" |
		S.RESULT.CID = "\@N_TAG_LINE_NUMBER_ID" | S.RESULT.CID = "\@N_TAG_NAVI_LINE_NUMBER_ID" THEN
		BEGIN
			IF $N.INTERRUPT.TYPE = 4 THEN
				BEGIN
					S.SLOT.FIRST.VALUE := $S.RESULT.ID[1][2] ;
				END
				
			S.SLOT.FIRST.ID := S.SLOT.FIRST.VALUE ; ! SLOT ID 전달 처리 : 트랙 1, 1번 방송, 목록 1
		END
	
	IF $S.STT.RESULT.SLOT[1][1] = "<SLOT_VAD_NUM_SLOT>" THEN
		BEGIN
			IF S.RESULT.CID = "\@N_TAG_VAD_NUMBER_ID" THEN ! DIAL <SLOT_VAD_NUM>
				BEGIN
					S.SLOT.FIRST.ID := "\@N_TAG_VAD_NUMBER_ID" ;
					S.SLOT.FIRST.VALUE := S.SLOT.RESULT ;
				END
				
			IF S.RESULT.CID = "\@N_TAG_VAD_NUM_SLOT_ID" THEN ! <SLOT_VAD_NUM>
				BEGIN
					S.SLOT.FIRST.ID := "\@N_TAG_VAD_NUM_SLOT_ID" ;
					S.SLOT.FIRST.VALUE := S.SLOT.RESULT ;
				END
		END
		
	! <STATE_NAME>
	IF S.SLOT.FIRST.TAG = "<SLOT_STATE_NAME>" THEN
		BEGIN
			S.SLOT.FIRST.ID := $S.REFERENCE.RESULTS[1][1] ; ! 634001
			S.SLOT.FIRST.VALUE := $S.REFERENCE.RESULTS[1][2] ; ! Alabama
		END

	! <CITY><HOUSE_NUMBER><STREET>, <CITY><STREET>
	IF $S.RULE.LEXEMES[1][2] = "\@N_LEXEME_STREET_NAME" THEN
		BEGIN
			IF N.DIALOG = @N_DIALOG_NAVI_VDE_LOCATION | $N.STATUS.DIALOG = @N_DIALOG_NAVI_VDE_STREETCITY_STEP THEN
				BEGIN
					S.SLOT.FIRST.VALUE := S.INNER.DISPLAY.STRING ; ! Main Strret New York
					S.SLOT.SECOND.VALUE := S.INNER.SEARCH.STRING ; ! Main Strret_New York
				END
		END
		
	! <HOUSE_NUMBER>
	IF $S.STT.RESULT.SLOT[1][1] = "<SLOT_HOUSE_NUMBER>" & $N.STATUS.DIALOG = @N_DIALOG_NAVI_VDE_HOUSE_NUMBER_STEP THEN
		BEGIN
			S.SLOT.FIRST.VALUE := S.INNER.DISPLAY.STRING ; ! 100
		END
		
	! SET LINE FEED
	IF S.SLOT.FIRST.TAG = "" THEN ! SLOT not exist
		BEGIN
			S.ACTION.STRING := S.ACTION.STRING + S.RESULT.DOMAIN + "\f" + S.RESULT.EXAMPLE + "\f" + S.RESULT.INTENTION + "\n" ;
		END
	ELSE
		BEGIN
			IF S.SLOT.SECOND.TAG = "" THEN ! SLOT 1 exist
				BEGIN
					S.ACTION.STRING := S.ACTION.STRING + S.RESULT.DOMAIN + "\f" + S.RESULT.EXAMPLE + "\f" + S.RESULT.INTENTION + "\f" +
						S.SLOT.FIRST.ID + "\f" + S.SLOT.FIRST.TAG + "\f" + S.SLOT.FIRST.VALUE + "\f" + S.SLOT.FIRST.SCORE + "\n" ;
				END
			ELSE
				BEGIN
					IF S.SLOT.THIRD.TAG = "" THEN ! SLOT 1,2 exist
						BEGIN
							S.ACTION.STRING := S.ACTION.STRING + S.RESULT.DOMAIN + "\f" + S.RESULT.EXAMPLE + "\f" + S.RESULT.INTENTION + "\f" +
								S.SLOT.FIRST.ID + "\f" + S.SLOT.FIRST.TAG + "\f" + S.SLOT.FIRST.VALUE + "\f" + S.SLOT.FIRST.SCORE + "\f" +
								S.SLOT.SECOND.ID + "\f" + S.SLOT.SECOND.TAG + "\f" + S.SLOT.SECOND.VALUE + "\f" + S.SLOT.SECOND.SCORE + "\n" ;
						END
					ELSE ! SLOT 1,2,3 exist
						BEGIN
							S.ACTION.STRING := S.ACTION.STRING + S.RESULT.DOMAIN + "\f" + S.RESULT.EXAMPLE + "\f" + S.RESULT.INTENTION + "\f" +
								S.SLOT.FIRST.ID + "\f" + S.SLOT.FIRST.TAG + "\f" + S.SLOT.FIRST.VALUE + "\f" + S.SLOT.FIRST.SCORE + "\f" +
								S.SLOT.SECOND.ID + "\f" + S.SLOT.SECOND.TAG + "\f" + S.SLOT.SECOND.VALUE + "\f" + S.SLOT.SECOND.SCORE + "\f" +
								S.SLOT.THIRD.ID + "\f" + S.SLOT.THIRD.TAG + "\f" + S.SLOT.THIRD.VALUE + "\f" + S.SLOT.THIRD.SCORE + "\n" ;
						END
				END
		END
EOP

! 상단 문구 예외 처리 수행 및 대표 Command에 대한 Action Value 저장
JINIE Common.SetActionValue ()

	! FIX RESULT N-BEST COUNT SAVED
	S.RESULT.FIX.NBEST ~= N.RESULT.CONUT.NUM ;
	
	! S.RESULT.FIX.DIP EXCEPTION
	IF S.RESULT.FIX.CID = "\@N_TAG_FM_FREQUENCY_ID" | S.RESULT.FIX.CID = "\@N_TAG_FM_FREQ_SLOT_ID" |
	S.RESULT.FIX.CID = "\@N_TAG_AM_FREQUENCY_ID" | S.RESULT.FIX.CID = "\@N_TAG_AM_FREQ_SLOT_ID" THEN
		BEGIN
			S.RESULT.FIX.DIP := S.SLOT.RESULT + " " + S.RESULT.FIX.DIP ; ! 상단문구 전달 처리 : 89.1 FM, 560 AM
		END
		
	IF S.RESULT.FIX.CID = "\@N_TAG_PLAY_TRACK_NUMBER_ID" | S.RESULT.FIX.CID = "\@N_TAG_LINE_NUMBER_ID" |
		S.RESULT.FIX.CID = "\@N_TAG_NAVI_LINE_NUMBER_ID" | S.RESULT.FIX.CID = "\@N_TAG_PRESET_NUMBER_ID" THEN
		BEGIN
			S.RESULT.FIX.DIP := S.RESULT.FIX.DIP + " " + S.SLOT.FIRST.VALUE ; ! 상단문구 전달 처리 : 트랙 1, 목록 1, 저장방송 1
		END
		
	IF S.RESULT.FIX.CID = "\@N_TAG_VAD_NUMBER_ID" | S.RESULT.FIX.CID = "\@N_TAG_VAD_NUM_SLOT_ID" THEN ! DIAL <SLOT_VAD_NUM>, <SLOT_VAD_NUM>
		BEGIN
			IF $N.STATUS.DIALOG = @N_DIALOG_MAINMENU | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_PHONE THEN
				BEGIN
					S.RESULT.FIX.CMD := "\@S_TAG_VAD_NUMBER_STRING" + S.SLOT.RESULT ;
					S.RESULT.FIX.DIP := "\@S_TAG_VAD_NUMBER_STRING" + S.SLOT.RESULT ;
				END
			ELSE
				BEGIN
					S.RESULT.FIX.CMD := S.SLOT.RESULT ;
					S.RESULT.FIX.DIP := S.SLOT.RESULT ;
				END
		END
		
	IF S.RESULT.FIX.CID = "\@N_TAG_FIND_CATEGORY_ID" THEN ! Find <Category>
		BEGIN
			S.RESULT.FIX.CID := "\@N_TAG_FIND_CATEGORY_ID" ;
			S.RESULT.FIX.DIP := "\@S_TAG_FIND_CATEGORY_STRING" + S.SLOT.POI.CATEGORY ;
		END
		
	IF S.SLOT.FIRST.TAG = "<SLOT_STATE_NAME>" THEN ! Find<STATE_NAME>
		BEGIN
			IF $N.STATUS.DIALOG = @N_DIALOG_MAINMENU | $N.STATUS.DIALOG = @N_DIALOG_MAINMENU_HELP_NAVIGATION THEN
				BEGIN
					! STATE 전치사 처리
					IF S.SLOT.FIRST.ID = "\@N_TAG_AC_ID" | S.SLOT.FIRST.ID = "\@N_TAG_AP_ID" | S.SLOT.FIRST.ID = "\@N_TAG_S_AM_ID" | S.SLOT.FIRST.ID = "\@N_TAG_CE_ID" |
					S.SLOT.FIRST.ID = "\@N_TAG_DF_ID" | S.SLOT.FIRST.ID = "\@N_TAG_ES_ID" | S.SLOT.FIRST.ID = "\@N_TAG_MA_ID" | S.SLOT.FIRST.ID = "\@N_TAG_PR_ID" |
					S.SLOT.FIRST.ID = "\@N_TAG_PA_ID" | S.SLOT.FIRST.ID = "\@N_TAG_PI_ID" | S.SLOT.FIRST.ID = "\@N_TAG_RN_ID" | S.SLOT.FIRST.ID = "\@N_TAG_RS_ID" |
					S.SLOT.FIRST.ID = "\@N_TAG_RJ_ID" THEN
						BEGIN
							S.INNER.TEMP.STRING := "\@S_TAG_FIND_ADDRESS_STATE_A_STRING" ; ! Achar endereço no
						END
					ELSE
						BEGIN
							IF S.SLOT.FIRST.ID = "\@N_TAG_BA_ID" | S.SLOT.FIRST.ID = "\@N_TAG_PB_ID" THEN
								BEGIN
									S.INNER.TEMP.STRING := "\@S_TAG_FIND_ADDRESS_STATE_B_STRING" ; ! Achar endereço na
								END
							ELSE
								BEGIN
									S.INNER.TEMP.STRING := "\@S_TAG_FIND_ADDRESS_STATE_STRING" ; ! Achar endereço em
								END
						END
				
					S.RESULT.FIX.CID := "\@N_TAG_FIND_ADDRESS_STATE_ID" ;
					S.RESULT.FIX.CMD := S.INNER.TEMP.STRING + S.SLOT.FIRST.VALUE ; ! Find address in New York
					S.RESULT.FIX.DIP := S.INNER.TEMP.STRING + S.SLOT.FIRST.VALUE ;
				END
		END
		
	IF S.SLOT.FIRST.TAG = "<SLOT_HOUSE_NUMBER>" & $N.STATUS.DIALOG = @N_DIALOG_NAVI_VDE_HOUSE_NUMBER_STEP THEN ! <HOUSE_NUMBER>
		BEGIN
			S.RESULT.FIX.CMD := S.INNER.HOUSENUMBER.STRING ;
			S.RESULT.FIX.DIP := S.INNER.HOUSENUMBER.STRING ;
		END
		
	! SET ACTION VALUE
	$S.ACTION.VALUE := S.RESULT.FIX.CID + "\f" + S.RESULT.FIX.CMD + "\f" + S.RESULT.FIX.DIP + "\f" + S.RESULT.FIX.SCORE + "\f" + S.RESULT.FIX.NBEST ;
	
	CALL Common.SendActionResult () ;
	
	! REFERENCE KEY INITIALIZE
	S.REF.KEY := "" ;
EOP

! ACTION VALUE, ACTION STRING 전달
JINIE Common.SendActionResult ()

	LOG "LP LOG : Common.SendActionResult - $S.ACTION.VALUE = " + $S.ACTION.VALUE ;
	LOG "LP LOG : Common.SendActionResult - S.ACTION.STRING = " + S.ACTION.STRING ;
	
	S.INNER.LOG.STRING ~= $N.ABSOLUTE.RESULT.VALUE ;
	LOG "LP LOG : Common.SendActionResult - $N.ABSOLUTE.RESULT.VALUE = " + S.INNER.LOG.STRING ;
	
	IF $N.ABSOLUTE.RESULT.VALUE = @N_RESULT_EMBEDDED THEN
		BEGIN
			MESSAGE "(RESULT_EMBEDDED) \f" + $S.ACTION.VALUE + "\f" + S.ACTION.STRING ;
			MESSAGE "(RESULT_MERGE_EMBEDDED) \f" + $S.ACTION.VALUE + "\f"+ S.ACTION.STRING ;
		END
	ELSE
		BEGIN
			MESSAGE "(RESULT_SERVER) \f" + $S.ACTION.VALUE + "\f" + S.ACTION.STRING ;
			MESSAGE "(RESULT_MERGE_SERVER) \f" + $S.ACTION.VALUE + "\f" + S.ACTION.STRING;
		END
EOP

! 시나리오 처리를 위하여 이전의 RULE TAG를 저장
JINIE Common.SetPreRuleTag ()

	IF S.RESULT.FIX.CID = "\@N_TAG_PHONE_CALL_ID" | S.RESULT.FIX.CID = "\@N_TAG_NAME_ID" | S.RESULT.FIX.CID = "\@N_TAG_VAD_CALL_ID" |
		S.RESULT.FIX.CID = "\@N_TAG_FIND_ADDRESS_ID" | S.RESULT.FIX.CID = "\@N_TAG_FIND_ADDRESS_STATE_ID" | S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_POINT_ID" | 
		S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_DESTINATION_ID" | S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_SEARCH_ID" | S.RESULT.FIX.CID = "\@N_TAG_PREVIOUS_START_ID" |
		S.RESULT.FIX.CID = "\@N_TAG_EMERGENCY_SERVICES_ID" | S.RESULT.FIX.CID = "\@N_TAG_POLICE_STATION_ID" | S.RESULT.FIX.CID = "\@N_TAG_HOSPITAL_ID" | 
		S.RESULT.FIX.CID = "\@N_TAG_DEALERSHIP_ID" | S.RESULT.FIX.CID = "\@N_TAG_ROAD_ASSISTANCE_ID" | S.RESULT.FIX.CID = "\@N_TAG_GO_HOME_ID" | S.RESULT.FIX.CID = "\@N_TAG_GO_TO_OFFICE_ID" | 
		S.RESULT.FIX.CID = "\@N_TAG_FIND_POI_ID" | S.RESULT.FIX.CID = "\@N_TAG_FIND_CATEGORY_ID" | S.RESULT.FIX.CID = "\@N_TAG_CANCEL_ROUTE_ID" THEN
		BEGIN
			S.PRE.RESULT.FIX.CID := S.RESULT.FIX.CID ;
		END
	ELSE
		BEGIN
			S.PRE.RESULT.FIX.CID := S.PRE.RESULT.FIX.CID ;
		END
	
	LOG "LP LOG : Common.SetPreRuleTag - S.RESULT.FIX.CID = " + S.RESULT.FIX.CID ;
	LOG "LP LOG : Common.SetPreRuleTag - S.PRE.RESULT.FIX.CID = " + S.PRE.RESULT.FIX.CID ;
EOP

! POST PROCESSOR에서 사용하는 SYSTEM CALL 변수 호출
JINIE Common.SystemCallPost (NUMBER N.CID)

	S.INNER.LOG.STRING ~= N.CID ;
	LOG "LP LOG : Common.SystemCallPost - N.CID = " + S.INNER.LOG.STRING ;
	
	! PHONE
	IF N.CID = @N_TAG_PHONE_CALL_ID THEN ! LpProc.PhoneCall ()
		BEGIN
			MESSAGE "(VH) \fN.BT.DEVICE.PAIRED\fN.BT.DEVICE.CONNECT\fN.BT.PHONE.CONNECT\fN.BT.CONTACT.NUMBER\fN.BT.DP.BUSY\fN.BT.DP.NUMBER\fN.BT.PHONEBOOK.DOWNLOADABLE\fN.SYSTEM.DRIVING" ;
		END
		
	IF N.CID = @N_TAG_VAD_CALL_ID THEN ! LpProc.VadCall ()
		BEGIN
			MESSAGE "(VH) \fN.GLOBAL.NBEST.RESULT.NUM\fN.BT.CATEGORY.NUM\fN.BT.SELECT.CATEGORY.EXIST\fN.BT.CATEGORY.NUMBER.NUM\fN.BT.NAME.TYPE" ; !S.BT.NAME.SELECT\fS.BT.NAME.TTS" 호출 안하는 이유
		END
		
	IF N.CID = @N_TAG_NAME_ID THEN ! LpProc.Name ()
		BEGIN
			IF $N.STATUS.PROCESS = @N_PROCESS_RULE & $N.INTERRUPT.TYPE = 4 THEN
				BEGIN
					MESSAGE "(VH) \fS.BT.NAME.SELECT\fS.BT.NAME.TTS" ;
				END
			IF $N.STATUS.PROCESS = @N_PROCESS_RESULT THEN
				BEGIN
					MESSAGE "(VH) \fN.GLOBAL.NBEST.RESULT.NUM\fN.BT.CATEGORY.NUM\fS.BT.NAME.SELECT\fS.BT.NAME.TTS" ;
				END
		END
		
	IF N.CID = @N_TAG_PHONE_DIAL_NUMBER_ID | N.CID = @N_TAG_NAVI_DIAL_ID THEN 
		BEGIN ! LpProc.PhoneDialNumber (), LpProc.NaviDial ()
			MESSAGE "(VH) \fN.BT.DEVICE.PAIRED\fN.BT.DEVICE.CONNECT\fN.BT.PHONE.CONNECT\fN.SYSTEM.DRIVING" ;
		END
		
	IF N.CID = @N_TAG_PHONE_MOBILE_ID | N.CID = @N_TAG_PHONE_HOME_ID | N.CID = @N_TAG_PHONE_OFFICE_ID | N.CID = @N_TAG_PHONE_OTHER_ID THEN
		BEGIN ! LpProc.PhoneMobile (), LpProc.PhoneHome (), LpProc.PhoneOffice (), LpProc.PhoneOther ()
			MESSAGE "(VH) \fN.BT.SELECT.CATEGORY.EXIST\fS.BT.NAME.SELECT\fS.BT.NAME.TTS" ;
		END
		
	IF N.CID = @N_TAG_MANUAL_VAD_MOBILE_ID | N.CID = @N_TAG_MANUAL_VAD_HOME_ID | N.CID = @N_TAG_MANUAL_VAD_OFFICE_ID | N.CID = @N_TAG_MANUAL_VAD_OTHER_ID THEN
		BEGIN ! LpProc.ManualVadMobile (), LpProc.ManualVadHome (), LpProc.ManualVadOffice (), LpProc.ManualVadOther ()
			MESSAGE "(VH) \fN.BT.SELECT.CATEGORY.EXIST" ;
		END
		
	IF N.CID = @N_TAG_VAD_NUMBER_ID THEN ! LpProc.VadNumber ()
		BEGIN
			MESSAGE "(VH) \fN.BT.DEVICE.PAIRED\fN.BT.DEVICE.CONNECT\fN.BT.PHONE.CONNECT\fN.SYSTEM.DRIVING\fS.BT.DIALNUMBER.TTSSTRING" ;
		END
		
	IF N.CID = @N_TAG_PHONE_CORRECTION_ID THEN ! LpProc.PhoneCorrection ()
		BEGIN
			MESSAGE "(VH) \fN.BT.DIALNUMBER.EXIST\fS.BT.DIALNUMBER.TTSSTRING" ;
		END
		
	! RADIO
	IF N.CID = @N_TAG_RADIO_ID THEN ! LpProc.Radio ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.RADIO.LAST.MODE" ;
		END
		
	IF N.CID = @N_TAG_PRESET_NUMBER_ID THEN ! LpProc.PresetNumber ()
		BEGIN
			MESSAGE "(VH) \fN.AV.CONDITION\fN.GLOBAL.CONDITION\fN.AVN.PRESET.STORED.AVAILABLE\fN.AVN.PRESET.STATE\fN.AVN.SELECT.SLOT\fS.AVN.SELECT.SLOT" ;
		END
		
	IF N.CID = @N_TAG_MANUAL_PRESET_ID THEN ! LpProc.ManualPreset ()
		BEGIN
			MESSAGE "(VH) \f\fN.AVN.PRESET.STORED.AVAILABLE" ;
		END
		
	! MEDIA
	IF N.CID = @N_TAG_MUSIC_ID THEN ! LpProc.Music ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.MEDIA.FILE.NUM\fN.AVN.MEDIA.LAST.MODE\fN.AVN.AUX.CONNECT\fN.BT.DEVICE.CONNECT\fN.AVN.ATDP.AVAILABLE\fN.AVN.IPOD.ON.USB.CHECK\fN.AVN.PANDORA.AVAILABLE" ;
		END
		
	IF N.CID = @N_TAG_CD_ID THEN ! LpProc.Cd ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.DISC.INSERT\fN.AVN.CD.LOADING\fN.AVN.TRACK.NUMBER" ;
		END
		
	IF N.CID = @N_TAG_IPOD_ID | N.CID = @N_TAG_USB_ID THEN ! LpProc.IPod (), LpProc.Usb ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.IPOD.AVAILABLE\fN.AVN.IPOD.LOADING\fN.AVN.USB.AVAILABLE\fN.AVN.USB.LOADING\fN.AVN.USB.MUSIC.AVAILABLE" ;
		END
		
	IF N.CID = @N_TAG_BT_AUDIO_ID THEN ! LpProc.BtAudio ()
		BEGIN
			MESSAGE "(VH) \fN.BT.DEVICE.PAIRED\fN.BT.DEVICE.CONNECT\fN.AVN.ATDP.AVAILABLE\fN.AVN.IPOD.ON.USB.CHECK\fN.SYSTEM.DRIVING" ;
		END
		
	IF N.CID = @N_TAG_AUX_ID THEN ! LpProc.Aux ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.AUX.CONNECT" ;
		END
		
	IF N.CID = @N_TAG_MY_MUSIC_ID THEN ! LpProc.MyMusic ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.MYMUSIC.STATE\fN.AVN.MYMUSIC.MUSIC.AVAILABLE" ;
		END
		
	IF N.CID = @N_TAG_PLAY_ID | N.CID = @N_TAG_PAUSE_ID | N.CID = @N_TAG_SHUFFLE_ID |
		N.CID = @N_TAG_SHUFFLE_OFF_ID | N.CID = @N_TAG_REPEAT_ID | N.CID = @N_TAG_REPEAT_OFF_ID THEN
		BEGIN ! LpProc.Play (), LpProc.Pause (), LpProc.Shuffle (), LpProc.ShuffleOff (), LpProc.Repeat (), LpProc.RepeatOff ()
			MESSAGE "(VH) \fN.AV.CONDITION\fN.GLOBAL.CONDITION\fN.AVN.MODE\fN.AVN.IPOD.MUSIC.AVAILABLE" ;
		END
		
	IF N.CID = @N_TAG_PLAY_TRACK_NUMBER_ID THEN ! LpProc.PlayTrackNumber ()
		BEGIN
			MESSAGE "(VH) \fN.AV.CONDITION\fN.GLOBAL.CONDITION\fN.AVN.TRACK.NUMBER" ;
		END
		
	IF N.CID = @N_TAG_VOICE_MEMO_ID THEN ! LpProc.VoiceMemo ()
		BEGIN
			MESSAGE "(VH) \fN.AVN.VOICEMEMO.AVAILABLE" ;
		END
		
	! NAVI
	IF N.CID = @N_TAG_SHOW_MAP_ID | N.CID = @N_TAG_ZOOM_OUT_ID | N.CID = @N_TAG_ZOOM_IN_ID |
		N.CID = @N_TAG_TRAFFIC_INFO_ID | N.CID = @N_TAG_TURN_GUIDANCE_ON_ID | N.CID = @N_TAG_TURN_GUIDANCE_OFF_ID THEN 
		BEGIN ! LpProc.ShowMap (), LpProc.ZoomOut (), LpProc.ZoomIn (), LpProc.TrafficInfo (), LpProc.TurnGuidanceOn (), LpProc.TurnGuidanceOff ()
			MESSAGE "(VH) \fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_FIND_ADDRESS_ID THEN ! LpProc.FindAddress ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.CURRENT.REGION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_FIND_FULL_ADDRESS_ID THEN ! LpProc.FindFullAddress ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ADDRESS.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.HOUSENUMBER.EXIST" ;
		END
		
	IF N.CID = @N_TAG_FIND_ADDRESS_STATE_ID THEN ! LpProc.FindAddressState ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_USER_STREET_CITY_ID THEN ! LpProc.UserStreetCity ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ADDRESS.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.HOUSENUMBER.RANGE.EXIST" ;
		END
		
	IF N.CID = @N_TAG_USER_HOUSE_NUMBER_ID THEN ! LpProc.UserHouseNumber ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.HOUSENUMBER.EXIST\fN.NAVI.DESTINATION.SETTING" ;
		END
		
	IF N.CID = @N_TAG_ADDRESS_STEP_EDIT_ID THEN ! LpProc.AddressStepEdit ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ADDRESS.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.HOUSENUMBER.RANGE.EXIST" ;
		END
		
	IF N.CID = @N_TAG_FIND_POI_ID THEN ! LpProc.FindPOI ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_FIND_CATEGORY_ID THEN ! LpProc.FindCategory ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.DESTINATION.SETTING\fN.NAVI.FIND.POSITION.NUM\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_CATEGORY_NAME_MID_ID THEN ! LpProc.CategoryNameMid ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.DESTINATION.SETTING\fN.NAVI.FIND.POSITION.NUM\fN.NAVI.PHONE.NUMBER.EXIST" ;
		END
		
	IF N.CID = @N_TAG_NEAR_CURRENT_POSITION_ID THEN ! LpProc.NearCurrentPosition ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.FIND.POSITION.NUM" ;
		END
		
	IF N.CID = @N_TAG_NEAR_DESTINATION_ID THEN ! LpProc.NearDestination ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.FIND.DESTINATION.NUM" ;
		END
		
	IF N.CID = @N_TAG_ALONG_ROUTE_ID THEN ! LpProc.AlongRoute ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.FIND.ROUTE.NUM" ;
		END
		
	IF N.CID = @N_TAG_PREVIOUS_POINT_ID THEN ! LpProc.PreviousPoint ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.PREVIOUS.POINT.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_PREVIOUS_DESTINATION_ID THEN ! LpProc.PreviousDestination ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.PREVIOUS.DESTINATION.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_PREVIOUS_SEARCH_ID THEN ! LpProc.PreviousSearch ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.PREVIOUS.SEARCH.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_PREVIOUS_START_ID THEN ! LpProc.PreviousStart ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.PREVIOUS.START.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_DESTINATION_INFO_ID THEN ! LpProc.DestinationInfo ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.DESTINATION.SETTING\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_ROUTE_OPTION_ID THEN ! LpProc.RouteOption ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.DESTINATION.SETTING\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_SHOW_ROUTE_ID THEN ! LpProc.ShowRoute ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.DESTINATION.SETTING\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_ADD_WAYPOINT_ID THEN ! LpProc.AddWaypoint ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.WAYPOINT.CONDITION" ;
		END
		
	IF N.CID = @N_TAG_GO_HOME_ID THEN ! LpProc.GoHome ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.HOME.REGISTERED\fN.NAVI.DESTINATION.SETTING\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_GO_TO_OFFICE_ID THEN ! LpProc.GoToOffice ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.OFFICE.REGISTERED\fN.NAVI.DESTINATION.SETTING\fN.NAVI.SDCARD.EXIST" ; 
		END
		
	IF N.CID = @N_TAG_EMERGENCY_SERVICES_ID THEN ! LpProc.EmergencyServices ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.EMERGENCYSERVICES.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_POLICE_STATION_ID THEN ! LpProc.PoliceStation ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.POLICESTATION.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_HOSPITAL_ID THEN ! LpProc.Hospital ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.HOSPITAL.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_DEALERSHIP_ID THEN ! LpProc.Dealership ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.DEALERSHIP.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_ROAD_ASSISTANCE_ID THEN ! LpProc.RoadAssistance ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROADASSISTANCE.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST\fN.NAVI.SDCARD.EXIST" ;
		END
		
	IF N.CID = @N_TAG_CANCEL_ROUTE_ID THEN ! LpProc.CancelRoute ()
		BEGIN
			MESSAGE "(VH) \fN.NAVI.ROUTE.CALCULATE\fN.NAVI.DESTINATION.SETTING\fN.NAVI.WAYPOINT.CONDITION\fN.NAVI.SDCARD.EXIST" ;
		END
		
	! GENERAL
	IF N.CID = @N_TAG_YES_ID THEN ! LpProc.Yes ()
		BEGIN
			MESSAGE "(VH) \fN.BT.DEVICE.PAIRED" ;
		END
		
	IF N.CID = @N_TAG_NAVI_YES_ID THEN ! LpProc.NaviYes ()
		BEGIN
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_GO_HOME_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.HOME.REGISTERED\fN.NAVI.DESTINATION.SETTING\fN.NAVI.CURRENT.REGION" ;
				END
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_GO_TO_OFFICE_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.OFFICE.REGISTERED\fN.NAVI.DESTINATION.SETTING\fN.NAVI.CURRENT.REGION" ;
				END
		END
		
	IF N.CID = @N_TAG_NAVI_NO_ID THEN ! LpProc.NaviNo ()
		BEGIN
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_GO_HOME_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.HOME.REGISTERED" ;
				END
			IF S.PRE.RESULT.FIX.CID = "\@N_TAG_GO_TO_OFFICE_ID" THEN
				BEGIN
					MESSAGE "(VH) \fN.NAVI.OFFICE.REGISTERED" ;
				END
		END
		
	IF N.CID = @N_TAG_LINE_NUMBER_ID THEN ! LpProc.LineNumber ()
		BEGIN
			MESSAGE "(VH) \fN.BT.NAME.TYPE\fS.AVN.SELECT.SLOT\fS.BT.NAME.SELECT\fS.BT.NAME.TTS\fN.GLOBAL.LISTITEM.NUM\fN.GLOBAL.NBEST.RESULT.NUM\fN.BT.CATEGORY.NUM\fN.BT.SELECT.CATEGORY.EXIST\fN.BT.CATEGORY.NUMBER.NUM" ;
		END
		
	IF N.CID = @N_TAG_NAVI_LINE_NUMBER_ID THEN ! LpProc.NaviLineNumber ()
		BEGIN
			! SYSTEM CALL
			S.INNER.TEMP.STRING := "N.GLOBAL.LISTITEM.NUM" ;
			
			IF $N.STATUS.DIALOG = @N_DIALOG_NAVI_NBEST_LIST THEN
				BEGIN
					S.INNER.TEMP.STRING := S.INNER.TEMP.STRING + "\fN.NAVI.ADDRESS.NUM\fN.NAVI.DESTINATION.SETTING\fN.NAVI.HOUSENUMBER.EXIST" ;
				END
			IF $N.STATUS.DIALOG = @N_DIALOG_NAVI_LIST | $N.STATUS.DIALOG = @N_DIALOG_NAVI_PREVIOUS_POINT | $N.STATUS.DIALOG = @N_DIALOG_NAVI_PREVIOUS_DESTINATION | 
				$N.STATUS.DIALOG = @N_DIALOG_NAVI_PREVIOUS_SEARCH | $N.STATUS.DIALOG = @N_DIALOG_NAVI_PREVIOUS_START | $N.STATUS.DIALOG = @N_DIALOG_NAVI_FIND_CATEGORY_LIST THEN
				BEGIN
					S.INNER.TEMP.STRING := S.INNER.TEMP.STRING + "\fN.NAVI.DESTINATION.SETTING\fN.NAVI.PHONE.NUMBER.EXIST" ;
				END
			IF $N.STATUS.DIALOG = @N_DIALOG_NAVI_FULL_ADDRESS_LIST THEN
				BEGIN
					S.INNER.TEMP.STRING := S.INNER.TEMP.STRING + "\fN.NAVI.DESTINATION.SETTING" ;
				END
				
			MESSAGE "(VH) \f" + S.INNER.TEMP.STRING ;
		END
		
	IF N.CID = @N_TAG_NEXT_PAGE_ID | N.CID = @N_TAG_PREVIOUS_PAGE_ID THEN ! LpProc.NextPage (), LpProc.PreviousPage ()
		BEGIN
			MESSAGE "(VH) \fN.GLOBAL.LISTITEM.REMAIN" ;
		END
		
	IF N.CID = @N_TAG_MANUAL_QUESTION_MARK_ID | N.CID = @N_TAG_MANUAL_PHONE_QUESTION_MARK_ID | N.CID = @N_TAG_MANUAL_RADIO_QUESTION_MARK_ID | N.CID = @N_TAG_MANUAL_MEDIA_QUESTION_MARK_ID |
	 N.CID = @N_TAG_MANUAL_NAVI_QUESTION_MARK_ID | N.CID = @N_TAG_MANUAL_INPUT_ID THEN ! LpProc.ManualQuestionMark (), LpProc.ManualInput ()
		BEGIN
			MESSAGE "(VH) \fN.SYSTEM.DRIVING" ;
		END
EOP

! 현재 DIALOG와 동일한 DIALOG로 천이하는 경우,
! TRANSITION DIALOG를 REPEAT DIALOG로 변경하여 BACK DIALOG STACK 관리
JINIE Common.RepeatControl ()

	! REPEAT CONTROL
	IF $N.STATUS.DIALOG = $N.TRANSITION.DIALOG THEN
		BEGIN
			$N.TRANSITION.DIALOG := @N_DIALOG_REPEAT ;
		END
EOP

! 모드에 따른 FEEDBACK PROMPT 설정
JINIE Common.FeedbackPromptControl ()
	
	! FEEDBACK PROMPT CONTROL
	IF N.CONTROL.RECOGNITION.MODE = 0 THEN
		BEGIN
			$S.PROMPT.FEEDBACK.EXPRESSION := "\"" + S.INNER.PROMPT.KINDLY.STR + "\"" ;
		END
	ELSE
		BEGIN
			$S.PROMPT.FEEDBACK.EXPRESSION := "\"" + S.INNER.PROMPT.SIMPLY.STR + "\"" ;
		END
EOP

! ON SCREEN TEXT에 해당하는 FEEDBACK TEXT 및 LID 전달
! FEEDBACK 출력 후 마다 초기화가 필요한 항목에 대하여 초기화 수행
JINIE Common.FeedbackOnScreenText ()

	! LID
	$N.PROMPT.GUIDANCE.ID := N.SCREEN.PROMPT ;
	$N.PROMPT.FEEDBACK.ID := N.SCREEN.PROMPT ;
	
	! ON SCREEN TEXT
	IF S.INNER.PROMPT.DISPLY.STR = "" THEN
		BEGIN
			$S.PROMPT.FEEDBACK.TEXT := $S.PROMPT.FEEDBACK.EXPRESSION ;
		END
	ELSE 
		BEGIN
			$S.PROMPT.FEEDBACK.TEXT := "\"" + S.INNER.PROMPT.DISPLY.STR + "\"" ;
		END
		
	! UNINITAL
	$S.RESULT.STRING := "" ;
	$S.STT.RESULT.STRING := "" ;
	$S.STT.RESULT.ONLINE.STRING := "" ;
	$S.STT.RESULT.OFFLINE.STRING := "" ;
EOP

! 기본 PROMPT, TRANSITION DIALOG 설정
JINIE Common.FeedbackBasicSetting ()

	S.INNER.PROMPT.KINDLY.STR := "" ;
	S.INNER.PROMPT.SIMPLY.STR := "" ;
	S.INNER.PROMPT.DISPLY.STR := "" ;
	N.EXIT.ACTION.TRANSITION := 99999 ;
	$N.TRANSITION.DIALOG := @N_DIALOG_EXIT ;
EOP
